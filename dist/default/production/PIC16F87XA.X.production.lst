

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Nov 04 23:02:07 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.20
    13                           ; Generated 12/02/2020 GMT
    14                           ; 
    15                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  009F                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010E                     	;# 
   103  010F                     	;# 
   104  018C                     	;# 
   105  018D                     	;# 
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  0007                     	;# 
   114  0008                     	;# 
   115  0009                     	;# 
   116  000A                     	;# 
   117  000B                     	;# 
   118  000C                     	;# 
   119  000D                     	;# 
   120  000E                     	;# 
   121  000E                     	;# 
   122  000F                     	;# 
   123  0010                     	;# 
   124  0011                     	;# 
   125  0012                     	;# 
   126  0013                     	;# 
   127  0014                     	;# 
   128  0015                     	;# 
   129  0015                     	;# 
   130  0016                     	;# 
   131  0017                     	;# 
   132  0018                     	;# 
   133  0019                     	;# 
   134  001A                     	;# 
   135  001B                     	;# 
   136  001B                     	;# 
   137  001C                     	;# 
   138  001D                     	;# 
   139  001E                     	;# 
   140  001F                     	;# 
   141  0081                     	;# 
   142  0085                     	;# 
   143  0086                     	;# 
   144  0087                     	;# 
   145  0088                     	;# 
   146  0089                     	;# 
   147  008C                     	;# 
   148  008D                     	;# 
   149  008E                     	;# 
   150  0091                     	;# 
   151  0092                     	;# 
   152  0093                     	;# 
   153  0094                     	;# 
   154  0098                     	;# 
   155  0099                     	;# 
   156  009C                     	;# 
   157  009D                     	;# 
   158  009E                     	;# 
   159  009F                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  0000                     	;# 
   167  0001                     	;# 
   168  0002                     	;# 
   169  0003                     	;# 
   170  0004                     	;# 
   171  0005                     	;# 
   172  0006                     	;# 
   173  0007                     	;# 
   174  0008                     	;# 
   175  0009                     	;# 
   176  000A                     	;# 
   177  000B                     	;# 
   178  000C                     	;# 
   179  000D                     	;# 
   180  000E                     	;# 
   181  000E                     	;# 
   182  000F                     	;# 
   183  0010                     	;# 
   184  0011                     	;# 
   185  0012                     	;# 
   186  0013                     	;# 
   187  0014                     	;# 
   188  0015                     	;# 
   189  0015                     	;# 
   190  0016                     	;# 
   191  0017                     	;# 
   192  0018                     	;# 
   193  0019                     	;# 
   194  001A                     	;# 
   195  001B                     	;# 
   196  001B                     	;# 
   197  001C                     	;# 
   198  001D                     	;# 
   199  001E                     	;# 
   200  001F                     	;# 
   201  0081                     	;# 
   202  0085                     	;# 
   203  0086                     	;# 
   204  0087                     	;# 
   205  0088                     	;# 
   206  0089                     	;# 
   207  008C                     	;# 
   208  008D                     	;# 
   209  008E                     	;# 
   210  0091                     	;# 
   211  0092                     	;# 
   212  0093                     	;# 
   213  0094                     	;# 
   214  0098                     	;# 
   215  0099                     	;# 
   216  009C                     	;# 
   217  009D                     	;# 
   218  009E                     	;# 
   219  009F                     	;# 
   220  010C                     	;# 
   221  010D                     	;# 
   222  010E                     	;# 
   223  010F                     	;# 
   224  018C                     	;# 
   225  018D                     	;# 
   226  0009                     _PORTE	set	9
   227  0008                     _PORTD	set	8
   228  0007                     _PORTC	set	7
   229  0006                     _PORTB	set	6
   230  0005                     _PORTA	set	5
   231  0089                     _TRISE	set	137
   232  0088                     _TRISD	set	136
   233  0087                     _TRISC	set	135
   234  0086                     _TRISB	set	134
   235  0085                     _TRISA	set	133
   236                           
   237                           	psect	cinit
   238  07FC                     start_initialization:	
   239                           ; #config settings
   240                           
   241  07FC                     __initialization:
   242  07FC                     end_of_initialization:	
   243                           ;End of C runtime variable initialization code
   244                           
   245  07FC                     __end_of__initialization:
   246  07FC  0183               	clrf	3
   247  07FD  120A  118A  2F05   	ljmp	_main	;jump to C main() function
   248                           
   249                           	psect	cstackCOMMON
   250  0070                     __pcstackCOMMON:
   251  0070                     ?_setPortDir:
   252  0070                     ?_setPortData:	
   253                           ; 1 bytes @ 0x0
   254                           
   255  0070                     ?_togglePortData:	
   256                           ; 1 bytes @ 0x0
   257                           
   258  0070                     ?_main:	
   259                           ; 1 bytes @ 0x0
   260                           
   261  0070                     setPortDir@portNum:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0070                     setPortData@portNum:	
   265                           ; 2 bytes @ 0x0
   266                           
   267  0070                     togglePortData@portNum:	
   268                           ; 2 bytes @ 0x0
   269                           
   270                           
   271                           ; 2 bytes @ 0x0
   272  0070                     	ds	2
   273  0072                     ??_togglePortData:
   274  0072                     setPortDir@state:	
   275                           ; 1 bytes @ 0x2
   276                           
   277  0072                     setPortData@data:	
   278                           ; 2 bytes @ 0x2
   279                           
   280                           
   281                           ; 2 bytes @ 0x2
   282  0072                     	ds	2
   283  0074                     ??_setPortDir:
   284  0074                     ??_setPortData:	
   285                           ; 1 bytes @ 0x4
   286                           
   287  0074                     ??_main:	
   288                           ; 1 bytes @ 0x4
   289                           
   290                           
   291                           ; 1 bytes @ 0x4
   292  0074                     	ds	1
   293                           
   294                           	psect	maintext
   295  0705                     __pmaintext:	
   296 ;;
   297 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   298 ;;
   299 ;; *************** function _main *****************
   300 ;; Defined at:
   301 ;;		line 14 in file "main.c"
   302 ;; Parameters:    Size  Location     Type
   303 ;;		None
   304 ;; Auto vars:     Size  Location     Type
   305 ;;  count           2    0        int 
   306 ;; Return value:  Size  Location     Type
   307 ;;                  1    wreg      void 
   308 ;; Registers used:
   309 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   310 ;; Tracked objects:
   311 ;;		On entry : B00/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   315 ;;      Params:         0       0       0       0       0
   316 ;;      Locals:         0       0       0       0       0
   317 ;;      Temps:          1       0       0       0       0
   318 ;;      Totals:         1       0       0       0       0
   319 ;;Total ram usage:        1 bytes
   320 ;; Hardware stack levels required when called: 1
   321 ;; This function calls:
   322 ;;		_setPortData
   323 ;;		_setPortDir
   324 ;;		_togglePortData
   325 ;; This function is called by:
   326 ;;		Startup code after reset
   327 ;; This function uses a non-reentrant model
   328 ;;
   329                           
   330                           
   331                           ;psect for function _main
   332  0705                     _main:
   333  0705                     l1077:	
   334                           ;incstack = 0
   335                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   336                           
   337                           
   338                           ;main.c: 15:     setPortDir(1,0);
   339  0705  3001               	movlw	1
   340  0706  00F0               	movwf	setPortDir@portNum
   341  0707  3000               	movlw	0
   342  0708  00F1               	movwf	setPortDir@portNum+1
   343  0709  3000               	movlw	0
   344  070A  00F2               	movwf	setPortDir@state
   345  070B  00F3               	movwf	setPortDir@state+1
   346  070C  120A  118A  279B  120A  118A  	fcall	_setPortDir
   347                           
   348                           ;main.c: 16:     setPortData(1,7);
   349  0711  3001               	movlw	1
   350  0712  00F0               	movwf	setPortData@portNum
   351  0713  3000               	movlw	0
   352  0714  00F1               	movwf	setPortData@portNum+1
   353  0715  3007               	movlw	7
   354  0716  00F2               	movwf	setPortData@data
   355  0717  3000               	movlw	0
   356  0718  00F3               	movwf	setPortData@data+1
   357  0719  120A  118A  272F  120A  118A  	fcall	_setPortData
   358  071E                     l1079:
   359  071E                     l1081:
   360                           
   361                           ;main.c: 27:         togglePortData(1),
   362  071E  3001               	movlw	1
   363  071F  00F0               	movwf	togglePortData@portNum
   364  0720  3000               	movlw	0
   365  0721  00F1               	movwf	togglePortData@portNum+1
   366  0722  120A  118A  2760  120A  118A  	fcall	_togglePortData
   367  0727                     l1083:
   368  0727  3021               	movlw	33
   369  0728  00F4               	movwf	??_main
   370  0729                     u307:
   371  0729  0BF4               	decfsz	??_main,f
   372  072A  2F29               	goto	u307
   373  072B  2F1E               	goto	l1081
   374  072C  120A  118A  2800   	ljmp	start
   375  072F                     __end_of_main:
   376                           
   377                           	psect	text1
   378  0760                     __ptext1:	
   379 ;; *************** function _togglePortData *****************
   380 ;; Defined at:
   381 ;;		line 99 in file "MIO.c"
   382 ;; Parameters:    Size  Location     Type
   383 ;;  portNum         2    0[COMMON] int 
   384 ;; Auto vars:     Size  Location     Type
   385 ;;		None
   386 ;; Return value:  Size  Location     Type
   387 ;;                  1    wreg      void 
   388 ;; Registers used:
   389 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   390 ;; Tracked objects:
   391 ;;		On entry : 0/0
   392 ;;		On exit  : 0/0
   393 ;;		Unchanged: 0/0
   394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   395 ;;      Params:         2       0       0       0       0
   396 ;;      Locals:         0       0       0       0       0
   397 ;;      Temps:          1       0       0       0       0
   398 ;;      Totals:         3       0       0       0       0
   399 ;;Total ram usage:        3 bytes
   400 ;; Hardware stack levels used: 1
   401 ;; This function calls:
   402 ;;		Nothing
   403 ;; This function is called by:
   404 ;;		_main
   405 ;; This function uses a non-reentrant model
   406 ;;
   407                           
   408                           
   409                           ;psect for function _togglePortData
   410  0760                     _togglePortData:
   411  0760                     l1059:	
   412                           ;incstack = 0
   413                           ; Regs used in _togglePortData: [wreg-fsr0h+status,2+status,0]
   414                           
   415                           
   416                           ;MIO.c: 101: switch (portNum) {
   417  0760  2F84               	goto	l1071
   418  0761                     l1061:
   419                           
   420                           ;MIO.c: 103:             PORTA ^= 0xFF;
   421  0761  30FF               	movlw	255
   422  0762  00F2               	movwf	??_togglePortData
   423  0763  0872               	movf	??_togglePortData,w
   424  0764  1283               	bcf	3,5	;RP0=0, select bank0
   425  0765  1303               	bcf	3,6	;RP1=0, select bank0
   426  0766  0685               	xorwf	5,f	;volatile
   427                           
   428                           ;MIO.c: 104:             break;
   429  0767  2F9A               	goto	l90
   430  0768                     l1063:
   431                           
   432                           ;MIO.c: 106:             PORTB ^= 0xFF;
   433  0768  30FF               	movlw	255
   434  0769  00F2               	movwf	??_togglePortData
   435  076A  0872               	movf	??_togglePortData,w
   436  076B  1283               	bcf	3,5	;RP0=0, select bank0
   437  076C  1303               	bcf	3,6	;RP1=0, select bank0
   438  076D  0686               	xorwf	6,f	;volatile
   439                           
   440                           ;MIO.c: 107:             break;
   441  076E  2F9A               	goto	l90
   442  076F                     l1065:
   443                           
   444                           ;MIO.c: 109:             PORTC ^= 0xFF;
   445  076F  30FF               	movlw	255
   446  0770  00F2               	movwf	??_togglePortData
   447  0771  0872               	movf	??_togglePortData,w
   448  0772  1283               	bcf	3,5	;RP0=0, select bank0
   449  0773  1303               	bcf	3,6	;RP1=0, select bank0
   450  0774  0687               	xorwf	7,f	;volatile
   451                           
   452                           ;MIO.c: 110:             break;
   453  0775  2F9A               	goto	l90
   454  0776                     l1067:
   455                           
   456                           ;MIO.c: 112:             PORTD ^= 0xFF;
   457  0776  30FF               	movlw	255
   458  0777  00F2               	movwf	??_togglePortData
   459  0778  0872               	movf	??_togglePortData,w
   460  0779  1283               	bcf	3,5	;RP0=0, select bank0
   461  077A  1303               	bcf	3,6	;RP1=0, select bank0
   462  077B  0688               	xorwf	8,f	;volatile
   463                           
   464                           ;MIO.c: 113:             break;
   465  077C  2F9A               	goto	l90
   466  077D                     l1069:
   467                           
   468                           ;MIO.c: 115:             PORTE ^= 0xFF;
   469  077D  30FF               	movlw	255
   470  077E  00F2               	movwf	??_togglePortData
   471  077F  0872               	movf	??_togglePortData,w
   472  0780  1283               	bcf	3,5	;RP0=0, select bank0
   473  0781  1303               	bcf	3,6	;RP1=0, select bank0
   474  0782  0689               	xorwf	9,f	;volatile
   475                           
   476                           ;MIO.c: 116:             break;
   477  0783  2F9A               	goto	l90
   478  0784                     l1071:
   479                           
   480                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   481                           ; Switch size 1, requested type "simple"
   482                           ; Number of cases is 1, Range of values is 0 to 0
   483                           ; switch strategies available:
   484                           ; Name         Instructions Cycles
   485                           ; simple_byte            4     3 (average)
   486                           ; direct_byte           11     8 (fixed)
   487                           ; jumptable            260     6 (fixed)
   488                           ;	Chosen strategy is simple_byte
   489  0784  0871               	movf	togglePortData@portNum+1,w
   490  0785  3A00               	xorlw	0	; case 0
   491  0786  1903               	skipnz
   492  0787  2F89               	goto	l1165
   493  0788  2F9A               	goto	l90
   494  0789                     l1165:
   495                           
   496                           ; Switch size 1, requested type "simple"
   497                           ; Number of cases is 5, Range of values is 0 to 4
   498                           ; switch strategies available:
   499                           ; Name         Instructions Cycles
   500                           ; simple_byte           16     9 (average)
   501                           ; direct_byte           23     8 (fixed)
   502                           ; jumptable            260     6 (fixed)
   503                           ;	Chosen strategy is simple_byte
   504  0789  0870               	movf	togglePortData@portNum,w
   505  078A  3A00               	xorlw	0	; case 0
   506  078B  1903               	skipnz
   507  078C  2F61               	goto	l1061
   508  078D  3A01               	xorlw	1	; case 1
   509  078E  1903               	skipnz
   510  078F  2F68               	goto	l1063
   511  0790  3A03               	xorlw	3	; case 2
   512  0791  1903               	skipnz
   513  0792  2F6F               	goto	l1065
   514  0793  3A01               	xorlw	1	; case 3
   515  0794  1903               	skipnz
   516  0795  2F76               	goto	l1067
   517  0796  3A07               	xorlw	7	; case 4
   518  0797  1903               	skipnz
   519  0798  2F7D               	goto	l1069
   520  0799  2F9A               	goto	l90
   521  079A                     l90:
   522  079A  0008               	return
   523  079B                     __end_of_togglePortData:
   524                           
   525                           	psect	text2
   526  079B                     __ptext2:	
   527 ;; *************** function _setPortDir *****************
   528 ;; Defined at:
   529 ;;		line 28 in file "MIO.c"
   530 ;; Parameters:    Size  Location     Type
   531 ;;  portNum         2    0[COMMON] int 
   532 ;;  state           2    2[COMMON] int 
   533 ;; Auto vars:     Size  Location     Type
   534 ;;		None
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      void 
   537 ;; Registers used:
   538 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   544 ;;      Params:         4       0       0       0       0
   545 ;;      Locals:         0       0       0       0       0
   546 ;;      Temps:          0       0       0       0       0
   547 ;;      Totals:         4       0       0       0       0
   548 ;;Total ram usage:        4 bytes
   549 ;; Hardware stack levels used: 1
   550 ;; This function calls:
   551 ;;		Nothing
   552 ;; This function is called by:
   553 ;;		_main
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           
   558                           ;psect for function _setPortDir
   559  079B                     _setPortDir:
   560  079B                     l1005:	
   561                           ;incstack = 0
   562                           ; Regs used in _setPortDir: [wreg-fsr0h+status,2+status,0]
   563                           
   564                           
   565                           ;MIO.c: 29:          if (state) {
   566  079B  0872               	movf	setPortDir@state,w
   567  079C  0473               	iorwf	setPortDir@state+1,w
   568  079D  1903               	btfsc	3,2
   569  079E  2FA0               	goto	u291
   570  079F  2FA1               	goto	u290
   571  07A0                     u291:
   572  07A0  2FE5               	goto	l1031
   573  07A1                     u290:
   574  07A1  2FBB               	goto	l1019
   575  07A2                     l1009:
   576                           
   577                           ;MIO.c: 33:                 TRISA = 0xFF;
   578  07A2  30FF               	movlw	255
   579  07A3  1683               	bsf	3,5	;RP0=1, select bank1
   580  07A4  1303               	bcf	3,6	;RP1=0, select bank1
   581  07A5  0085               	movwf	5	;volatile
   582                           
   583                           ;MIO.c: 34:                 break;
   584  07A6  2FFB               	goto	l68
   585  07A7                     l1011:
   586                           
   587                           ;MIO.c: 36:                 TRISB = 0xFF;
   588  07A7  30FF               	movlw	255
   589  07A8  1683               	bsf	3,5	;RP0=1, select bank1
   590  07A9  1303               	bcf	3,6	;RP1=0, select bank1
   591  07AA  0086               	movwf	6	;volatile
   592                           
   593                           ;MIO.c: 37:                 break;
   594  07AB  2FFB               	goto	l68
   595  07AC                     l1013:
   596                           
   597                           ;MIO.c: 39:                 TRISC = 0xFF;
   598  07AC  30FF               	movlw	255
   599  07AD  1683               	bsf	3,5	;RP0=1, select bank1
   600  07AE  1303               	bcf	3,6	;RP1=0, select bank1
   601  07AF  0087               	movwf	7	;volatile
   602                           
   603                           ;MIO.c: 40:                 break;
   604  07B0  2FFB               	goto	l68
   605  07B1                     l1015:
   606                           
   607                           ;MIO.c: 42:                 TRISD = 0xFF;
   608  07B1  30FF               	movlw	255
   609  07B2  1683               	bsf	3,5	;RP0=1, select bank1
   610  07B3  1303               	bcf	3,6	;RP1=0, select bank1
   611  07B4  0088               	movwf	8	;volatile
   612                           
   613                           ;MIO.c: 43:                 break;
   614  07B5  2FFB               	goto	l68
   615  07B6                     l1017:
   616                           
   617                           ;MIO.c: 45:                 TRISE |= 0xFF;
   618  07B6  30FF               	movlw	255
   619  07B7  1683               	bsf	3,5	;RP0=1, select bank1
   620  07B8  1303               	bcf	3,6	;RP1=0, select bank1
   621  07B9  0089               	movwf	9	;volatile
   622                           
   623                           ;MIO.c: 46:                 break;
   624  07BA  2FFB               	goto	l68
   625  07BB                     l1019:
   626                           
   627                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   628                           ; Switch size 1, requested type "simple"
   629                           ; Number of cases is 1, Range of values is 0 to 0
   630                           ; switch strategies available:
   631                           ; Name         Instructions Cycles
   632                           ; simple_byte            4     3 (average)
   633                           ; direct_byte           11     8 (fixed)
   634                           ; jumptable            260     6 (fixed)
   635                           ;	Chosen strategy is simple_byte
   636  07BB  0871               	movf	setPortDir@portNum+1,w
   637  07BC  3A00               	xorlw	0	; case 0
   638  07BD  1903               	skipnz
   639  07BE  2FC0               	goto	l1167
   640  07BF  2FFB               	goto	l68
   641  07C0                     l1167:
   642                           
   643                           ; Switch size 1, requested type "simple"
   644                           ; Number of cases is 5, Range of values is 0 to 4
   645                           ; switch strategies available:
   646                           ; Name         Instructions Cycles
   647                           ; simple_byte           16     9 (average)
   648                           ; direct_byte           23     8 (fixed)
   649                           ; jumptable            260     6 (fixed)
   650                           ;	Chosen strategy is simple_byte
   651  07C0  0870               	movf	setPortDir@portNum,w
   652  07C1  3A00               	xorlw	0	; case 0
   653  07C2  1903               	skipnz
   654  07C3  2FA2               	goto	l1009
   655  07C4  3A01               	xorlw	1	; case 1
   656  07C5  1903               	skipnz
   657  07C6  2FA7               	goto	l1011
   658  07C7  3A03               	xorlw	3	; case 2
   659  07C8  1903               	skipnz
   660  07C9  2FAC               	goto	l1013
   661  07CA  3A01               	xorlw	1	; case 3
   662  07CB  1903               	skipnz
   663  07CC  2FB1               	goto	l1015
   664  07CD  3A07               	xorlw	7	; case 4
   665  07CE  1903               	skipnz
   666  07CF  2FB6               	goto	l1017
   667  07D0  2FFB               	goto	l68
   668  07D1                     l1021:
   669                           
   670                           ;MIO.c: 55:                 TRISA = 0x00;
   671  07D1  1683               	bsf	3,5	;RP0=1, select bank1
   672  07D2  1303               	bcf	3,6	;RP1=0, select bank1
   673  07D3  0185               	clrf	5	;volatile
   674                           
   675                           ;MIO.c: 56:                 break;
   676  07D4  2FFB               	goto	l68
   677  07D5                     l1023:
   678                           
   679                           ;MIO.c: 58:                 TRISB = 0x00;
   680  07D5  1683               	bsf	3,5	;RP0=1, select bank1
   681  07D6  1303               	bcf	3,6	;RP1=0, select bank1
   682  07D7  0186               	clrf	6	;volatile
   683                           
   684                           ;MIO.c: 59:                 break;
   685  07D8  2FFB               	goto	l68
   686  07D9                     l1025:
   687                           
   688                           ;MIO.c: 61:                 TRISC = 0x00;
   689  07D9  1683               	bsf	3,5	;RP0=1, select bank1
   690  07DA  1303               	bcf	3,6	;RP1=0, select bank1
   691  07DB  0187               	clrf	7	;volatile
   692                           
   693                           ;MIO.c: 62:                 break;
   694  07DC  2FFB               	goto	l68
   695  07DD                     l1027:
   696                           
   697                           ;MIO.c: 64:                 TRISD = 0x00;
   698  07DD  1683               	bsf	3,5	;RP0=1, select bank1
   699  07DE  1303               	bcf	3,6	;RP1=0, select bank1
   700  07DF  0188               	clrf	8	;volatile
   701                           
   702                           ;MIO.c: 65:                 break;
   703  07E0  2FFB               	goto	l68
   704  07E1                     l1029:
   705                           
   706                           ;MIO.c: 67:                 TRISE = 0x00;
   707  07E1  1683               	bsf	3,5	;RP0=1, select bank1
   708  07E2  1303               	bcf	3,6	;RP1=0, select bank1
   709  07E3  0189               	clrf	9	;volatile
   710                           
   711                           ;MIO.c: 68:                 break;
   712  07E4  2FFB               	goto	l68
   713  07E5                     l1031:
   714                           
   715                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   716                           ; Switch size 1, requested type "simple"
   717                           ; Number of cases is 1, Range of values is 0 to 0
   718                           ; switch strategies available:
   719                           ; Name         Instructions Cycles
   720                           ; simple_byte            4     3 (average)
   721                           ; direct_byte           11     8 (fixed)
   722                           ; jumptable            260     6 (fixed)
   723                           ;	Chosen strategy is simple_byte
   724  07E5  0871               	movf	setPortDir@portNum+1,w
   725  07E6  3A00               	xorlw	0	; case 0
   726  07E7  1903               	skipnz
   727  07E8  2FEA               	goto	l1169
   728  07E9  2FFB               	goto	l68
   729  07EA                     l1169:
   730                           
   731                           ; Switch size 1, requested type "simple"
   732                           ; Number of cases is 5, Range of values is 0 to 4
   733                           ; switch strategies available:
   734                           ; Name         Instructions Cycles
   735                           ; simple_byte           16     9 (average)
   736                           ; direct_byte           23     8 (fixed)
   737                           ; jumptable            260     6 (fixed)
   738                           ;	Chosen strategy is simple_byte
   739  07EA  0870               	movf	setPortDir@portNum,w
   740  07EB  3A00               	xorlw	0	; case 0
   741  07EC  1903               	skipnz
   742  07ED  2FD1               	goto	l1021
   743  07EE  3A01               	xorlw	1	; case 1
   744  07EF  1903               	skipnz
   745  07F0  2FD5               	goto	l1023
   746  07F1  3A03               	xorlw	3	; case 2
   747  07F2  1903               	skipnz
   748  07F3  2FD9               	goto	l1025
   749  07F4  3A01               	xorlw	1	; case 3
   750  07F5  1903               	skipnz
   751  07F6  2FDD               	goto	l1027
   752  07F7  3A07               	xorlw	7	; case 4
   753  07F8  1903               	skipnz
   754  07F9  2FE1               	goto	l1029
   755  07FA  2FFB               	goto	l68
   756  07FB                     l68:
   757  07FB  0008               	return
   758  07FC                     __end_of_setPortDir:
   759                           
   760                           	psect	text3
   761  072F                     __ptext3:	
   762 ;; *************** function _setPortData *****************
   763 ;; Defined at:
   764 ;;		line 77 in file "MIO.c"
   765 ;; Parameters:    Size  Location     Type
   766 ;;  portNum         2    0[COMMON] int 
   767 ;;  data            2    2[COMMON] int 
   768 ;; Auto vars:     Size  Location     Type
   769 ;;		None
   770 ;; Return value:  Size  Location     Type
   771 ;;                  1    wreg      void 
   772 ;; Registers used:
   773 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   779 ;;      Params:         4       0       0       0       0
   780 ;;      Locals:         0       0       0       0       0
   781 ;;      Temps:          0       0       0       0       0
   782 ;;      Totals:         4       0       0       0       0
   783 ;;Total ram usage:        4 bytes
   784 ;; Hardware stack levels used: 1
   785 ;; This function calls:
   786 ;;		Nothing
   787 ;; This function is called by:
   788 ;;		_main
   789 ;; This function uses a non-reentrant model
   790 ;;
   791                           
   792                           
   793                           ;psect for function _setPortData
   794  072F                     _setPortData:
   795  072F                     l1041:	
   796                           ;incstack = 0
   797                           ; Regs used in _setPortData: [wreg-fsr0h+status,2+status,0]
   798                           
   799                           
   800                           ;MIO.c: 78: switch (portNum) {
   801  072F  2F49               	goto	l1053
   802  0730                     l1043:
   803                           
   804                           ;MIO.c: 80:             PORTA = data;
   805  0730  0872               	movf	setPortData@data,w
   806  0731  1283               	bcf	3,5	;RP0=0, select bank0
   807  0732  1303               	bcf	3,6	;RP1=0, select bank0
   808  0733  0085               	movwf	5	;volatile
   809                           
   810                           ;MIO.c: 81:             break;
   811  0734  2F5F               	goto	l79
   812  0735                     l1045:
   813                           
   814                           ;MIO.c: 83:             PORTB = data;
   815  0735  0872               	movf	setPortData@data,w
   816  0736  1283               	bcf	3,5	;RP0=0, select bank0
   817  0737  1303               	bcf	3,6	;RP1=0, select bank0
   818  0738  0086               	movwf	6	;volatile
   819                           
   820                           ;MIO.c: 84:             break;
   821  0739  2F5F               	goto	l79
   822  073A                     l1047:
   823                           
   824                           ;MIO.c: 86:             PORTC = data;
   825  073A  0872               	movf	setPortData@data,w
   826  073B  1283               	bcf	3,5	;RP0=0, select bank0
   827  073C  1303               	bcf	3,6	;RP1=0, select bank0
   828  073D  0087               	movwf	7	;volatile
   829                           
   830                           ;MIO.c: 87:             break;
   831  073E  2F5F               	goto	l79
   832  073F                     l1049:
   833                           
   834                           ;MIO.c: 89:             PORTD = data;
   835  073F  0872               	movf	setPortData@data,w
   836  0740  1283               	bcf	3,5	;RP0=0, select bank0
   837  0741  1303               	bcf	3,6	;RP1=0, select bank0
   838  0742  0088               	movwf	8	;volatile
   839                           
   840                           ;MIO.c: 90:             break;
   841  0743  2F5F               	goto	l79
   842  0744                     l1051:
   843                           
   844                           ;MIO.c: 92:             PORTE = data;
   845  0744  0872               	movf	setPortData@data,w
   846  0745  1283               	bcf	3,5	;RP0=0, select bank0
   847  0746  1303               	bcf	3,6	;RP1=0, select bank0
   848  0747  0089               	movwf	9	;volatile
   849                           
   850                           ;MIO.c: 93:             break;
   851  0748  2F5F               	goto	l79
   852  0749                     l1053:
   853                           
   854                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   855                           ; Switch size 1, requested type "simple"
   856                           ; Number of cases is 1, Range of values is 0 to 0
   857                           ; switch strategies available:
   858                           ; Name         Instructions Cycles
   859                           ; simple_byte            4     3 (average)
   860                           ; direct_byte           11     8 (fixed)
   861                           ; jumptable            260     6 (fixed)
   862                           ;	Chosen strategy is simple_byte
   863  0749  0871               	movf	setPortData@portNum+1,w
   864  074A  3A00               	xorlw	0	; case 0
   865  074B  1903               	skipnz
   866  074C  2F4E               	goto	l1171
   867  074D  2F5F               	goto	l79
   868  074E                     l1171:
   869                           
   870                           ; Switch size 1, requested type "simple"
   871                           ; Number of cases is 5, Range of values is 0 to 4
   872                           ; switch strategies available:
   873                           ; Name         Instructions Cycles
   874                           ; simple_byte           16     9 (average)
   875                           ; direct_byte           23     8 (fixed)
   876                           ; jumptable            260     6 (fixed)
   877                           ;	Chosen strategy is simple_byte
   878  074E  0870               	movf	setPortData@portNum,w
   879  074F  3A00               	xorlw	0	; case 0
   880  0750  1903               	skipnz
   881  0751  2F30               	goto	l1043
   882  0752  3A01               	xorlw	1	; case 1
   883  0753  1903               	skipnz
   884  0754  2F35               	goto	l1045
   885  0755  3A03               	xorlw	3	; case 2
   886  0756  1903               	skipnz
   887  0757  2F3A               	goto	l1047
   888  0758  3A01               	xorlw	1	; case 3
   889  0759  1903               	skipnz
   890  075A  2F3F               	goto	l1049
   891  075B  3A07               	xorlw	7	; case 4
   892  075C  1903               	skipnz
   893  075D  2F44               	goto	l1051
   894  075E  2F5F               	goto	l79
   895  075F                     l79:
   896  075F  0008               	return
   897  0760                     __end_of_setPortData:
   898  007E                     btemp	set	126	;btemp
   899  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_setPortData
    _main->_setPortDir

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     601
                                              4 COMMON     1     1      0
                        _setPortData
                         _setPortDir
                     _togglePortData
 ---------------------------------------------------------------------------------
 (1) _togglePortData                                       3     1      2      98
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _setPortDir                                           4     0      4     218
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _setPortData                                          4     0      4     284
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setPortData
   _setPortDir
   _togglePortData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Nov 04 23:02:07 2021

                     l90 079A                       l68 07FB                       l79 075F  
                    u307 0729                      u290 07A1                      u291 07A0  
                   l1011 07A7                     l1021 07D1                     l1013 07AC  
                   l1005 079B                     l1023 07D5                     l1015 07B1  
                   l1031 07E5                     l1041 072F                     l1025 07D9  
                   l1017 07B6                     l1009 07A2                     l1051 0744  
                   l1043 0730                     l1027 07DD                     l1019 07BB  
                   l1045 0735                     l1053 0749                     l1029 07E1  
                   l1061 0761                     l1047 073A                     l1063 0768  
                   l1071 0784                     l1049 073F                     l1065 076F  
                   l1081 071E                     l1171 074E                     l1067 0776  
                   l1059 0760                     l1083 0727                     l1165 0789  
                   l1069 077D                     l1077 0705                     l1167 07C0  
                   l1079 071E                     l1169 07EA          ?_togglePortData 0070  
                   _main 0705                     btemp 007E                     start 0000  
                  ?_main 0070                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 072F  
                 ??_main 0074          setPortData@data 0072          setPortDir@state 0072  
           ?_setPortData 0070  __end_of__initialization 07FC       setPortData@portNum 0070  
         __pcstackCOMMON 0070         ??_togglePortData 0072               __pmaintext 0705  
  togglePortData@portNum 0070     __size_of_setPortData 0031                  __ptext1 0760  
                __ptext2 079B                  __ptext3 072F     end_of_initialization 07FC  
             _setPortDir 079B      start_initialization 07FC              ?_setPortDir 0070  
              ___latbits 0002        setPortDir@portNum 0070      __size_of_setPortDir 0061  
          ??_setPortData 0074  __size_of_togglePortData 003B      __end_of_setPortData 0760  
           ??_setPortDir 0074            __size_of_main 002A       __end_of_setPortDir 07FC  
            _setPortData 072F           _togglePortData 0760   __end_of_togglePortData 079B  
