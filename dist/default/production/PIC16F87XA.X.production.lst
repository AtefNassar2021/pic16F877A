

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Nov 09 21:00:45 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  009F                     	;# 
   105  010C                     	;# 
   106  010D                     	;# 
   107  010E                     	;# 
   108  010F                     	;# 
   109  018C                     	;# 
   110  018D                     	;# 
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0008                     	;# 
   120  0009                     	;# 
   121  000A                     	;# 
   122  000B                     	;# 
   123  000C                     	;# 
   124  000D                     	;# 
   125  000E                     	;# 
   126  000E                     	;# 
   127  000F                     	;# 
   128  0010                     	;# 
   129  0011                     	;# 
   130  0012                     	;# 
   131  0013                     	;# 
   132  0014                     	;# 
   133  0015                     	;# 
   134  0015                     	;# 
   135  0016                     	;# 
   136  0017                     	;# 
   137  0018                     	;# 
   138  0019                     	;# 
   139  001A                     	;# 
   140  001B                     	;# 
   141  001B                     	;# 
   142  001C                     	;# 
   143  001D                     	;# 
   144  001E                     	;# 
   145  001F                     	;# 
   146  0081                     	;# 
   147  0085                     	;# 
   148  0086                     	;# 
   149  0087                     	;# 
   150  0088                     	;# 
   151  0089                     	;# 
   152  008C                     	;# 
   153  008D                     	;# 
   154  008E                     	;# 
   155  0091                     	;# 
   156  0092                     	;# 
   157  0093                     	;# 
   158  0094                     	;# 
   159  0098                     	;# 
   160  0099                     	;# 
   161  009C                     	;# 
   162  009D                     	;# 
   163  009E                     	;# 
   164  009F                     	;# 
   165  010C                     	;# 
   166  010D                     	;# 
   167  010E                     	;# 
   168  010F                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  0000                     	;# 
   172  0001                     	;# 
   173  0002                     	;# 
   174  0003                     	;# 
   175  0004                     	;# 
   176  0005                     	;# 
   177  0006                     	;# 
   178  0007                     	;# 
   179  0008                     	;# 
   180  0009                     	;# 
   181  000A                     	;# 
   182  000B                     	;# 
   183  000C                     	;# 
   184  000D                     	;# 
   185  000E                     	;# 
   186  000E                     	;# 
   187  000F                     	;# 
   188  0010                     	;# 
   189  0011                     	;# 
   190  0012                     	;# 
   191  0013                     	;# 
   192  0014                     	;# 
   193  0015                     	;# 
   194  0015                     	;# 
   195  0016                     	;# 
   196  0017                     	;# 
   197  0018                     	;# 
   198  0019                     	;# 
   199  001A                     	;# 
   200  001B                     	;# 
   201  001B                     	;# 
   202  001C                     	;# 
   203  001D                     	;# 
   204  001E                     	;# 
   205  001F                     	;# 
   206  0081                     	;# 
   207  0085                     	;# 
   208  0086                     	;# 
   209  0087                     	;# 
   210  0088                     	;# 
   211  0089                     	;# 
   212  008C                     	;# 
   213  008D                     	;# 
   214  008E                     	;# 
   215  0091                     	;# 
   216  0092                     	;# 
   217  0093                     	;# 
   218  0094                     	;# 
   219  0098                     	;# 
   220  0099                     	;# 
   221  009C                     	;# 
   222  009D                     	;# 
   223  009E                     	;# 
   224  009F                     	;# 
   225  010C                     	;# 
   226  010D                     	;# 
   227  010E                     	;# 
   228  010F                     	;# 
   229  018C                     	;# 
   230  018D                     	;# 
   231  0000                     	;# 
   232  0001                     	;# 
   233  0002                     	;# 
   234  0003                     	;# 
   235  0004                     	;# 
   236  0005                     	;# 
   237  0006                     	;# 
   238  0007                     	;# 
   239  0008                     	;# 
   240  0009                     	;# 
   241  000A                     	;# 
   242  000B                     	;# 
   243  000C                     	;# 
   244  000D                     	;# 
   245  000E                     	;# 
   246  000E                     	;# 
   247  000F                     	;# 
   248  0010                     	;# 
   249  0011                     	;# 
   250  0012                     	;# 
   251  0013                     	;# 
   252  0014                     	;# 
   253  0015                     	;# 
   254  0015                     	;# 
   255  0016                     	;# 
   256  0017                     	;# 
   257  0018                     	;# 
   258  0019                     	;# 
   259  001A                     	;# 
   260  001B                     	;# 
   261  001B                     	;# 
   262  001C                     	;# 
   263  001D                     	;# 
   264  001E                     	;# 
   265  001F                     	;# 
   266  0081                     	;# 
   267  0085                     	;# 
   268  0086                     	;# 
   269  0087                     	;# 
   270  0088                     	;# 
   271  0089                     	;# 
   272  008C                     	;# 
   273  008D                     	;# 
   274  008E                     	;# 
   275  0091                     	;# 
   276  0092                     	;# 
   277  0093                     	;# 
   278  0094                     	;# 
   279  0098                     	;# 
   280  0099                     	;# 
   281  009C                     	;# 
   282  009D                     	;# 
   283  009E                     	;# 
   284  009F                     	;# 
   285  010C                     	;# 
   286  010D                     	;# 
   287  010E                     	;# 
   288  010F                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291  0000                     	;# 
   292  0001                     	;# 
   293  0002                     	;# 
   294  0003                     	;# 
   295  0004                     	;# 
   296  0005                     	;# 
   297  0006                     	;# 
   298  0007                     	;# 
   299  0008                     	;# 
   300  0009                     	;# 
   301  000A                     	;# 
   302  000B                     	;# 
   303  000C                     	;# 
   304  000D                     	;# 
   305  000E                     	;# 
   306  000E                     	;# 
   307  000F                     	;# 
   308  0010                     	;# 
   309  0011                     	;# 
   310  0012                     	;# 
   311  0013                     	;# 
   312  0014                     	;# 
   313  0015                     	;# 
   314  0015                     	;# 
   315  0016                     	;# 
   316  0017                     	;# 
   317  0018                     	;# 
   318  0019                     	;# 
   319  001A                     	;# 
   320  001B                     	;# 
   321  001B                     	;# 
   322  001C                     	;# 
   323  001D                     	;# 
   324  001E                     	;# 
   325  001F                     	;# 
   326  0081                     	;# 
   327  0085                     	;# 
   328  0086                     	;# 
   329  0087                     	;# 
   330  0088                     	;# 
   331  0089                     	;# 
   332  008C                     	;# 
   333  008D                     	;# 
   334  008E                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0094                     	;# 
   339  0098                     	;# 
   340  0099                     	;# 
   341  009C                     	;# 
   342  009D                     	;# 
   343  009E                     	;# 
   344  009F                     	;# 
   345  010C                     	;# 
   346  010D                     	;# 
   347  010E                     	;# 
   348  010F                     	;# 
   349  018C                     	;# 
   350  018D                     	;# 
   351  0009                     _PORTE	set	9
   352  0008                     _PORTD	set	8
   353  0007                     _PORTC	set	7
   354  0006                     _PORTB	set	6
   355  0005                     _PORTA	set	5
   356  005D                     _TMR0IE	set	93
   357  0039                     _RC1	set	57
   358  0038                     _RC0	set	56
   359  003A                     _RC2	set	58
   360  0081                     _OPTION_REG	set	129
   361  0089                     _TRISE	set	137
   362  0088                     _TRISD	set	136
   363  0087                     _TRISC	set	135
   364  0086                     _TRISB	set	134
   365  0085                     _TRISA	set	133
   366  040B                     _PSA	set	1035
   367                           
   368                           	psect	cinit
   369  0000'                    start_initialization:	
   370                           ; #config settings
   371                           
   372  0000'                    __initialization:
   373  0000'                    end_of_initialization:	
   374                           ;End of C runtime variable initialization code
   375                           
   376  0000'                    __end_of__initialization:
   377  0000' 0183               	clrf	3
   378  0001' 120A' 118A' 2800'  	ljmp	_main	;jump to C main() function
   379                           
   380                           	psect	cstackCOMMON
   381  0000'                    __pcstackCOMMON:
   382  0000'                    ?_init_LCD:
   383  0000'                    ?_LCD_cmd:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0000'                    ?_setPortData:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0000'                    ??_setPortData:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0000'                    ?_main:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0000'                    ?_setPortDir:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0000'                    ?_setPinDir:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0000'                    ?_setPinData:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0000'                    ?_LCD_enable:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0000'                    ?_LCD_clear:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0000'                    setPortDir@portNum:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0000'                    setPinDir@portNum:	
   414                           ; 2 bytes @ 0x0
   415                           
   416  0000'                    setPinData@portNum:	
   417                           ; 2 bytes @ 0x0
   418                           
   419  0000'                    _setPortData$0:	
   420                           ; 2 bytes @ 0x0
   421                           
   422                           
   423                           ; 2 bytes @ 0x0
   424  0000'                    	ds	2
   425  0002'                    setPortDir@state:
   426  0002'                    setPinDir@pinNum:	
   427                           ; 2 bytes @ 0x2
   428                           
   429  0002'                    setPinData@pinNum:	
   430                           ; 2 bytes @ 0x2
   431                           
   432  0002'                    _setPortData$1:	
   433                           ; 2 bytes @ 0x2
   434                           
   435                           
   436                           ; 2 bytes @ 0x2
   437  0002'                    	ds	2
   438  0004'                    ??_setPortDir:
   439  0004'                    setPinDir@state:	
   440                           ; 1 bytes @ 0x4
   441                           
   442  0004'                    setPinData@data:	
   443                           ; 2 bytes @ 0x4
   444                           
   445                           
   446                           ; 2 bytes @ 0x4
   447  0004'                    	ds	2
   448  0006'                    ??_setPinDir:
   449  0006'                    ??_setPinData:	
   450                           ; 1 bytes @ 0x6
   451                           
   452                           
   453                           ; 1 bytes @ 0x6
   454  0006'                    	ds	2
   455  0008'                    ??_LCD_enable:
   456                           
   457                           ; 1 bytes @ 0x8
   458  0008'                    	ds	2
   459  000A'                    ??_LCD_cmd:
   460                           
   461                           ; 1 bytes @ 0xA
   462  000A'                    	ds	2
   463  000C'                    LCD_cmd@cmd:
   464                           
   465                           ; 1 bytes @ 0xC
   466  000C'                    	ds	1
   467  000D'                    ??_LCD_clear:
   468                           
   469                           ; 1 bytes @ 0xD
   470  000D'                    	ds	1
   471  000E'                    ??_main:
   472                           
   473                           	psect	cstackBANK0
   474  0000'                    __pcstackBANK0:	
   475                           ; 1 bytes @ 0xE
   476                           
   477  0000'                    ??_init_LCD:
   478                           
   479                           ; 1 bytes @ 0x0
   480  0000'                    	ds	2
   481                           
   482                           	psect	maintext
   483  0000'                    __pmaintext:	
   484 ;;
   485 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   486 ;;
   487 ;; *************** function _main *****************
   488 ;; Defined at:
   489 ;;		line 15 in file "main.c"
   490 ;; Parameters:    Size  Location     Type
   491 ;;		None
   492 ;; Auto vars:     Size  Location     Type
   493 ;;		None
   494 ;; Return value:  Size  Location     Type
   495 ;;                  1    wreg      void 
   496 ;; Registers used:
   497 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   498 ;; Tracked objects:
   499 ;;		On entry : B00/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   503 ;;      Params:         0       0       0       0       0
   504 ;;      Locals:         0       0       0       0       0
   505 ;;      Temps:          0       0       0       0       0
   506 ;;      Totals:         0       0       0       0       0
   507 ;;Total ram usage:        0 bytes
   508 ;; Hardware stack levels required when called: 5
   509 ;; This function calls:
   510 ;;		_init_LCD
   511 ;; This function is called by:
   512 ;;		Startup code after reset
   513 ;; This function uses a non-reentrant model
   514 ;;
   515                           
   516                           
   517                           ;psect for function _main
   518  0000'                    _main:
   519  0000'                    l1309:	
   520                           ;incstack = 0
   521                           ; Regs used in _main: [allreg]
   522                           
   523                           
   524                           ;main.c: 17:     init_LCD();
   525  0000' 120A' 118A' 2000' 120A' 118A' 	fcall	_init_LCD
   526  0005'                    l7:	
   527                           ;main.c: 23:     while(1){
   528                           
   529  0005'                    l8:	
   530                           ;main.c: 26:         }
   531                           
   532  0005' 2800'              	goto	l7
   533  0006' 120A' 118A' 2800'  	ljmp	start
   534  0009'                    __end_of_main:
   535                           
   536                           	psect	text1
   537  0000'                    __ptext1:	
   538 ;; *************** function _init_LCD *****************
   539 ;; Defined at:
   540 ;;		line 17 in file "LCD.c"
   541 ;; Parameters:    Size  Location     Type
   542 ;;		None
   543 ;; Auto vars:     Size  Location     Type
   544 ;;		None
   545 ;; Return value:  Size  Location     Type
   546 ;;                  1    wreg      void 
   547 ;; Registers used:
   548 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   549 ;; Tracked objects:
   550 ;;		On entry : 0/0
   551 ;;		On exit  : 0/0
   552 ;;		Unchanged: 0/0
   553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   554 ;;      Params:         0       0       0       0       0
   555 ;;      Locals:         0       0       0       0       0
   556 ;;      Temps:          0       2       0       0       0
   557 ;;      Totals:         0       2       0       0       0
   558 ;;Total ram usage:        2 bytes
   559 ;; Hardware stack levels used: 1
   560 ;; Hardware stack levels required when called: 4
   561 ;; This function calls:
   562 ;;		_LCD_clear
   563 ;;		_LCD_cmd
   564 ;;		_setPinData
   565 ;;		_setPinDir
   566 ;;		_setPortDir
   567 ;; This function is called by:
   568 ;;		_main
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572                           
   573                           ;psect for function _init_LCD
   574  0000'                    _init_LCD:
   575  0000'                    l1279:	
   576                           ;incstack = 0
   577                           ; Regs used in _init_LCD: [allreg]
   578                           
   579                           
   580                           ;LCD.c: 19:     setPortDir(3, 0);
   581  0000' 3003               	movlw	3
   582  0001' 0080'              	movwf	setPortDir@portNum
   583  0002' 3000               	movlw	0
   584  0003' 0081'              	movwf	setPortDir@portNum+1
   585  0004' 3000               	movlw	0
   586  0005' 0082'              	movwf	setPortDir@state
   587  0006' 0083'              	movwf	setPortDir@state+1
   588  0007' 120A' 118A' 2000' 120A' 118A' 	fcall	_setPortDir
   589                           
   590                           ;LCD.c: 20:     setPinDir(2, RC0, 0);
   591  000C' 3002               	movlw	2
   592  000D' 0080'              	movwf	setPinDir@portNum
   593  000E' 3000               	movlw	0
   594  000F' 0081'              	movwf	setPinDir@portNum+1
   595  0010' 1003               	clrc
   596  0011' 1283               	bcf	3,5	;RP0=0, select bank0
   597  0012' 1303               	bcf	3,6	;RP1=0, select bank0
   598  0013' 1807               	btfsc	7,0	;volatile
   599  0014' 1403               	setc
   600  0015' 3000               	movlw	0
   601  0016' 1803               	skipnc
   602  0017' 3001               	movlw	1
   603  0018' 0080'              	movwf	??_init_LCD
   604  0019' 0181'              	clrf	??_init_LCD+1
   605  001A' 0800'              	movf	??_init_LCD,w
   606  001B' 0082'              	movwf	setPinDir@pinNum
   607  001C' 0801'              	movf	??_init_LCD+1,w
   608  001D' 0083'              	movwf	setPinDir@pinNum+1
   609  001E' 3000               	movlw	0
   610  001F' 0084'              	movwf	setPinDir@state
   611  0020' 0085'              	movwf	setPinDir@state+1
   612  0021' 120A' 118A' 2000' 120A' 118A' 	fcall	_setPinDir
   613                           
   614                           ;LCD.c: 21:     setPinDir(2, RC1, 0);
   615  0026' 3002               	movlw	2
   616  0027' 0080'              	movwf	setPinDir@portNum
   617  0028' 3000               	movlw	0
   618  0029' 0081'              	movwf	setPinDir@portNum+1
   619  002A' 1003               	clrc
   620  002B' 1283               	bcf	3,5	;RP0=0, select bank0
   621  002C' 1303               	bcf	3,6	;RP1=0, select bank0
   622  002D' 1887               	btfsc	7,1	;volatile
   623  002E' 1403               	setc
   624  002F' 3000               	movlw	0
   625  0030' 1803               	skipnc
   626  0031' 3001               	movlw	1
   627  0032' 0080'              	movwf	??_init_LCD
   628  0033' 0181'              	clrf	??_init_LCD+1
   629  0034' 0800'              	movf	??_init_LCD,w
   630  0035' 0082'              	movwf	setPinDir@pinNum
   631  0036' 0801'              	movf	??_init_LCD+1,w
   632  0037' 0083'              	movwf	setPinDir@pinNum+1
   633  0038' 3000               	movlw	0
   634  0039' 0084'              	movwf	setPinDir@state
   635  003A' 0085'              	movwf	setPinDir@state+1
   636  003B' 120A' 118A' 2000' 120A' 118A' 	fcall	_setPinDir
   637                           
   638                           ;LCD.c: 22:     setPinDir(2, RC2, 0);
   639  0040' 3002               	movlw	2
   640  0041' 0080'              	movwf	setPinDir@portNum
   641  0042' 3000               	movlw	0
   642  0043' 0081'              	movwf	setPinDir@portNum+1
   643  0044' 1003               	clrc
   644  0045' 1283               	bcf	3,5	;RP0=0, select bank0
   645  0046' 1303               	bcf	3,6	;RP1=0, select bank0
   646  0047' 1907               	btfsc	7,2	;volatile
   647  0048' 1403               	setc
   648  0049' 3000               	movlw	0
   649  004A' 1803               	skipnc
   650  004B' 3001               	movlw	1
   651  004C' 0080'              	movwf	??_init_LCD
   652  004D' 0181'              	clrf	??_init_LCD+1
   653  004E' 0800'              	movf	??_init_LCD,w
   654  004F' 0082'              	movwf	setPinDir@pinNum
   655  0050' 0801'              	movf	??_init_LCD+1,w
   656  0051' 0083'              	movwf	setPinDir@pinNum+1
   657  0052' 3000               	movlw	0
   658  0053' 0084'              	movwf	setPinDir@state
   659  0054' 0085'              	movwf	setPinDir@state+1
   660  0055' 120A' 118A' 2000' 120A' 118A' 	fcall	_setPinDir
   661                           
   662                           ;LCD.c: 24:     setPinData(2, RC1, 0);
   663  005A' 3002               	movlw	2
   664  005B' 0080'              	movwf	setPinData@portNum
   665  005C' 3000               	movlw	0
   666  005D' 0081'              	movwf	setPinData@portNum+1
   667  005E' 1003               	clrc
   668  005F' 1283               	bcf	3,5	;RP0=0, select bank0
   669  0060' 1303               	bcf	3,6	;RP1=0, select bank0
   670  0061' 1887               	btfsc	7,1	;volatile
   671  0062' 1403               	setc
   672  0063' 3000               	movlw	0
   673  0064' 1803               	skipnc
   674  0065' 3001               	movlw	1
   675  0066' 0080'              	movwf	??_init_LCD
   676  0067' 0181'              	clrf	??_init_LCD+1
   677  0068' 0800'              	movf	??_init_LCD,w
   678  0069' 0082'              	movwf	setPinData@pinNum
   679  006A' 0801'              	movf	??_init_LCD+1,w
   680  006B' 0083'              	movwf	setPinData@pinNum+1
   681  006C' 3000               	movlw	0
   682  006D' 0084'              	movwf	setPinData@data
   683  006E' 0085'              	movwf	setPinData@data+1
   684  006F' 120A' 118A' 2000' 120A' 118A' 	fcall	_setPinData
   685  0074'                    l1281:
   686                           
   687                           ;LCD.c: 27:     _delay(100);
   688  0074' 3020               	movlw	32
   689  0075' 1283               	bcf	3,5	;RP0=0, select bank0
   690  0076' 1303               	bcf	3,6	;RP1=0, select bank0
   691  0077' 0080'              	movwf	??_init_LCD
   692  0078'                    u567:
   693  0078' 0B80'              	decfsz	??_init_LCD,f
   694  0079' 2800'              	goto	u567
   695  007A' 0000               	nop
   696  007B'                    l1283:
   697                           
   698                           ;LCD.c: 28:     LCD_clear();
   699  007B' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_clear
   700  0080'                    l1285:
   701                           
   702                           ;LCD.c: 30:     LCD_cmd(0x38);
   703  0080' 3038               	movlw	56
   704  0081' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_cmd
   705  0086'                    l1287:
   706                           
   707                           ;LCD.c: 31:     _delay(100);
   708  0086' 3020               	movlw	32
   709  0087' 1283               	bcf	3,5	;RP0=0, select bank0
   710  0088' 1303               	bcf	3,6	;RP1=0, select bank0
   711  0089' 0080'              	movwf	??_init_LCD
   712  008A'                    u577:
   713  008A' 0B80'              	decfsz	??_init_LCD,f
   714  008B' 2800'              	goto	u577
   715  008C' 0000               	nop
   716  008D'                    l1289:
   717                           
   718                           ;LCD.c: 32:     LCD_cmd(0x0C);
   719  008D' 300C               	movlw	12
   720  008E' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_cmd
   721  0093'                    l1291:
   722                           
   723                           ;LCD.c: 33:     _delay(100);
   724  0093' 3020               	movlw	32
   725  0094' 1283               	bcf	3,5	;RP0=0, select bank0
   726  0095' 1303               	bcf	3,6	;RP1=0, select bank0
   727  0096' 0080'              	movwf	??_init_LCD
   728  0097'                    u587:
   729  0097' 0B80'              	decfsz	??_init_LCD,f
   730  0098' 2800'              	goto	u587
   731  0099' 0000               	nop
   732  009A'                    l1293:
   733                           
   734                           ;LCD.c: 34:     LCD_cmd(0x06);
   735  009A' 3006               	movlw	6
   736  009B' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_cmd
   737  00A0'                    l1295:
   738                           
   739                           ;LCD.c: 35:     _delay(100);
   740  00A0' 3020               	movlw	32
   741  00A1' 1283               	bcf	3,5	;RP0=0, select bank0
   742  00A2' 1303               	bcf	3,6	;RP1=0, select bank0
   743  00A3' 0080'              	movwf	??_init_LCD
   744  00A4'                    u597:
   745  00A4' 0B80'              	decfsz	??_init_LCD,f
   746  00A5' 2800'              	goto	u597
   747  00A6' 0000               	nop
   748  00A7'                    l1297:
   749                           
   750                           ;LCD.c: 36:     LCD_cmd(0x02);
   751  00A7' 3002               	movlw	2
   752  00A8' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_cmd
   753  00AD'                    l1299:
   754                           
   755                           ;LCD.c: 38:     _delay(500);
   756  00AD' 30A5               	movlw	165
   757  00AE' 1283               	bcf	3,5	;RP0=0, select bank0
   758  00AF' 1303               	bcf	3,6	;RP1=0, select bank0
   759  00B0' 0080'              	movwf	??_init_LCD
   760  00B1'                    u607:
   761  00B1' 0B80'              	decfsz	??_init_LCD,f
   762  00B2' 2800'              	goto	u607
   763  00B3' 2800'              	nop2
   764  00B4'                    l155:
   765  00B4' 0008               	return
   766  00B5'                    __end_of_init_LCD:
   767                           
   768                           	psect	text2
   769  0000'                    __ptext2:	
   770 ;; *************** function _setPortDir *****************
   771 ;; Defined at:
   772 ;;		line 28 in file "MIO.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;  portNum         2    0[COMMON] int 
   775 ;;  state           2    2[COMMON] int 
   776 ;; Auto vars:     Size  Location     Type
   777 ;;		None
   778 ;; Return value:  Size  Location     Type
   779 ;;                  1    wreg      void 
   780 ;; Registers used:
   781 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   782 ;; Tracked objects:
   783 ;;		On entry : 0/0
   784 ;;		On exit  : 0/0
   785 ;;		Unchanged: 0/0
   786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   787 ;;      Params:         4       0       0       0       0
   788 ;;      Locals:         0       0       0       0       0
   789 ;;      Temps:          0       0       0       0       0
   790 ;;      Totals:         4       0       0       0       0
   791 ;;Total ram usage:        4 bytes
   792 ;; Hardware stack levels used: 1
   793 ;; This function calls:
   794 ;;		Nothing
   795 ;; This function is called by:
   796 ;;		_init_LCD
   797 ;; This function uses a non-reentrant model
   798 ;;
   799                           
   800                           
   801                           ;psect for function _setPortDir
   802  0000'                    _setPortDir:
   803  0000'                    l1197:	
   804                           ;incstack = 0
   805                           ; Regs used in _setPortDir: [wreg-fsr0h+status,2+status,0]
   806                           
   807                           
   808                           ;MIO.c: 29:          if (state) {
   809  0000' 0802'              	movf	setPortDir@state,w
   810  0001' 0403'              	iorwf	setPortDir@state+1,w
   811  0002' 1903               	btfsc	3,2
   812  0003' 2800'              	goto	u431
   813  0004' 2800'              	goto	u430
   814  0005'                    u431:
   815  0005' 2800'              	goto	l1223
   816  0006'                    u430:
   817  0006' 2800'              	goto	l1211
   818  0007'                    l1201:
   819                           
   820                           ;MIO.c: 33:                 TRISA = 0xFF;
   821  0007' 30FF               	movlw	255
   822  0008' 1683               	bsf	3,5	;RP0=1, select bank1
   823  0009' 1303               	bcf	3,6	;RP1=0, select bank1
   824  000A' 0085               	movwf	5	;volatile
   825                           
   826                           ;MIO.c: 34:                 break;
   827  000B' 2800'              	goto	l62
   828  000C'                    l1203:
   829                           
   830                           ;MIO.c: 36:                 TRISB = 0xFF;
   831  000C' 30FF               	movlw	255
   832  000D' 1683               	bsf	3,5	;RP0=1, select bank1
   833  000E' 1303               	bcf	3,6	;RP1=0, select bank1
   834  000F' 0086               	movwf	6	;volatile
   835                           
   836                           ;MIO.c: 37:                 break;
   837  0010' 2800'              	goto	l62
   838  0011'                    l1205:
   839                           
   840                           ;MIO.c: 39:                 TRISC = 0xFF;
   841  0011' 30FF               	movlw	255
   842  0012' 1683               	bsf	3,5	;RP0=1, select bank1
   843  0013' 1303               	bcf	3,6	;RP1=0, select bank1
   844  0014' 0087               	movwf	7	;volatile
   845                           
   846                           ;MIO.c: 40:                 break;
   847  0015' 2800'              	goto	l62
   848  0016'                    l1207:
   849                           
   850                           ;MIO.c: 42:                 TRISD = 0xFF;
   851  0016' 30FF               	movlw	255
   852  0017' 1683               	bsf	3,5	;RP0=1, select bank1
   853  0018' 1303               	bcf	3,6	;RP1=0, select bank1
   854  0019' 0088               	movwf	8	;volatile
   855                           
   856                           ;MIO.c: 43:                 break;
   857  001A' 2800'              	goto	l62
   858  001B'                    l1209:
   859                           
   860                           ;MIO.c: 45:                 TRISE |= 0xFF;
   861  001B' 30FF               	movlw	255
   862  001C' 1683               	bsf	3,5	;RP0=1, select bank1
   863  001D' 1303               	bcf	3,6	;RP1=0, select bank1
   864  001E' 0089               	movwf	9	;volatile
   865                           
   866                           ;MIO.c: 46:                 break;
   867  001F' 2800'              	goto	l62
   868  0020'                    l1211:
   869                           
   870                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   871                           ; Switch size 1, requested type "simple"
   872                           ; Number of cases is 1, Range of values is 0 to 0
   873                           ; switch strategies available:
   874                           ; Name         Instructions Cycles
   875                           ; simple_byte            4     3 (average)
   876                           ; direct_byte           11     8 (fixed)
   877                           ; jumptable            260     6 (fixed)
   878                           ;	Chosen strategy is simple_byte
   879  0020' 0801'              	movf	setPortDir@portNum+1,w
   880  0021' 3A00               	xorlw	0	; case 0
   881  0022' 1903               	skipnz
   882  0023' 2800'              	goto	l1433
   883  0024' 2800'              	goto	l62
   884  0025'                    l1433:
   885                           
   886                           ; Switch size 1, requested type "simple"
   887                           ; Number of cases is 5, Range of values is 0 to 4
   888                           ; switch strategies available:
   889                           ; Name         Instructions Cycles
   890                           ; simple_byte           16     9 (average)
   891                           ; direct_byte           23     8 (fixed)
   892                           ; jumptable            260     6 (fixed)
   893                           ;	Chosen strategy is simple_byte
   894  0025' 0800'              	movf	setPortDir@portNum,w
   895  0026' 3A00               	xorlw	0	; case 0
   896  0027' 1903               	skipnz
   897  0028' 2800'              	goto	l1201
   898  0029' 3A01               	xorlw	1	; case 1
   899  002A' 1903               	skipnz
   900  002B' 2800'              	goto	l1203
   901  002C' 3A03               	xorlw	3	; case 2
   902  002D' 1903               	skipnz
   903  002E' 2800'              	goto	l1205
   904  002F' 3A01               	xorlw	1	; case 3
   905  0030' 1903               	skipnz
   906  0031' 2800'              	goto	l1207
   907  0032' 3A07               	xorlw	7	; case 4
   908  0033' 1903               	skipnz
   909  0034' 2800'              	goto	l1209
   910  0035' 2800'              	goto	l62
   911  0036'                    l1213:
   912                           
   913                           ;MIO.c: 55:                 TRISA = 0x00;
   914  0036' 1683               	bsf	3,5	;RP0=1, select bank1
   915  0037' 1303               	bcf	3,6	;RP1=0, select bank1
   916  0038' 0185               	clrf	5	;volatile
   917                           
   918                           ;MIO.c: 56:                 break;
   919  0039' 2800'              	goto	l62
   920  003A'                    l1215:
   921                           
   922                           ;MIO.c: 58:                 TRISB = 0x00;
   923  003A' 1683               	bsf	3,5	;RP0=1, select bank1
   924  003B' 1303               	bcf	3,6	;RP1=0, select bank1
   925  003C' 0186               	clrf	6	;volatile
   926                           
   927                           ;MIO.c: 59:                 break;
   928  003D' 2800'              	goto	l62
   929  003E'                    l1217:
   930                           
   931                           ;MIO.c: 61:                 TRISC = 0x00;
   932  003E' 1683               	bsf	3,5	;RP0=1, select bank1
   933  003F' 1303               	bcf	3,6	;RP1=0, select bank1
   934  0040' 0187               	clrf	7	;volatile
   935                           
   936                           ;MIO.c: 62:                 break;
   937  0041' 2800'              	goto	l62
   938  0042'                    l1219:
   939                           
   940                           ;MIO.c: 64:                 TRISD = 0x00;
   941  0042' 1683               	bsf	3,5	;RP0=1, select bank1
   942  0043' 1303               	bcf	3,6	;RP1=0, select bank1
   943  0044' 0188               	clrf	8	;volatile
   944                           
   945                           ;MIO.c: 65:                 break;
   946  0045' 2800'              	goto	l62
   947  0046'                    l1221:
   948                           
   949                           ;MIO.c: 67:                 TRISE = 0x00;
   950  0046' 1683               	bsf	3,5	;RP0=1, select bank1
   951  0047' 1303               	bcf	3,6	;RP1=0, select bank1
   952  0048' 0189               	clrf	9	;volatile
   953                           
   954                           ;MIO.c: 68:                 break;
   955  0049' 2800'              	goto	l62
   956  004A'                    l1223:
   957                           
   958                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   959                           ; Switch size 1, requested type "simple"
   960                           ; Number of cases is 1, Range of values is 0 to 0
   961                           ; switch strategies available:
   962                           ; Name         Instructions Cycles
   963                           ; simple_byte            4     3 (average)
   964                           ; direct_byte           11     8 (fixed)
   965                           ; jumptable            260     6 (fixed)
   966                           ;	Chosen strategy is simple_byte
   967  004A' 0801'              	movf	setPortDir@portNum+1,w
   968  004B' 3A00               	xorlw	0	; case 0
   969  004C' 1903               	skipnz
   970  004D' 2800'              	goto	l1435
   971  004E' 2800'              	goto	l62
   972  004F'                    l1435:
   973                           
   974                           ; Switch size 1, requested type "simple"
   975                           ; Number of cases is 5, Range of values is 0 to 4
   976                           ; switch strategies available:
   977                           ; Name         Instructions Cycles
   978                           ; simple_byte           16     9 (average)
   979                           ; direct_byte           23     8 (fixed)
   980                           ; jumptable            260     6 (fixed)
   981                           ;	Chosen strategy is simple_byte
   982  004F' 0800'              	movf	setPortDir@portNum,w
   983  0050' 3A00               	xorlw	0	; case 0
   984  0051' 1903               	skipnz
   985  0052' 2800'              	goto	l1213
   986  0053' 3A01               	xorlw	1	; case 1
   987  0054' 1903               	skipnz
   988  0055' 2800'              	goto	l1215
   989  0056' 3A03               	xorlw	3	; case 2
   990  0057' 1903               	skipnz
   991  0058' 2800'              	goto	l1217
   992  0059' 3A01               	xorlw	1	; case 3
   993  005A' 1903               	skipnz
   994  005B' 2800'              	goto	l1219
   995  005C' 3A07               	xorlw	7	; case 4
   996  005D' 1903               	skipnz
   997  005E' 2800'              	goto	l1221
   998  005F' 2800'              	goto	l62
   999  0060'                    l62:
  1000  0060' 0008               	return
  1001  0061'                    __end_of_setPortDir:
  1002                           
  1003                           	psect	text3
  1004  0000'                    __ptext3:	
  1005 ;; *************** function _setPinDir *****************
  1006 ;; Defined at:
  1007 ;;		line 123 in file "MIO.c"
  1008 ;; Parameters:    Size  Location     Type
  1009 ;;  portNum         2    0[COMMON] int 
  1010 ;;  pinNum          2    2[COMMON] int 
  1011 ;;  state           2    4[COMMON] int 
  1012 ;; Auto vars:     Size  Location     Type
  1013 ;;		None
  1014 ;; Return value:  Size  Location     Type
  1015 ;;                  1    wreg      void 
  1016 ;; Registers used:
  1017 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1018 ;; Tracked objects:
  1019 ;;		On entry : 0/0
  1020 ;;		On exit  : 0/0
  1021 ;;		Unchanged: 0/0
  1022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1023 ;;      Params:         6       0       0       0       0
  1024 ;;      Locals:         0       0       0       0       0
  1025 ;;      Temps:          2       0       0       0       0
  1026 ;;      Totals:         8       0       0       0       0
  1027 ;;Total ram usage:        8 bytes
  1028 ;; Hardware stack levels used: 1
  1029 ;; This function calls:
  1030 ;;		Nothing
  1031 ;; This function is called by:
  1032 ;;		_init_LCD
  1033 ;; This function uses a non-reentrant model
  1034 ;;
  1035                           
  1036                           
  1037                           ;psect for function _setPinDir
  1038  0000'                    _setPinDir:
  1039  0000'                    l1233:	
  1040                           ;incstack = 0
  1041                           ; Regs used in _setPinDir: [wreg-fsr0h+status,2+status,0]
  1042                           
  1043                           
  1044                           ;MIO.c: 124: if (state) {
  1045  0000' 0804'              	movf	setPinDir@state,w
  1046  0001' 0405'              	iorwf	setPinDir@state+1,w
  1047  0002' 1903               	btfsc	3,2
  1048  0003' 2800'              	goto	u441
  1049  0004' 2800'              	goto	u440
  1050  0005'                    u441:
  1051  0005' 2800'              	goto	l1259
  1052  0006'                    u440:
  1053  0006' 2800'              	goto	l1247
  1054  0007'                    l1237:
  1055                           
  1056                           ;MIO.c: 128:                 TRISA |= (1 << pinNum);
  1057  0007' 3001               	movlw	1
  1058  0008' 0086'              	movwf	??_setPinDir
  1059  0009' 0A02'              	incf	setPinDir@pinNum,w
  1060  000A' 2800'              	goto	u454
  1061  000B'                    u455:
  1062  000B' 1003               	clrc
  1063  000C' 0D86'              	rlf	??_setPinDir,f
  1064  000D'                    u454:
  1065  000D' 3EFF               	addlw	-1
  1066  000E' 1D03               	skipz
  1067  000F' 2800'              	goto	u455
  1068  0010' 0806'              	movf	??_setPinDir,w
  1069  0011' 0087'              	movwf	??_setPinDir+1
  1070  0012' 0807'              	movf	??_setPinDir+1,w
  1071  0013' 1683               	bsf	3,5	;RP0=1, select bank1
  1072  0014' 1303               	bcf	3,6	;RP1=0, select bank1
  1073  0015' 0485               	iorwf	5,f	;volatile
  1074                           
  1075                           ;MIO.c: 129:                 break;
  1076  0016' 2800'              	goto	l94
  1077  0017'                    l1239:
  1078                           
  1079                           ;MIO.c: 131:                 TRISB |= (1 << pinNum);
  1080  0017' 3001               	movlw	1
  1081  0018' 0086'              	movwf	??_setPinDir
  1082  0019' 0A02'              	incf	setPinDir@pinNum,w
  1083  001A' 2800'              	goto	u464
  1084  001B'                    u465:
  1085  001B' 1003               	clrc
  1086  001C' 0D86'              	rlf	??_setPinDir,f
  1087  001D'                    u464:
  1088  001D' 3EFF               	addlw	-1
  1089  001E' 1D03               	skipz
  1090  001F' 2800'              	goto	u465
  1091  0020' 0806'              	movf	??_setPinDir,w
  1092  0021' 0087'              	movwf	??_setPinDir+1
  1093  0022' 0807'              	movf	??_setPinDir+1,w
  1094  0023' 1683               	bsf	3,5	;RP0=1, select bank1
  1095  0024' 1303               	bcf	3,6	;RP1=0, select bank1
  1096  0025' 0486               	iorwf	6,f	;volatile
  1097                           
  1098                           ;MIO.c: 132:                 break;
  1099  0026' 2800'              	goto	l94
  1100  0027'                    l1241:
  1101                           
  1102                           ;MIO.c: 134:                 TRISC |= (1 << pinNum);
  1103  0027' 3001               	movlw	1
  1104  0028' 0086'              	movwf	??_setPinDir
  1105  0029' 0A02'              	incf	setPinDir@pinNum,w
  1106  002A' 2800'              	goto	u474
  1107  002B'                    u475:
  1108  002B' 1003               	clrc
  1109  002C' 0D86'              	rlf	??_setPinDir,f
  1110  002D'                    u474:
  1111  002D' 3EFF               	addlw	-1
  1112  002E' 1D03               	skipz
  1113  002F' 2800'              	goto	u475
  1114  0030' 0806'              	movf	??_setPinDir,w
  1115  0031' 0087'              	movwf	??_setPinDir+1
  1116  0032' 0807'              	movf	??_setPinDir+1,w
  1117  0033' 1683               	bsf	3,5	;RP0=1, select bank1
  1118  0034' 1303               	bcf	3,6	;RP1=0, select bank1
  1119  0035' 0487               	iorwf	7,f	;volatile
  1120                           
  1121                           ;MIO.c: 135:                 break;
  1122  0036' 2800'              	goto	l94
  1123  0037'                    l1243:
  1124                           
  1125                           ;MIO.c: 137:                 TRISD |= (1 << pinNum);
  1126  0037' 3001               	movlw	1
  1127  0038' 0086'              	movwf	??_setPinDir
  1128  0039' 0A02'              	incf	setPinDir@pinNum,w
  1129  003A' 2800'              	goto	u484
  1130  003B'                    u485:
  1131  003B' 1003               	clrc
  1132  003C' 0D86'              	rlf	??_setPinDir,f
  1133  003D'                    u484:
  1134  003D' 3EFF               	addlw	-1
  1135  003E' 1D03               	skipz
  1136  003F' 2800'              	goto	u485
  1137  0040' 0806'              	movf	??_setPinDir,w
  1138  0041' 0087'              	movwf	??_setPinDir+1
  1139  0042' 0807'              	movf	??_setPinDir+1,w
  1140  0043' 1683               	bsf	3,5	;RP0=1, select bank1
  1141  0044' 1303               	bcf	3,6	;RP1=0, select bank1
  1142  0045' 0488               	iorwf	8,f	;volatile
  1143                           
  1144                           ;MIO.c: 138:                 break;
  1145  0046' 2800'              	goto	l94
  1146  0047'                    l1245:
  1147                           
  1148                           ;MIO.c: 140:                 TRISE |= (1 << pinNum);
  1149  0047' 3001               	movlw	1
  1150  0048' 0086'              	movwf	??_setPinDir
  1151  0049' 0A02'              	incf	setPinDir@pinNum,w
  1152  004A' 2800'              	goto	u494
  1153  004B'                    u495:
  1154  004B' 1003               	clrc
  1155  004C' 0D86'              	rlf	??_setPinDir,f
  1156  004D'                    u494:
  1157  004D' 3EFF               	addlw	-1
  1158  004E' 1D03               	skipz
  1159  004F' 2800'              	goto	u495
  1160  0050' 0806'              	movf	??_setPinDir,w
  1161  0051' 0087'              	movwf	??_setPinDir+1
  1162  0052' 0807'              	movf	??_setPinDir+1,w
  1163  0053' 1683               	bsf	3,5	;RP0=1, select bank1
  1164  0054' 1303               	bcf	3,6	;RP1=0, select bank1
  1165  0055' 0489               	iorwf	9,f	;volatile
  1166                           
  1167                           ;MIO.c: 141:                 break;
  1168  0056' 2800'              	goto	l94
  1169  0057'                    l1247:
  1170                           
  1171                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1172                           ; Switch size 1, requested type "simple"
  1173                           ; Number of cases is 1, Range of values is 0 to 0
  1174                           ; switch strategies available:
  1175                           ; Name         Instructions Cycles
  1176                           ; simple_byte            4     3 (average)
  1177                           ; direct_byte           11     8 (fixed)
  1178                           ; jumptable            260     6 (fixed)
  1179                           ;	Chosen strategy is simple_byte
  1180  0057' 0801'              	movf	setPinDir@portNum+1,w
  1181  0058' 3A00               	xorlw	0	; case 0
  1182  0059' 1903               	skipnz
  1183  005A' 2800'              	goto	l1437
  1184  005B' 2800'              	goto	l94
  1185  005C'                    l1437:
  1186                           
  1187                           ; Switch size 1, requested type "simple"
  1188                           ; Number of cases is 5, Range of values is 0 to 4
  1189                           ; switch strategies available:
  1190                           ; Name         Instructions Cycles
  1191                           ; simple_byte           16     9 (average)
  1192                           ; direct_byte           23     8 (fixed)
  1193                           ; jumptable            260     6 (fixed)
  1194                           ;	Chosen strategy is simple_byte
  1195  005C' 0800'              	movf	setPinDir@portNum,w
  1196  005D' 3A00               	xorlw	0	; case 0
  1197  005E' 1903               	skipnz
  1198  005F' 2800'              	goto	l1237
  1199  0060' 3A01               	xorlw	1	; case 1
  1200  0061' 1903               	skipnz
  1201  0062' 2800'              	goto	l1239
  1202  0063' 3A03               	xorlw	3	; case 2
  1203  0064' 1903               	skipnz
  1204  0065' 2800'              	goto	l1241
  1205  0066' 3A01               	xorlw	1	; case 3
  1206  0067' 1903               	skipnz
  1207  0068' 2800'              	goto	l1243
  1208  0069' 3A07               	xorlw	7	; case 4
  1209  006A' 1903               	skipnz
  1210  006B' 2800'              	goto	l1245
  1211  006C' 2800'              	goto	l94
  1212  006D'                    l1249:
  1213                           
  1214                           ;MIO.c: 150:                 TRISA &= ~(1 << pinNum);
  1215  006D' 3001               	movlw	1
  1216  006E' 0086'              	movwf	??_setPinDir
  1217  006F' 0A02'              	incf	setPinDir@pinNum,w
  1218  0070' 2800'              	goto	u504
  1219  0071'                    u505:
  1220  0071' 1003               	clrc
  1221  0072' 0D86'              	rlf	??_setPinDir,f
  1222  0073'                    u504:
  1223  0073' 3EFF               	addlw	-1
  1224  0074' 1D03               	skipz
  1225  0075' 2800'              	goto	u505
  1226  0076' 0806'              	movf	??_setPinDir,w
  1227  0077' 3AFF               	xorlw	255
  1228  0078' 0087'              	movwf	??_setPinDir+1
  1229  0079' 0807'              	movf	??_setPinDir+1,w
  1230  007A' 1683               	bsf	3,5	;RP0=1, select bank1
  1231  007B' 1303               	bcf	3,6	;RP1=0, select bank1
  1232  007C' 0585               	andwf	5,f	;volatile
  1233                           
  1234                           ;MIO.c: 151:                 break;
  1235  007D' 2800'              	goto	l94
  1236  007E'                    l1251:
  1237                           
  1238                           ;MIO.c: 153:                 TRISB &= ~(1 << pinNum);
  1239  007E' 3001               	movlw	1
  1240  007F' 0086'              	movwf	??_setPinDir
  1241  0080' 0A02'              	incf	setPinDir@pinNum,w
  1242  0081' 2800'              	goto	u514
  1243  0082'                    u515:
  1244  0082' 1003               	clrc
  1245  0083' 0D86'              	rlf	??_setPinDir,f
  1246  0084'                    u514:
  1247  0084' 3EFF               	addlw	-1
  1248  0085' 1D03               	skipz
  1249  0086' 2800'              	goto	u515
  1250  0087' 0806'              	movf	??_setPinDir,w
  1251  0088' 3AFF               	xorlw	255
  1252  0089' 0087'              	movwf	??_setPinDir+1
  1253  008A' 0807'              	movf	??_setPinDir+1,w
  1254  008B' 1683               	bsf	3,5	;RP0=1, select bank1
  1255  008C' 1303               	bcf	3,6	;RP1=0, select bank1
  1256  008D' 0586               	andwf	6,f	;volatile
  1257                           
  1258                           ;MIO.c: 154:                 break;
  1259  008E' 2800'              	goto	l94
  1260  008F'                    l1253:
  1261                           
  1262                           ;MIO.c: 156:                 TRISC &= ~(1 << pinNum);
  1263  008F' 3001               	movlw	1
  1264  0090' 0086'              	movwf	??_setPinDir
  1265  0091' 0A02'              	incf	setPinDir@pinNum,w
  1266  0092' 2800'              	goto	u524
  1267  0093'                    u525:
  1268  0093' 1003               	clrc
  1269  0094' 0D86'              	rlf	??_setPinDir,f
  1270  0095'                    u524:
  1271  0095' 3EFF               	addlw	-1
  1272  0096' 1D03               	skipz
  1273  0097' 2800'              	goto	u525
  1274  0098' 0806'              	movf	??_setPinDir,w
  1275  0099' 3AFF               	xorlw	255
  1276  009A' 0087'              	movwf	??_setPinDir+1
  1277  009B' 0807'              	movf	??_setPinDir+1,w
  1278  009C' 1683               	bsf	3,5	;RP0=1, select bank1
  1279  009D' 1303               	bcf	3,6	;RP1=0, select bank1
  1280  009E' 0587               	andwf	7,f	;volatile
  1281                           
  1282                           ;MIO.c: 157:                 break;
  1283  009F' 2800'              	goto	l94
  1284  00A0'                    l1255:
  1285                           
  1286                           ;MIO.c: 159:                 TRISD &= ~(1 << pinNum);
  1287  00A0' 3001               	movlw	1
  1288  00A1' 0086'              	movwf	??_setPinDir
  1289  00A2' 0A02'              	incf	setPinDir@pinNum,w
  1290  00A3' 2800'              	goto	u534
  1291  00A4'                    u535:
  1292  00A4' 1003               	clrc
  1293  00A5' 0D86'              	rlf	??_setPinDir,f
  1294  00A6'                    u534:
  1295  00A6' 3EFF               	addlw	-1
  1296  00A7' 1D03               	skipz
  1297  00A8' 2800'              	goto	u535
  1298  00A9' 0806'              	movf	??_setPinDir,w
  1299  00AA' 3AFF               	xorlw	255
  1300  00AB' 0087'              	movwf	??_setPinDir+1
  1301  00AC' 0807'              	movf	??_setPinDir+1,w
  1302  00AD' 1683               	bsf	3,5	;RP0=1, select bank1
  1303  00AE' 1303               	bcf	3,6	;RP1=0, select bank1
  1304  00AF' 0588               	andwf	8,f	;volatile
  1305                           
  1306                           ;MIO.c: 160:                 break;
  1307  00B0' 2800'              	goto	l94
  1308  00B1'                    l1257:
  1309                           
  1310                           ;MIO.c: 162:                 TRISE &= ~(1 << pinNum);
  1311  00B1' 3001               	movlw	1
  1312  00B2' 0086'              	movwf	??_setPinDir
  1313  00B3' 0A02'              	incf	setPinDir@pinNum,w
  1314  00B4' 2800'              	goto	u544
  1315  00B5'                    u545:
  1316  00B5' 1003               	clrc
  1317  00B6' 0D86'              	rlf	??_setPinDir,f
  1318  00B7'                    u544:
  1319  00B7' 3EFF               	addlw	-1
  1320  00B8' 1D03               	skipz
  1321  00B9' 2800'              	goto	u545
  1322  00BA' 0806'              	movf	??_setPinDir,w
  1323  00BB' 3AFF               	xorlw	255
  1324  00BC' 0087'              	movwf	??_setPinDir+1
  1325  00BD' 0807'              	movf	??_setPinDir+1,w
  1326  00BE' 1683               	bsf	3,5	;RP0=1, select bank1
  1327  00BF' 1303               	bcf	3,6	;RP1=0, select bank1
  1328  00C0' 0589               	andwf	9,f	;volatile
  1329                           
  1330                           ;MIO.c: 163:                 break;
  1331  00C1' 2800'              	goto	l94
  1332  00C2'                    l1259:
  1333                           
  1334                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1335                           ; Switch size 1, requested type "simple"
  1336                           ; Number of cases is 1, Range of values is 0 to 0
  1337                           ; switch strategies available:
  1338                           ; Name         Instructions Cycles
  1339                           ; simple_byte            4     3 (average)
  1340                           ; direct_byte           11     8 (fixed)
  1341                           ; jumptable            260     6 (fixed)
  1342                           ;	Chosen strategy is simple_byte
  1343  00C2' 0801'              	movf	setPinDir@portNum+1,w
  1344  00C3' 3A00               	xorlw	0	; case 0
  1345  00C4' 1903               	skipnz
  1346  00C5' 2800'              	goto	l1439
  1347  00C6' 2800'              	goto	l94
  1348  00C7'                    l1439:
  1349                           
  1350                           ; Switch size 1, requested type "simple"
  1351                           ; Number of cases is 5, Range of values is 0 to 4
  1352                           ; switch strategies available:
  1353                           ; Name         Instructions Cycles
  1354                           ; simple_byte           16     9 (average)
  1355                           ; direct_byte           23     8 (fixed)
  1356                           ; jumptable            260     6 (fixed)
  1357                           ;	Chosen strategy is simple_byte
  1358  00C7' 0800'              	movf	setPinDir@portNum,w
  1359  00C8' 3A00               	xorlw	0	; case 0
  1360  00C9' 1903               	skipnz
  1361  00CA' 2800'              	goto	l1249
  1362  00CB' 3A01               	xorlw	1	; case 1
  1363  00CC' 1903               	skipnz
  1364  00CD' 2800'              	goto	l1251
  1365  00CE' 3A03               	xorlw	3	; case 2
  1366  00CF' 1903               	skipnz
  1367  00D0' 2800'              	goto	l1253
  1368  00D1' 3A01               	xorlw	1	; case 3
  1369  00D2' 1903               	skipnz
  1370  00D3' 2800'              	goto	l1255
  1371  00D4' 3A07               	xorlw	7	; case 4
  1372  00D5' 1903               	skipnz
  1373  00D6' 2800'              	goto	l1257
  1374  00D7' 2800'              	goto	l94
  1375  00D8'                    l94:
  1376  00D8' 0008               	return
  1377  00D9'                    __end_of_setPinDir:
  1378                           
  1379                           	psect	text4
  1380  0000'                    __ptext4:	
  1381 ;; *************** function _LCD_clear *****************
  1382 ;; Defined at:
  1383 ;;		line 13 in file "LCD.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;		None
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;		None
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  1    wreg      void 
  1390 ;; Registers used:
  1391 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1397 ;;      Params:         0       0       0       0       0
  1398 ;;      Locals:         0       0       0       0       0
  1399 ;;      Temps:          1       0       0       0       0
  1400 ;;      Totals:         1       0       0       0       0
  1401 ;;Total ram usage:        1 bytes
  1402 ;; Hardware stack levels used: 1
  1403 ;; Hardware stack levels required when called: 3
  1404 ;; This function calls:
  1405 ;;		_LCD_cmd
  1406 ;; This function is called by:
  1407 ;;		_init_LCD
  1408 ;; This function uses a non-reentrant model
  1409 ;;
  1410                           
  1411                           
  1412                           ;psect for function _LCD_clear
  1413  0000'                    _LCD_clear:
  1414  0000'                    l1269:	
  1415                           ;incstack = 0
  1416                           ; Regs used in _LCD_clear: [allreg]
  1417                           
  1418                           
  1419                           ;LCD.c: 14:     LCD_cmd(0x01);
  1420  0000' 3001               	movlw	1
  1421  0001' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_cmd
  1422  0006'                    l1271:
  1423                           
  1424                           ;LCD.c: 15:     _delay(100);
  1425  0006' 3021               	movlw	33
  1426  0007' 008D'              	movwf	??_LCD_clear
  1427  0008'                    u617:
  1428  0008' 0B8D'              	decfsz	??_LCD_clear,f
  1429  0009' 2800'              	goto	u617
  1430  000A'                    l152:
  1431  000A' 0008               	return
  1432  000B'                    __end_of_LCD_clear:
  1433                           
  1434                           	psect	text5
  1435  0000'                    __ptext5:	
  1436 ;; *************** function _LCD_cmd *****************
  1437 ;; Defined at:
  1438 ;;		line 60 in file "LCD.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;  cmd             1    wreg     unsigned char 
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;  cmd             1   12[COMMON] unsigned char 
  1443 ;; Return value:  Size  Location     Type
  1444 ;;                  1    wreg      void 
  1445 ;; Registers used:
  1446 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1452 ;;      Params:         0       0       0       0       0
  1453 ;;      Locals:         1       0       0       0       0
  1454 ;;      Temps:          2       0       0       0       0
  1455 ;;      Totals:         3       0       0       0       0
  1456 ;;Total ram usage:        3 bytes
  1457 ;; Hardware stack levels used: 1
  1458 ;; Hardware stack levels required when called: 2
  1459 ;; This function calls:
  1460 ;;		_LCD_enable
  1461 ;;		_setPinData
  1462 ;;		_setPortData
  1463 ;; This function is called by:
  1464 ;;		_LCD_clear
  1465 ;;		_init_LCD
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           
  1470                           ;psect for function _LCD_cmd
  1471  0000'                    _LCD_cmd:
  1472                           
  1473                           ;incstack = 0
  1474                           ; Regs used in _LCD_cmd: [allreg]
  1475                           ;LCD_cmd@cmd stored from wreg
  1476  0000' 008C'              	movwf	LCD_cmd@cmd
  1477  0001'                    l1191:
  1478                           
  1479                           ;LCD.c: 62:     setPinData(2, RC0, 0);
  1480  0001' 3002               	movlw	2
  1481  0002' 0080'              	movwf	setPinData@portNum
  1482  0003' 3000               	movlw	0
  1483  0004' 0081'              	movwf	setPinData@portNum+1
  1484  0005' 1003               	clrc
  1485  0006' 1283               	bcf	3,5	;RP0=0, select bank0
  1486  0007' 1303               	bcf	3,6	;RP1=0, select bank0
  1487  0008' 1807               	btfsc	7,0	;volatile
  1488  0009' 1403               	setc
  1489  000A' 3000               	movlw	0
  1490  000B' 1803               	skipnc
  1491  000C' 3001               	movlw	1
  1492  000D' 008A'              	movwf	??_LCD_cmd
  1493  000E' 018B'              	clrf	??_LCD_cmd+1
  1494  000F' 080A'              	movf	??_LCD_cmd,w
  1495  0010' 0082'              	movwf	setPinData@pinNum
  1496  0011' 080B'              	movf	??_LCD_cmd+1,w
  1497  0012' 0083'              	movwf	setPinData@pinNum+1
  1498  0013' 3000               	movlw	0
  1499  0014' 0084'              	movwf	setPinData@data
  1500  0015' 0085'              	movwf	setPinData@data+1
  1501  0016' 120A' 118A' 2000' 120A' 118A' 	fcall	_setPinData
  1502  001B'                    l1193:
  1503                           
  1504                           ;LCD.c: 64:     setPortData(3, cmd);
  1505  001B' 3003               	movlw	3
  1506  001C' 0080'              	movwf	_setPortData$0
  1507  001D' 3000               	movlw	0
  1508  001E' 0081'              	movwf	_setPortData$0+1
  1509  001F' 080C'              	movf	LCD_cmd@cmd,w
  1510  0020' 008A'              	movwf	??_LCD_cmd
  1511  0021' 018B'              	clrf	??_LCD_cmd+1
  1512  0022' 080A'              	movf	??_LCD_cmd,w
  1513  0023' 0082'              	movwf	_setPortData$1
  1514  0024' 080B'              	movf	??_LCD_cmd+1,w
  1515  0025' 0083'              	movwf	_setPortData$1+1
  1516  0026' 120A' 118A' 2000' 120A' 118A' 	fcall	_setPortData
  1517  002B'                    l1195:
  1518                           
  1519                           ;LCD.c: 66:     LCD_enable();
  1520  002B' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_enable
  1521  0030'                    l170:
  1522  0030' 0008               	return
  1523  0031'                    __end_of_LCD_cmd:
  1524                           
  1525                           	psect	text6
  1526  0000'                    __ptext6:	
  1527 ;; *************** function _LCD_enable *****************
  1528 ;; Defined at:
  1529 ;;		line 7 in file "LCD.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;		None
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;		None
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  1    wreg      void 
  1536 ;; Registers used:
  1537 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1543 ;;      Params:         0       0       0       0       0
  1544 ;;      Locals:         0       0       0       0       0
  1545 ;;      Temps:          2       0       0       0       0
  1546 ;;      Totals:         2       0       0       0       0
  1547 ;;Total ram usage:        2 bytes
  1548 ;; Hardware stack levels used: 1
  1549 ;; Hardware stack levels required when called: 1
  1550 ;; This function calls:
  1551 ;;		_setPinData
  1552 ;; This function is called by:
  1553 ;;		_LCD_cmd
  1554 ;;		_LCD_write
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           
  1559                           ;psect for function _LCD_enable
  1560  0000'                    _LCD_enable:
  1561  0000'                    l1185:	
  1562                           ;incstack = 0
  1563                           ; Regs used in _LCD_enable: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1564                           
  1565                           
  1566                           ;LCD.c: 8:     setPinData(2, RC2, 1);
  1567  0000' 3002               	movlw	2
  1568  0001' 0080'              	movwf	setPinData@portNum
  1569  0002' 3000               	movlw	0
  1570  0003' 0081'              	movwf	setPinData@portNum+1
  1571  0004' 1003               	clrc
  1572  0005' 1283               	bcf	3,5	;RP0=0, select bank0
  1573  0006' 1303               	bcf	3,6	;RP1=0, select bank0
  1574  0007' 1907               	btfsc	7,2	;volatile
  1575  0008' 1403               	setc
  1576  0009' 3000               	movlw	0
  1577  000A' 1803               	skipnc
  1578  000B' 3001               	movlw	1
  1579  000C' 0088'              	movwf	??_LCD_enable
  1580  000D' 0189'              	clrf	??_LCD_enable+1
  1581  000E' 0808'              	movf	??_LCD_enable,w
  1582  000F' 0082'              	movwf	setPinData@pinNum
  1583  0010' 0809'              	movf	??_LCD_enable+1,w
  1584  0011' 0083'              	movwf	setPinData@pinNum+1
  1585  0012' 3001               	movlw	1
  1586  0013' 0084'              	movwf	setPinData@data
  1587  0014' 3000               	movlw	0
  1588  0015' 0085'              	movwf	setPinData@data+1
  1589  0016' 120A' 118A' 2000' 120A' 118A' 	fcall	_setPinData
  1590  001B'                    l1187:
  1591                           
  1592                           ;LCD.c: 9:     _delay(100);
  1593  001B' 3021               	movlw	33
  1594  001C' 0088'              	movwf	??_LCD_enable
  1595  001D'                    u627:
  1596  001D' 0B88'              	decfsz	??_LCD_enable,f
  1597  001E' 2800'              	goto	u627
  1598  001F'                    l1189:
  1599                           
  1600                           ;LCD.c: 10:     setPinData(2, RC2, 0);
  1601  001F' 3002               	movlw	2
  1602  0020' 0080'              	movwf	setPinData@portNum
  1603  0021' 3000               	movlw	0
  1604  0022' 0081'              	movwf	setPinData@portNum+1
  1605  0023' 1003               	clrc
  1606  0024' 1283               	bcf	3,5	;RP0=0, select bank0
  1607  0025' 1303               	bcf	3,6	;RP1=0, select bank0
  1608  0026' 1907               	btfsc	7,2	;volatile
  1609  0027' 1403               	setc
  1610  0028' 3000               	movlw	0
  1611  0029' 1803               	skipnc
  1612  002A' 3001               	movlw	1
  1613  002B' 0088'              	movwf	??_LCD_enable
  1614  002C' 0189'              	clrf	??_LCD_enable+1
  1615  002D' 0808'              	movf	??_LCD_enable,w
  1616  002E' 0082'              	movwf	setPinData@pinNum
  1617  002F' 0809'              	movf	??_LCD_enable+1,w
  1618  0030' 0083'              	movwf	setPinData@pinNum+1
  1619  0031' 3000               	movlw	0
  1620  0032' 0084'              	movwf	setPinData@data
  1621  0033' 0085'              	movwf	setPinData@data+1
  1622  0034' 120A' 118A' 2000' 120A' 118A' 	fcall	_setPinData
  1623  0039'                    l149:
  1624  0039' 0008               	return
  1625  003A'                    __end_of_LCD_enable:
  1626                           
  1627                           	psect	text7
  1628  0000'                    __ptext7:	
  1629 ;; *************** function _setPinData *****************
  1630 ;; Defined at:
  1631 ;;		line 170 in file "MIO.c"
  1632 ;; Parameters:    Size  Location     Type
  1633 ;;  portNum         2    0[COMMON] int 
  1634 ;;  pinNum          2    2[COMMON] int 
  1635 ;;  data            2    4[COMMON] int 
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;		None
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  1    wreg      void 
  1640 ;; Registers used:
  1641 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1647 ;;      Params:         6       0       0       0       0
  1648 ;;      Locals:         0       0       0       0       0
  1649 ;;      Temps:          2       0       0       0       0
  1650 ;;      Totals:         8       0       0       0       0
  1651 ;;Total ram usage:        8 bytes
  1652 ;; Hardware stack levels used: 1
  1653 ;; This function calls:
  1654 ;;		Nothing
  1655 ;; This function is called by:
  1656 ;;		_LCD_enable
  1657 ;;		_init_LCD
  1658 ;;		_LCD_cmd
  1659 ;;		_LCD_write
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           
  1664                           ;psect for function _setPinData
  1665  0000'                    _setPinData:
  1666  0000'                    l1149:	
  1667                           ;incstack = 0
  1668                           ; Regs used in _setPinData: [wreg-fsr0h+status,2+status,0]
  1669                           
  1670                           
  1671                           ;MIO.c: 171: if (data) {
  1672  0000' 0804'              	movf	setPinData@data,w
  1673  0001' 0405'              	iorwf	setPinData@data+1,w
  1674  0002' 1903               	btfsc	3,2
  1675  0003' 2800'              	goto	u321
  1676  0004' 2800'              	goto	u320
  1677  0005'                    u321:
  1678  0005' 2800'              	goto	l1175
  1679  0006'                    u320:
  1680  0006' 2800'              	goto	l1163
  1681  0007'                    l1153:
  1682                           
  1683                           ;MIO.c: 174:                 PORTA |= (1 << pinNum);
  1684  0007' 3001               	movlw	1
  1685  0008' 0086'              	movwf	??_setPinData
  1686  0009' 0A02'              	incf	setPinData@pinNum,w
  1687  000A' 2800'              	goto	u334
  1688  000B'                    u335:
  1689  000B' 1003               	clrc
  1690  000C' 0D86'              	rlf	??_setPinData,f
  1691  000D'                    u334:
  1692  000D' 3EFF               	addlw	-1
  1693  000E' 1D03               	skipz
  1694  000F' 2800'              	goto	u335
  1695  0010' 0806'              	movf	??_setPinData,w
  1696  0011' 0087'              	movwf	??_setPinData+1
  1697  0012' 0807'              	movf	??_setPinData+1,w
  1698  0013' 1283               	bcf	3,5	;RP0=0, select bank0
  1699  0014' 1303               	bcf	3,6	;RP1=0, select bank0
  1700  0015' 0485               	iorwf	5,f	;volatile
  1701                           
  1702                           ;MIO.c: 175:                 break;
  1703  0016' 2800'              	goto	l115
  1704  0017'                    l1155:
  1705                           
  1706                           ;MIO.c: 177:                 PORTB |= (1 << pinNum);
  1707  0017' 3001               	movlw	1
  1708  0018' 0086'              	movwf	??_setPinData
  1709  0019' 0A02'              	incf	setPinData@pinNum,w
  1710  001A' 2800'              	goto	u344
  1711  001B'                    u345:
  1712  001B' 1003               	clrc
  1713  001C' 0D86'              	rlf	??_setPinData,f
  1714  001D'                    u344:
  1715  001D' 3EFF               	addlw	-1
  1716  001E' 1D03               	skipz
  1717  001F' 2800'              	goto	u345
  1718  0020' 0806'              	movf	??_setPinData,w
  1719  0021' 0087'              	movwf	??_setPinData+1
  1720  0022' 0807'              	movf	??_setPinData+1,w
  1721  0023' 1283               	bcf	3,5	;RP0=0, select bank0
  1722  0024' 1303               	bcf	3,6	;RP1=0, select bank0
  1723  0025' 0486               	iorwf	6,f	;volatile
  1724                           
  1725                           ;MIO.c: 178:                 break;
  1726  0026' 2800'              	goto	l115
  1727  0027'                    l1157:
  1728                           
  1729                           ;MIO.c: 180:                 PORTC |= (1 << pinNum);
  1730  0027' 3001               	movlw	1
  1731  0028' 0086'              	movwf	??_setPinData
  1732  0029' 0A02'              	incf	setPinData@pinNum,w
  1733  002A' 2800'              	goto	u354
  1734  002B'                    u355:
  1735  002B' 1003               	clrc
  1736  002C' 0D86'              	rlf	??_setPinData,f
  1737  002D'                    u354:
  1738  002D' 3EFF               	addlw	-1
  1739  002E' 1D03               	skipz
  1740  002F' 2800'              	goto	u355
  1741  0030' 0806'              	movf	??_setPinData,w
  1742  0031' 0087'              	movwf	??_setPinData+1
  1743  0032' 0807'              	movf	??_setPinData+1,w
  1744  0033' 1283               	bcf	3,5	;RP0=0, select bank0
  1745  0034' 1303               	bcf	3,6	;RP1=0, select bank0
  1746  0035' 0487               	iorwf	7,f	;volatile
  1747                           
  1748                           ;MIO.c: 181:                 break;
  1749  0036' 2800'              	goto	l115
  1750  0037'                    l1159:
  1751                           
  1752                           ;MIO.c: 183:                 PORTD |= (1 << pinNum);
  1753  0037' 3001               	movlw	1
  1754  0038' 0086'              	movwf	??_setPinData
  1755  0039' 0A02'              	incf	setPinData@pinNum,w
  1756  003A' 2800'              	goto	u364
  1757  003B'                    u365:
  1758  003B' 1003               	clrc
  1759  003C' 0D86'              	rlf	??_setPinData,f
  1760  003D'                    u364:
  1761  003D' 3EFF               	addlw	-1
  1762  003E' 1D03               	skipz
  1763  003F' 2800'              	goto	u365
  1764  0040' 0806'              	movf	??_setPinData,w
  1765  0041' 0087'              	movwf	??_setPinData+1
  1766  0042' 0807'              	movf	??_setPinData+1,w
  1767  0043' 1283               	bcf	3,5	;RP0=0, select bank0
  1768  0044' 1303               	bcf	3,6	;RP1=0, select bank0
  1769  0045' 0488               	iorwf	8,f	;volatile
  1770                           
  1771                           ;MIO.c: 184:                 break;
  1772  0046' 2800'              	goto	l115
  1773  0047'                    l1161:
  1774                           
  1775                           ;MIO.c: 186:                 PORTE |= (1 << pinNum);
  1776  0047' 3001               	movlw	1
  1777  0048' 0086'              	movwf	??_setPinData
  1778  0049' 0A02'              	incf	setPinData@pinNum,w
  1779  004A' 2800'              	goto	u374
  1780  004B'                    u375:
  1781  004B' 1003               	clrc
  1782  004C' 0D86'              	rlf	??_setPinData,f
  1783  004D'                    u374:
  1784  004D' 3EFF               	addlw	-1
  1785  004E' 1D03               	skipz
  1786  004F' 2800'              	goto	u375
  1787  0050' 0806'              	movf	??_setPinData,w
  1788  0051' 0087'              	movwf	??_setPinData+1
  1789  0052' 0807'              	movf	??_setPinData+1,w
  1790  0053' 1283               	bcf	3,5	;RP0=0, select bank0
  1791  0054' 1303               	bcf	3,6	;RP1=0, select bank0
  1792  0055' 0489               	iorwf	9,f	;volatile
  1793                           
  1794                           ;MIO.c: 187:                 break;
  1795  0056' 2800'              	goto	l115
  1796  0057'                    l1163:
  1797                           
  1798                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1799                           ; Switch size 1, requested type "simple"
  1800                           ; Number of cases is 1, Range of values is 0 to 0
  1801                           ; switch strategies available:
  1802                           ; Name         Instructions Cycles
  1803                           ; simple_byte            4     3 (average)
  1804                           ; direct_byte           11     8 (fixed)
  1805                           ; jumptable            260     6 (fixed)
  1806                           ;	Chosen strategy is simple_byte
  1807  0057' 0801'              	movf	setPinData@portNum+1,w
  1808  0058' 3A00               	xorlw	0	; case 0
  1809  0059' 1903               	skipnz
  1810  005A' 2800'              	goto	l1441
  1811  005B' 2800'              	goto	l115
  1812  005C'                    l1441:
  1813                           
  1814                           ; Switch size 1, requested type "simple"
  1815                           ; Number of cases is 5, Range of values is 0 to 4
  1816                           ; switch strategies available:
  1817                           ; Name         Instructions Cycles
  1818                           ; simple_byte           16     9 (average)
  1819                           ; direct_byte           23     8 (fixed)
  1820                           ; jumptable            260     6 (fixed)
  1821                           ;	Chosen strategy is simple_byte
  1822  005C' 0800'              	movf	setPinData@portNum,w
  1823  005D' 3A00               	xorlw	0	; case 0
  1824  005E' 1903               	skipnz
  1825  005F' 2800'              	goto	l1153
  1826  0060' 3A01               	xorlw	1	; case 1
  1827  0061' 1903               	skipnz
  1828  0062' 2800'              	goto	l1155
  1829  0063' 3A03               	xorlw	3	; case 2
  1830  0064' 1903               	skipnz
  1831  0065' 2800'              	goto	l1157
  1832  0066' 3A01               	xorlw	1	; case 3
  1833  0067' 1903               	skipnz
  1834  0068' 2800'              	goto	l1159
  1835  0069' 3A07               	xorlw	7	; case 4
  1836  006A' 1903               	skipnz
  1837  006B' 2800'              	goto	l1161
  1838  006C' 2800'              	goto	l115
  1839  006D'                    l1165:
  1840                           
  1841                           ;MIO.c: 195:                 PORTA &= ~(1 << pinNum);
  1842  006D' 3001               	movlw	1
  1843  006E' 0086'              	movwf	??_setPinData
  1844  006F' 0A02'              	incf	setPinData@pinNum,w
  1845  0070' 2800'              	goto	u384
  1846  0071'                    u385:
  1847  0071' 1003               	clrc
  1848  0072' 0D86'              	rlf	??_setPinData,f
  1849  0073'                    u384:
  1850  0073' 3EFF               	addlw	-1
  1851  0074' 1D03               	skipz
  1852  0075' 2800'              	goto	u385
  1853  0076' 0806'              	movf	??_setPinData,w
  1854  0077' 3AFF               	xorlw	255
  1855  0078' 0087'              	movwf	??_setPinData+1
  1856  0079' 0807'              	movf	??_setPinData+1,w
  1857  007A' 1283               	bcf	3,5	;RP0=0, select bank0
  1858  007B' 1303               	bcf	3,6	;RP1=0, select bank0
  1859  007C' 0585               	andwf	5,f	;volatile
  1860                           
  1861                           ;MIO.c: 196:                 break;
  1862  007D' 2800'              	goto	l115
  1863  007E'                    l1167:
  1864                           
  1865                           ;MIO.c: 198:                 PORTB &= ~(1 << pinNum);
  1866  007E' 3001               	movlw	1
  1867  007F' 0086'              	movwf	??_setPinData
  1868  0080' 0A02'              	incf	setPinData@pinNum,w
  1869  0081' 2800'              	goto	u394
  1870  0082'                    u395:
  1871  0082' 1003               	clrc
  1872  0083' 0D86'              	rlf	??_setPinData,f
  1873  0084'                    u394:
  1874  0084' 3EFF               	addlw	-1
  1875  0085' 1D03               	skipz
  1876  0086' 2800'              	goto	u395
  1877  0087' 0806'              	movf	??_setPinData,w
  1878  0088' 3AFF               	xorlw	255
  1879  0089' 0087'              	movwf	??_setPinData+1
  1880  008A' 0807'              	movf	??_setPinData+1,w
  1881  008B' 1283               	bcf	3,5	;RP0=0, select bank0
  1882  008C' 1303               	bcf	3,6	;RP1=0, select bank0
  1883  008D' 0586               	andwf	6,f	;volatile
  1884                           
  1885                           ;MIO.c: 199:                 break;
  1886  008E' 2800'              	goto	l115
  1887  008F'                    l1169:
  1888                           
  1889                           ;MIO.c: 201:                 PORTC &= ~(1 << pinNum);
  1890  008F' 3001               	movlw	1
  1891  0090' 0086'              	movwf	??_setPinData
  1892  0091' 0A02'              	incf	setPinData@pinNum,w
  1893  0092' 2800'              	goto	u404
  1894  0093'                    u405:
  1895  0093' 1003               	clrc
  1896  0094' 0D86'              	rlf	??_setPinData,f
  1897  0095'                    u404:
  1898  0095' 3EFF               	addlw	-1
  1899  0096' 1D03               	skipz
  1900  0097' 2800'              	goto	u405
  1901  0098' 0806'              	movf	??_setPinData,w
  1902  0099' 3AFF               	xorlw	255
  1903  009A' 0087'              	movwf	??_setPinData+1
  1904  009B' 0807'              	movf	??_setPinData+1,w
  1905  009C' 1283               	bcf	3,5	;RP0=0, select bank0
  1906  009D' 1303               	bcf	3,6	;RP1=0, select bank0
  1907  009E' 0587               	andwf	7,f	;volatile
  1908                           
  1909                           ;MIO.c: 202:                 break;
  1910  009F' 2800'              	goto	l115
  1911  00A0'                    l1171:
  1912                           
  1913                           ;MIO.c: 204:                 PORTD &= ~(1 << pinNum);
  1914  00A0' 3001               	movlw	1
  1915  00A1' 0086'              	movwf	??_setPinData
  1916  00A2' 0A02'              	incf	setPinData@pinNum,w
  1917  00A3' 2800'              	goto	u414
  1918  00A4'                    u415:
  1919  00A4' 1003               	clrc
  1920  00A5' 0D86'              	rlf	??_setPinData,f
  1921  00A6'                    u414:
  1922  00A6' 3EFF               	addlw	-1
  1923  00A7' 1D03               	skipz
  1924  00A8' 2800'              	goto	u415
  1925  00A9' 0806'              	movf	??_setPinData,w
  1926  00AA' 3AFF               	xorlw	255
  1927  00AB' 0087'              	movwf	??_setPinData+1
  1928  00AC' 0807'              	movf	??_setPinData+1,w
  1929  00AD' 1283               	bcf	3,5	;RP0=0, select bank0
  1930  00AE' 1303               	bcf	3,6	;RP1=0, select bank0
  1931  00AF' 0588               	andwf	8,f	;volatile
  1932                           
  1933                           ;MIO.c: 205:                 break;
  1934  00B0' 2800'              	goto	l115
  1935  00B1'                    l1173:
  1936                           
  1937                           ;MIO.c: 207:                 PORTE &= ~(1 << pinNum);
  1938  00B1' 3001               	movlw	1
  1939  00B2' 0086'              	movwf	??_setPinData
  1940  00B3' 0A02'              	incf	setPinData@pinNum,w
  1941  00B4' 2800'              	goto	u424
  1942  00B5'                    u425:
  1943  00B5' 1003               	clrc
  1944  00B6' 0D86'              	rlf	??_setPinData,f
  1945  00B7'                    u424:
  1946  00B7' 3EFF               	addlw	-1
  1947  00B8' 1D03               	skipz
  1948  00B9' 2800'              	goto	u425
  1949  00BA' 0806'              	movf	??_setPinData,w
  1950  00BB' 3AFF               	xorlw	255
  1951  00BC' 0087'              	movwf	??_setPinData+1
  1952  00BD' 0807'              	movf	??_setPinData+1,w
  1953  00BE' 1283               	bcf	3,5	;RP0=0, select bank0
  1954  00BF' 1303               	bcf	3,6	;RP1=0, select bank0
  1955  00C0' 0589               	andwf	9,f	;volatile
  1956                           
  1957                           ;MIO.c: 208:                 break;
  1958  00C1' 2800'              	goto	l115
  1959  00C2'                    l1175:
  1960                           
  1961                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1962                           ; Switch size 1, requested type "simple"
  1963                           ; Number of cases is 1, Range of values is 0 to 0
  1964                           ; switch strategies available:
  1965                           ; Name         Instructions Cycles
  1966                           ; simple_byte            4     3 (average)
  1967                           ; direct_byte           11     8 (fixed)
  1968                           ; jumptable            260     6 (fixed)
  1969                           ;	Chosen strategy is simple_byte
  1970  00C2' 0801'              	movf	setPinData@portNum+1,w
  1971  00C3' 3A00               	xorlw	0	; case 0
  1972  00C4' 1903               	skipnz
  1973  00C5' 2800'              	goto	l1443
  1974  00C6' 2800'              	goto	l115
  1975  00C7'                    l1443:
  1976                           
  1977                           ; Switch size 1, requested type "simple"
  1978                           ; Number of cases is 5, Range of values is 0 to 4
  1979                           ; switch strategies available:
  1980                           ; Name         Instructions Cycles
  1981                           ; simple_byte           16     9 (average)
  1982                           ; direct_byte           23     8 (fixed)
  1983                           ; jumptable            260     6 (fixed)
  1984                           ;	Chosen strategy is simple_byte
  1985  00C7' 0800'              	movf	setPinData@portNum,w
  1986  00C8' 3A00               	xorlw	0	; case 0
  1987  00C9' 1903               	skipnz
  1988  00CA' 2800'              	goto	l1165
  1989  00CB' 3A01               	xorlw	1	; case 1
  1990  00CC' 1903               	skipnz
  1991  00CD' 2800'              	goto	l1167
  1992  00CE' 3A03               	xorlw	3	; case 2
  1993  00CF' 1903               	skipnz
  1994  00D0' 2800'              	goto	l1169
  1995  00D1' 3A01               	xorlw	1	; case 3
  1996  00D2' 1903               	skipnz
  1997  00D3' 2800'              	goto	l1171
  1998  00D4' 3A07               	xorlw	7	; case 4
  1999  00D5' 1903               	skipnz
  2000  00D6' 2800'              	goto	l1173
  2001  00D7' 2800'              	goto	l115
  2002  00D8'                    l115:
  2003  00D8' 0008               	return
  2004  00D9'                    __end_of_setPinData:
  2005  007E                     btemp	set	126	;btemp
  2006  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 


Critical Paths under _main in COMMON

    _init_LCD->_LCD_clear
    _LCD_clear->_LCD_cmd
    _LCD_cmd->_LCD_enable
    _LCD_enable->_setPinData

Critical Paths under _main in BANK0

    _main->_init_LCD

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8458
                           _init_LCD
 ---------------------------------------------------------------------------------
 (1) _init_LCD                                             2     2      0    8458
                                              0 BANK0      2     2      0
                          _LCD_clear
                            _LCD_cmd
                         _setPinData
                          _setPinDir
                         _setPortDir
 ---------------------------------------------------------------------------------
 (2) _setPortDir                                           4     0      4     218
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _setPinDir                                            8     2      6     970
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            1     1      0    2922
                                             13 COMMON     1     1      0
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_cmd                                              3     3      0    2922
                                             10 COMMON     3     3      0
                         _LCD_enable
                         _setPinData
                        _setPortData
 ---------------------------------------------------------------------------------
 (3) _setPortData                                          4     0      4      48
 ---------------------------------------------------------------------------------
 (3) _LCD_enable                                           2     2      0    1426
                                              8 COMMON     2     2      0
                         _setPinData
 ---------------------------------------------------------------------------------
 (2) _setPinData                                           8     2      6    1426
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_LCD
     _LCD_clear
       _LCD_cmd
         _LCD_enable
           _setPinData
         _setPinData
         _setPortData
     _LCD_cmd
     _setPinData
     _setPinDir
     _setPortDir

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Nov 09 21:00:45 2021

                      l7 0005                        l8 0005                       l62 0060  
                     l94 00D8              ?_LCD_enable 0000                      l115 00D8  
                    l152 000A                      l170 0030                      l155 00B4  
                    l149 0039                      _RC0 0038                      _RC1 0039  
                    _RC2 003A                      u320 0006                      u321 0005  
                    u404 0095                      u405 0093                      u414 00A6  
                    u334 000D                      u430 0006                      u415 00A4  
                    u335 000B                      u431 0005                      u424 00B7  
                    u344 001D                      u504 0073                      u440 0006  
                    u425 00B5                      u345 001B                      u505 0071  
                    u441 0005                      u354 002D                      u514 0084  
                    u355 002B                      u515 0082                      u364 003D  
                    u524 0095                      u365 003B                      u525 0093  
                    u374 004D                      u534 00A6                      u454 000D  
                    u375 004B                      u535 00A4                      u455 000B  
                    u607 00B1                      u384 0073                      u544 00B7  
                    u464 001D                      u385 0071                      u617 0008  
                    u545 00B5                      u465 001B                      u394 0084  
                    u474 002D                      u395 0082                      u627 001D  
                    u475 002B                      u484 003D                      u485 003B  
                    u494 004D                      u495 004B                      u567 0078  
                    _PSA 040B                      u577 008A                      u587 0097  
                    u597 00A4          __end_of_LCD_cmd 0031                     l1201 0007  
                   l1203 000C                     l1211 0020                     l1221 0046  
                   l1213 0036                     l1205 0011                     l1215 003A  
                   l1207 0016                     l1223 004A                     l1161 0047  
                   l1153 0007                     l1241 0027                     l1233 0000  
                   l1217 003E                     l1209 001B                     l1171 00A0  
                   l1155 0017                     l1163 0057                     l1251 007E  
                   l1243 0037                     l1219 0042                     l1173 00B1  
                   l1165 006D                     l1157 0027                     l1149 0000  
                   l1253 008F                     l1245 0047                     l1237 0007  
                   l1309 0000                     l1167 007E                     l1159 0037  
                   l1175 00C2                     l1191 0001                     l1271 0006  
                   l1255 00A0                     l1239 0017                     l1247 0057  
                   l1169 008F                     l1441 005C                     l1185 0000  
                   l1193 001B                     l1257 00B1                     l1249 006D  
                   l1433 0025                     l1281 0074                     l1443 00C7  
                   l1187 001B                     l1195 002B                     l1259 00C2  
                   l1435 004F                     l1291 0093                     l1283 007B  
                   l1189 001F                     l1269 0000                     l1437 005C  
                   l1197 0000                     l1293 009A                     l1285 0080  
                   l1439 00C7                     l1295 00A0                     l1287 0086  
                   l1279 0000                     l1297 00A7                     l1289 008D  
                   l1299 00AD                     _main 0000                     btemp 007E  
                   start 0000*      __size_of_LCD_clear 000B                    ?_main 0000  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    status 0003                    wtemp0 007E  
    __size_of_LCD_enable 003A          __initialization 0000             __end_of_main 0009  
                 ??_main 000E                ??_LCD_cmd 000A        __end_of_LCD_clear 000B  
        setPortDir@state 0002             ?_setPortData 0000                   _TMR0IE 005D  
       __end_of_init_LCD 00B5         setPinData@pinNum 0002  __end_of__initialization 0000  
         __pcstackCOMMON 0000         setPinDir@portNum 0000             ??_LCD_enable 0008  
     __end_of_LCD_enable 003A               __pmaintext 0000       __size_of_setPinDir 00D9  
                _LCD_cmd 0000                ?_init_LCD 0000                  __ptext1 0000  
                __ptext2 0000                  __ptext3 0000                  __ptext4 0000  
                __ptext5 0000                  __ptext6 0000                  __ptext7 0000  
              _LCD_clear 0000     end_of_initialization 0000        __end_of_setPinDir 00D9  
             _setPinData 0000               ??_init_LCD 0000               _setPortDir 0000  
      setPinData@portNum 0000               ?_LCD_clear 0000               LCD_cmd@cmd 000C  
    start_initialization 0000              ?_setPinData 0000              ?_setPortDir 0000  
               ?_LCD_cmd 0000                ___latbits 0002            __pcstackBANK0 0000  
          _setPortData$0 0000            _setPortData$1 0002          setPinDir@pinNum 0002  
            ??_LCD_clear 000D        __size_of_init_LCD 00B5        setPortDir@portNum 0000  
    __size_of_setPinData 00D9      __size_of_setPortDir 0061            ??_setPortData 0000  
              _setPinDir 0000         __size_of_LCD_cmd 0031               ?_setPinDir 0000  
         setPinData@data 0004           setPinDir@state 0004             ??_setPinData 0006  
               _init_LCD 0000             ??_setPortDir 0004            __size_of_main 0009  
     __end_of_setPinData 00D9               _LCD_enable 0000       __end_of_setPortDir 0061  
            _setPortData 0000*             ??_setPinDir 0006               _OPTION_REG 0081  
