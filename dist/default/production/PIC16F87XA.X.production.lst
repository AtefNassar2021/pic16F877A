

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Nov 10 21:18:12 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,merge=1,delta=2
    17                           	psect	text10,local,class=CODE,merge=1,delta=2
    18                           	psect	text11,local,class=CODE,merge=1,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F877A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  010F                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  0006                     	;# 
   122  0007                     	;# 
   123  0008                     	;# 
   124  0009                     	;# 
   125  000A                     	;# 
   126  000B                     	;# 
   127  000C                     	;# 
   128  000D                     	;# 
   129  000E                     	;# 
   130  000E                     	;# 
   131  000F                     	;# 
   132  0010                     	;# 
   133  0011                     	;# 
   134  0012                     	;# 
   135  0013                     	;# 
   136  0014                     	;# 
   137  0015                     	;# 
   138  0015                     	;# 
   139  0016                     	;# 
   140  0017                     	;# 
   141  0018                     	;# 
   142  0019                     	;# 
   143  001A                     	;# 
   144  001B                     	;# 
   145  001B                     	;# 
   146  001C                     	;# 
   147  001D                     	;# 
   148  001E                     	;# 
   149  001F                     	;# 
   150  0081                     	;# 
   151  0085                     	;# 
   152  0086                     	;# 
   153  0087                     	;# 
   154  0088                     	;# 
   155  0089                     	;# 
   156  008C                     	;# 
   157  008D                     	;# 
   158  008E                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0094                     	;# 
   163  0098                     	;# 
   164  0099                     	;# 
   165  009C                     	;# 
   166  009D                     	;# 
   167  009E                     	;# 
   168  009F                     	;# 
   169  010C                     	;# 
   170  010D                     	;# 
   171  010E                     	;# 
   172  010F                     	;# 
   173  018C                     	;# 
   174  018D                     	;# 
   175  0000                     	;# 
   176  0001                     	;# 
   177  0002                     	;# 
   178  0003                     	;# 
   179  0004                     	;# 
   180  0005                     	;# 
   181  0006                     	;# 
   182  0007                     	;# 
   183  0008                     	;# 
   184  0009                     	;# 
   185  000A                     	;# 
   186  000B                     	;# 
   187  000C                     	;# 
   188  000D                     	;# 
   189  000E                     	;# 
   190  000E                     	;# 
   191  000F                     	;# 
   192  0010                     	;# 
   193  0011                     	;# 
   194  0012                     	;# 
   195  0013                     	;# 
   196  0014                     	;# 
   197  0015                     	;# 
   198  0015                     	;# 
   199  0016                     	;# 
   200  0017                     	;# 
   201  0018                     	;# 
   202  0019                     	;# 
   203  001A                     	;# 
   204  001B                     	;# 
   205  001B                     	;# 
   206  001C                     	;# 
   207  001D                     	;# 
   208  001E                     	;# 
   209  001F                     	;# 
   210  0081                     	;# 
   211  0085                     	;# 
   212  0086                     	;# 
   213  0087                     	;# 
   214  0088                     	;# 
   215  0089                     	;# 
   216  008C                     	;# 
   217  008D                     	;# 
   218  008E                     	;# 
   219  0091                     	;# 
   220  0092                     	;# 
   221  0093                     	;# 
   222  0094                     	;# 
   223  0098                     	;# 
   224  0099                     	;# 
   225  009C                     	;# 
   226  009D                     	;# 
   227  009E                     	;# 
   228  009F                     	;# 
   229  010C                     	;# 
   230  010D                     	;# 
   231  010E                     	;# 
   232  010F                     	;# 
   233  018C                     	;# 
   234  018D                     	;# 
   235  0000                     	;# 
   236  0001                     	;# 
   237  0002                     	;# 
   238  0003                     	;# 
   239  0004                     	;# 
   240  0005                     	;# 
   241  0006                     	;# 
   242  0007                     	;# 
   243  0008                     	;# 
   244  0009                     	;# 
   245  000A                     	;# 
   246  000B                     	;# 
   247  000C                     	;# 
   248  000D                     	;# 
   249  000E                     	;# 
   250  000E                     	;# 
   251  000F                     	;# 
   252  0010                     	;# 
   253  0011                     	;# 
   254  0012                     	;# 
   255  0013                     	;# 
   256  0014                     	;# 
   257  0015                     	;# 
   258  0015                     	;# 
   259  0016                     	;# 
   260  0017                     	;# 
   261  0018                     	;# 
   262  0019                     	;# 
   263  001A                     	;# 
   264  001B                     	;# 
   265  001B                     	;# 
   266  001C                     	;# 
   267  001D                     	;# 
   268  001E                     	;# 
   269  001F                     	;# 
   270  0081                     	;# 
   271  0085                     	;# 
   272  0086                     	;# 
   273  0087                     	;# 
   274  0088                     	;# 
   275  0089                     	;# 
   276  008C                     	;# 
   277  008D                     	;# 
   278  008E                     	;# 
   279  0091                     	;# 
   280  0092                     	;# 
   281  0093                     	;# 
   282  0094                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009C                     	;# 
   286  009D                     	;# 
   287  009E                     	;# 
   288  009F                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295  0000                     	;# 
   296  0001                     	;# 
   297  0002                     	;# 
   298  0003                     	;# 
   299  0004                     	;# 
   300  0005                     	;# 
   301  0006                     	;# 
   302  0007                     	;# 
   303  0008                     	;# 
   304  0009                     	;# 
   305  000A                     	;# 
   306  000B                     	;# 
   307  000C                     	;# 
   308  000D                     	;# 
   309  000E                     	;# 
   310  000E                     	;# 
   311  000F                     	;# 
   312  0010                     	;# 
   313  0011                     	;# 
   314  0012                     	;# 
   315  0013                     	;# 
   316  0014                     	;# 
   317  0015                     	;# 
   318  0015                     	;# 
   319  0016                     	;# 
   320  0017                     	;# 
   321  0018                     	;# 
   322  0019                     	;# 
   323  001A                     	;# 
   324  001B                     	;# 
   325  001B                     	;# 
   326  001C                     	;# 
   327  001D                     	;# 
   328  001E                     	;# 
   329  001F                     	;# 
   330  0081                     	;# 
   331  0085                     	;# 
   332  0086                     	;# 
   333  0087                     	;# 
   334  0088                     	;# 
   335  0089                     	;# 
   336  008C                     	;# 
   337  008D                     	;# 
   338  008E                     	;# 
   339  0091                     	;# 
   340  0092                     	;# 
   341  0093                     	;# 
   342  0094                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009C                     	;# 
   346  009D                     	;# 
   347  009E                     	;# 
   348  009F                     	;# 
   349  010C                     	;# 
   350  010D                     	;# 
   351  010E                     	;# 
   352  010F                     	;# 
   353  018C                     	;# 
   354  018D                     	;# 
   355  0009                     _PORTE	set	9
   356  0008                     _PORTD	set	8
   357  0007                     _PORTC	set	7
   358  0006                     _PORTB	set	6
   359  0005                     _PORTA	set	5
   360  005D                     _TMR0IE	set	93
   361  0039                     _RC1	set	57
   362  0038                     _RC0	set	56
   363  003A                     _RC2	set	58
   364  0081                     _OPTION_REG	set	129
   365  0089                     _TRISE	set	137
   366  0088                     _TRISD	set	136
   367  0087                     _TRISC	set	135
   368  0086                     _TRISB	set	134
   369  0085                     _TRISA	set	133
   370  040B                     _PSA	set	1035
   371                           
   372                           	psect	cinit
   373  07FC                     start_initialization:	
   374                           ; #config settings
   375                           
   376  07FC                     __initialization:
   377  07FC                     end_of_initialization:	
   378                           ;End of C runtime variable initialization code
   379                           
   380  07FC                     __end_of__initialization:
   381  07FC  0183               	clrf	3
   382  07FD  120A  118A  2C73   	ljmp	_main	;jump to C main() function
   383                           
   384                           	psect	cstackCOMMON
   385  0070                     __pcstackCOMMON:
   386  0070                     ?_init_LCD:
   387  0070                     ?_LCD_write:	
   388                           ; 1 bytes @ 0x0
   389                           
   390  0070                     ?_setPortDir:	
   391                           ; 1 bytes @ 0x0
   392                           
   393  0070                     ?_setPinDir:	
   394                           ; 1 bytes @ 0x0
   395                           
   396  0070                     ?_setPinData:	
   397                           ; 1 bytes @ 0x0
   398                           
   399  0070                     ?_togglePinData:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  0070                     ?_togglePortData:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0070                     ?_LCD_cmd:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ?_main:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ?_setPortData:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ?_LCD_enable:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?_LCD_clear:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     setPortDir@portNum:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     setPortData@portNum:	
   424                           ; 2 bytes @ 0x0
   425                           
   426  0070                     togglePortData@portNum:	
   427                           ; 2 bytes @ 0x0
   428                           
   429  0070                     setPinDir@portNum:	
   430                           ; 2 bytes @ 0x0
   431                           
   432  0070                     setPinData@portNum:	
   433                           ; 2 bytes @ 0x0
   434                           
   435  0070                     togglePinData@portNum:	
   436                           ; 2 bytes @ 0x0
   437                           
   438                           
   439                           ; 2 bytes @ 0x0
   440  0070                     	ds	2
   441  0072                     ??_togglePortData:
   442  0072                     setPortDir@state:	
   443                           ; 1 bytes @ 0x2
   444                           
   445  0072                     setPortData@data:	
   446                           ; 2 bytes @ 0x2
   447                           
   448  0072                     setPinDir@pinNum:	
   449                           ; 2 bytes @ 0x2
   450                           
   451  0072                     setPinData@pinNum:	
   452                           ; 2 bytes @ 0x2
   453                           
   454  0072                     togglePinData@pinNum:	
   455                           ; 2 bytes @ 0x2
   456                           
   457                           
   458                           ; 2 bytes @ 0x2
   459  0072                     	ds	2
   460  0074                     ??_setPortDir:
   461  0074                     ??_togglePinData:	
   462                           ; 1 bytes @ 0x4
   463                           
   464  0074                     ??_setPortData:	
   465                           ; 1 bytes @ 0x4
   466                           
   467  0074                     setPinDir@state:	
   468                           ; 1 bytes @ 0x4
   469                           
   470  0074                     setPinData@data:	
   471                           ; 2 bytes @ 0x4
   472                           
   473                           
   474                           ; 2 bytes @ 0x4
   475  0074                     	ds	2
   476  0076                     ??_setPinDir:
   477  0076                     ??_setPinData:	
   478                           ; 1 bytes @ 0x6
   479                           
   480                           
   481                           ; 1 bytes @ 0x6
   482  0076                     	ds	2
   483  0078                     ??_LCD_enable:
   484                           
   485                           ; 1 bytes @ 0x8
   486  0078                     	ds	2
   487  007A                     ??_LCD_write:
   488  007A                     ??_LCD_cmd:	
   489                           ; 1 bytes @ 0xA
   490                           
   491                           
   492                           ; 1 bytes @ 0xA
   493  007A                     	ds	2
   494  007C                     LCD_write@data:
   495  007C                     LCD_cmd@cmd:	
   496                           ; 1 bytes @ 0xC
   497                           
   498                           
   499                           ; 1 bytes @ 0xC
   500  007C                     	ds	1
   501  007D                     ??_LCD_clear:
   502                           
   503                           ; 1 bytes @ 0xD
   504  007D                     	ds	1
   505                           
   506                           	psect	cstackBANK0
   507  0020                     __pcstackBANK0:
   508  0020                     ??_init_LCD:
   509                           
   510                           ; 1 bytes @ 0x0
   511  0020                     	ds	2
   512  0022                     ??_main:
   513                           
   514                           ; 1 bytes @ 0x2
   515  0022                     	ds	1
   516                           
   517                           	psect	maintext
   518  0473                     __pmaintext:	
   519 ;;
   520 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   521 ;;
   522 ;; *************** function _main *****************
   523 ;; Defined at:
   524 ;;		line 14 in file "main.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;		None
   527 ;; Auto vars:     Size  Location     Type
   528 ;;		None
   529 ;; Return value:  Size  Location     Type
   530 ;;                  1    wreg      void 
   531 ;; Registers used:
   532 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   533 ;; Tracked objects:
   534 ;;		On entry : B00/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   538 ;;      Params:         0       0       0       0       0
   539 ;;      Locals:         0       0       0       0       0
   540 ;;      Temps:          0       1       0       0       0
   541 ;;      Totals:         0       1       0       0       0
   542 ;;Total ram usage:        1 bytes
   543 ;; Hardware stack levels required when called: 5
   544 ;; This function calls:
   545 ;;		_LCD_write
   546 ;;		_init_LCD
   547 ;;		_setPinData
   548 ;;		_setPinDir
   549 ;;		_setPortDir
   550 ;;		_togglePinData
   551 ;;		_togglePortData
   552 ;; This function is called by:
   553 ;;		Startup code after reset
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           
   558                           ;psect for function _main
   559  0473                     _main:
   560  0473                     l1450:	
   561                           ;incstack = 0
   562                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   563                           
   564                           
   565                           ;main.c: 16:     init_LCD();
   566  0473  120A  118A  2594  120A  118A  	fcall	_init_LCD
   567  0478                     l21:	
   568                           ;main.c: 21:     while(1){
   569                           
   570                           
   571                           ;main.c: 22:         LCD_write('A');
   572  0478  3041               	movlw	65
   573  0479  120A  118A  23CC  120A  118A  	fcall	_LCD_write
   574                           
   575                           ;main.c: 23:        setPortDir(3,0);
   576  047E  3003               	movlw	3
   577  047F  00F0               	movwf	setPortDir@portNum
   578  0480  3000               	movlw	0
   579  0481  00F1               	movwf	setPortDir@portNum+1
   580  0482  3000               	movlw	0
   581  0483  00F2               	movwf	setPortDir@state
   582  0484  00F3               	movwf	setPortDir@state+1
   583  0485  120A  118A  24CB  120A  118A  	fcall	_setPortDir
   584                           
   585                           ;main.c: 25:        setPinDir(2,2,0);
   586  048A  3002               	movlw	2
   587  048B  00F0               	movwf	setPinDir@portNum
   588  048C  3000               	movlw	0
   589  048D  00F1               	movwf	setPinDir@portNum+1
   590  048E  3002               	movlw	2
   591  048F  00F2               	movwf	setPinDir@pinNum
   592  0490  3000               	movlw	0
   593  0491  00F3               	movwf	setPinDir@pinNum+1
   594  0492  3000               	movlw	0
   595  0493  00F4               	movwf	setPinDir@state
   596  0494  00F5               	movwf	setPinDir@state+1
   597  0495  120A  118A  2723  120A  118A  	fcall	_setPinDir
   598                           
   599                           ;main.c: 26:        setPinData(2,2,0) ;
   600  049A  3002               	movlw	2
   601  049B  00F0               	movwf	setPinData@portNum
   602  049C  3000               	movlw	0
   603  049D  00F1               	movwf	setPinData@portNum+1
   604  049E  3002               	movlw	2
   605  049F  00F2               	movwf	setPinData@pinNum
   606  04A0  3000               	movlw	0
   607  04A1  00F3               	movwf	setPinData@pinNum+1
   608  04A2  3000               	movlw	0
   609  04A3  00F4               	movwf	setPinData@data
   610  04A4  00F5               	movwf	setPinData@data+1
   611  04A5  120A  118A  264A  120A  118A  	fcall	_setPinData
   612  04AA                     l1452:
   613                           
   614                           ;main.c: 27:        _delay(100);
   615  04AA  3020               	movlw	32
   616  04AB  1283               	bcf	3,5	;RP0=0, select bank0
   617  04AC  1303               	bcf	3,6	;RP1=0, select bank0
   618  04AD  00A2               	movwf	??_main
   619  04AE                     u617:
   620  04AE  0BA2               	decfsz	??_main,f
   621  04AF  2CAE               	goto	u617
   622  04B0  0000               	nop
   623  04B1                     l1454:
   624                           
   625                           ;main.c: 29:        togglePinData(2,2);
   626  04B1  3002               	movlw	2
   627  04B2  00F0               	movwf	togglePinData@portNum
   628  04B3  3000               	movlw	0
   629  04B4  00F1               	movwf	togglePinData@portNum+1
   630  04B5  3002               	movlw	2
   631  04B6  00F2               	movwf	togglePinData@pinNum
   632  04B7  3000               	movlw	0
   633  04B8  00F3               	movwf	togglePinData@pinNum+1
   634  04B9  120A  118A  252C  120A  118A  	fcall	_togglePinData
   635  04BE                     l1456:
   636                           
   637                           ;main.c: 30:        togglePortData(3);
   638  04BE  3003               	movlw	3
   639  04BF  00F0               	movwf	togglePortData@portNum
   640  04C0  3000               	movlw	0
   641  04C1  00F1               	movwf	togglePortData@portNum+1
   642  04C2  120A  118A  2438  120A  118A  	fcall	_togglePortData
   643  04C7  2C78               	goto	l21
   644  04C8  120A  118A  2800   	ljmp	start
   645  04CB                     __end_of_main:
   646                           
   647                           	psect	text1
   648  0438                     __ptext1:	
   649 ;; *************** function _togglePortData *****************
   650 ;; Defined at:
   651 ;;		line 95 in file "MIO.c"
   652 ;; Parameters:    Size  Location     Type
   653 ;;  portNum         2    0[COMMON] int 
   654 ;; Auto vars:     Size  Location     Type
   655 ;;		None
   656 ;; Return value:  Size  Location     Type
   657 ;;                  1    wreg      void 
   658 ;; Registers used:
   659 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   660 ;; Tracked objects:
   661 ;;		On entry : 0/0
   662 ;;		On exit  : 0/0
   663 ;;		Unchanged: 0/0
   664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   665 ;;      Params:         2       0       0       0       0
   666 ;;      Locals:         0       0       0       0       0
   667 ;;      Temps:          1       0       0       0       0
   668 ;;      Totals:         3       0       0       0       0
   669 ;;Total ram usage:        3 bytes
   670 ;; Hardware stack levels used: 1
   671 ;; This function calls:
   672 ;;		Nothing
   673 ;; This function is called by:
   674 ;;		_main
   675 ;; This function uses a non-reentrant model
   676 ;;
   677                           
   678                           
   679                           ;psect for function _togglePortData
   680  0438                     _togglePortData:
   681  0438                     l1424:	
   682                           ;incstack = 0
   683                           ; Regs used in _togglePortData: [wreg-fsr0h+status,2+status,0]
   684                           
   685                           
   686                           ;MIO.c: 96:     switch (portNum) {
   687  0438  2C5C               	goto	l1436
   688  0439                     l1426:
   689                           
   690                           ;MIO.c: 98:             PORTA ^= 0xFF;
   691  0439  30FF               	movlw	255
   692  043A  00F2               	movwf	??_togglePortData
   693  043B  0872               	movf	??_togglePortData,w
   694  043C  1283               	bcf	3,5	;RP0=0, select bank0
   695  043D  1303               	bcf	3,6	;RP1=0, select bank0
   696  043E  0685               	xorwf	5,f	;volatile
   697                           
   698                           ;MIO.c: 99:             break;
   699  043F  2C72               	goto	l98
   700  0440                     l1428:
   701                           
   702                           ;MIO.c: 101:             PORTB ^= 0xFF;
   703  0440  30FF               	movlw	255
   704  0441  00F2               	movwf	??_togglePortData
   705  0442  0872               	movf	??_togglePortData,w
   706  0443  1283               	bcf	3,5	;RP0=0, select bank0
   707  0444  1303               	bcf	3,6	;RP1=0, select bank0
   708  0445  0686               	xorwf	6,f	;volatile
   709                           
   710                           ;MIO.c: 102:             break;
   711  0446  2C72               	goto	l98
   712  0447                     l1430:
   713                           
   714                           ;MIO.c: 104:             PORTC ^= 0xFF;
   715  0447  30FF               	movlw	255
   716  0448  00F2               	movwf	??_togglePortData
   717  0449  0872               	movf	??_togglePortData,w
   718  044A  1283               	bcf	3,5	;RP0=0, select bank0
   719  044B  1303               	bcf	3,6	;RP1=0, select bank0
   720  044C  0687               	xorwf	7,f	;volatile
   721                           
   722                           ;MIO.c: 105:             break;
   723  044D  2C72               	goto	l98
   724  044E                     l1432:
   725                           
   726                           ;MIO.c: 107:             PORTD ^= 0xFF;
   727  044E  30FF               	movlw	255
   728  044F  00F2               	movwf	??_togglePortData
   729  0450  0872               	movf	??_togglePortData,w
   730  0451  1283               	bcf	3,5	;RP0=0, select bank0
   731  0452  1303               	bcf	3,6	;RP1=0, select bank0
   732  0453  0688               	xorwf	8,f	;volatile
   733                           
   734                           ;MIO.c: 108:             break;
   735  0454  2C72               	goto	l98
   736  0455                     l1434:
   737                           
   738                           ;MIO.c: 110:             PORTE ^= 0xFF;
   739  0455  30FF               	movlw	255
   740  0456  00F2               	movwf	??_togglePortData
   741  0457  0872               	movf	??_togglePortData,w
   742  0458  1283               	bcf	3,5	;RP0=0, select bank0
   743  0459  1303               	bcf	3,6	;RP1=0, select bank0
   744  045A  0689               	xorwf	9,f	;volatile
   745                           
   746                           ;MIO.c: 111:             break;
   747  045B  2C72               	goto	l98
   748  045C                     l1436:
   749                           
   750                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   751                           ; Switch size 1, requested type "simple"
   752                           ; Number of cases is 1, Range of values is 0 to 0
   753                           ; switch strategies available:
   754                           ; Name         Instructions Cycles
   755                           ; simple_byte            4     3 (average)
   756                           ; direct_byte           11     8 (fixed)
   757                           ; jumptable            260     6 (fixed)
   758                           ;	Chosen strategy is simple_byte
   759  045C  0871               	movf	togglePortData@portNum+1,w
   760  045D  3A00               	xorlw	0	; case 0
   761  045E  1903               	skipnz
   762  045F  2C61               	goto	l1642
   763  0460  2C72               	goto	l98
   764  0461                     l1642:
   765                           
   766                           ; Switch size 1, requested type "simple"
   767                           ; Number of cases is 5, Range of values is 0 to 4
   768                           ; switch strategies available:
   769                           ; Name         Instructions Cycles
   770                           ; simple_byte           16     9 (average)
   771                           ; direct_byte           23     8 (fixed)
   772                           ; jumptable            260     6 (fixed)
   773                           ;	Chosen strategy is simple_byte
   774  0461  0870               	movf	togglePortData@portNum,w
   775  0462  3A00               	xorlw	0	; case 0
   776  0463  1903               	skipnz
   777  0464  2C39               	goto	l1426
   778  0465  3A01               	xorlw	1	; case 1
   779  0466  1903               	skipnz
   780  0467  2C40               	goto	l1428
   781  0468  3A03               	xorlw	3	; case 2
   782  0469  1903               	skipnz
   783  046A  2C47               	goto	l1430
   784  046B  3A01               	xorlw	1	; case 3
   785  046C  1903               	skipnz
   786  046D  2C4E               	goto	l1432
   787  046E  3A07               	xorlw	7	; case 4
   788  046F  1903               	skipnz
   789  0470  2C55               	goto	l1434
   790  0471  2C72               	goto	l98
   791  0472                     l98:
   792  0472  0008               	return
   793  0473                     __end_of_togglePortData:
   794                           
   795                           	psect	text2
   796  052C                     __ptext2:	
   797 ;; *************** function _togglePinData *****************
   798 ;; Defined at:
   799 ;;		line 210 in file "MIO.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;  portNum         2    0[COMMON] int 
   802 ;;  pinNum          2    2[COMMON] int 
   803 ;; Auto vars:     Size  Location     Type
   804 ;;		None
   805 ;; Return value:  Size  Location     Type
   806 ;;                  1    wreg      void 
   807 ;; Registers used:
   808 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   809 ;; Tracked objects:
   810 ;;		On entry : 0/0
   811 ;;		On exit  : 0/0
   812 ;;		Unchanged: 0/0
   813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   814 ;;      Params:         4       0       0       0       0
   815 ;;      Locals:         0       0       0       0       0
   816 ;;      Temps:          2       0       0       0       0
   817 ;;      Totals:         6       0       0       0       0
   818 ;;Total ram usage:        6 bytes
   819 ;; Hardware stack levels used: 1
   820 ;; This function calls:
   821 ;;		Nothing
   822 ;; This function is called by:
   823 ;;		_main
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           
   828                           ;psect for function _togglePinData
   829  052C                     _togglePinData:
   830  052C                     l1406:	
   831                           ;incstack = 0
   832                           ; Regs used in _togglePinData: [wreg-fsr0h+status,2+status,0]
   833                           
   834                           
   835                           ;MIO.c: 211:     switch (portNum) {
   836  052C  2D7D               	goto	l1418
   837  052D                     l1408:
   838                           
   839                           ;MIO.c: 213:             PORTA ^= (1 << pinNum);
   840  052D  3001               	movlw	1
   841  052E  00F4               	movwf	??_togglePinData
   842  052F  0A72               	incf	togglePinData@pinNum,w
   843  0530  2D33               	goto	u554
   844  0531                     u555:
   845  0531  1003               	clrc
   846  0532  0DF4               	rlf	??_togglePinData,f
   847  0533                     u554:
   848  0533  3EFF               	addlw	-1
   849  0534  1D03               	skipz
   850  0535  2D31               	goto	u555
   851  0536  0874               	movf	??_togglePinData,w
   852  0537  00F5               	movwf	??_togglePinData+1
   853  0538  0875               	movf	??_togglePinData+1,w
   854  0539  1283               	bcf	3,5	;RP0=0, select bank0
   855  053A  1303               	bcf	3,6	;RP1=0, select bank0
   856  053B  0685               	xorwf	5,f	;volatile
   857                           
   858                           ;MIO.c: 214:             break;
   859  053C  2D93               	goto	l151
   860  053D                     l1410:
   861                           
   862                           ;MIO.c: 216:             PORTB ^= (1 << pinNum);
   863  053D  3001               	movlw	1
   864  053E  00F4               	movwf	??_togglePinData
   865  053F  0A72               	incf	togglePinData@pinNum,w
   866  0540  2D43               	goto	u564
   867  0541                     u565:
   868  0541  1003               	clrc
   869  0542  0DF4               	rlf	??_togglePinData,f
   870  0543                     u564:
   871  0543  3EFF               	addlw	-1
   872  0544  1D03               	skipz
   873  0545  2D41               	goto	u565
   874  0546  0874               	movf	??_togglePinData,w
   875  0547  00F5               	movwf	??_togglePinData+1
   876  0548  0875               	movf	??_togglePinData+1,w
   877  0549  1283               	bcf	3,5	;RP0=0, select bank0
   878  054A  1303               	bcf	3,6	;RP1=0, select bank0
   879  054B  0686               	xorwf	6,f	;volatile
   880                           
   881                           ;MIO.c: 217:             break;
   882  054C  2D93               	goto	l151
   883  054D                     l1412:
   884                           
   885                           ;MIO.c: 219:             PORTC ^= (1 << pinNum);
   886  054D  3001               	movlw	1
   887  054E  00F4               	movwf	??_togglePinData
   888  054F  0A72               	incf	togglePinData@pinNum,w
   889  0550  2D53               	goto	u574
   890  0551                     u575:
   891  0551  1003               	clrc
   892  0552  0DF4               	rlf	??_togglePinData,f
   893  0553                     u574:
   894  0553  3EFF               	addlw	-1
   895  0554  1D03               	skipz
   896  0555  2D51               	goto	u575
   897  0556  0874               	movf	??_togglePinData,w
   898  0557  00F5               	movwf	??_togglePinData+1
   899  0558  0875               	movf	??_togglePinData+1,w
   900  0559  1283               	bcf	3,5	;RP0=0, select bank0
   901  055A  1303               	bcf	3,6	;RP1=0, select bank0
   902  055B  0687               	xorwf	7,f	;volatile
   903                           
   904                           ;MIO.c: 220:             break;
   905  055C  2D93               	goto	l151
   906  055D                     l1414:
   907                           
   908                           ;MIO.c: 222:             PORTD ^= (1 << pinNum);
   909  055D  3001               	movlw	1
   910  055E  00F4               	movwf	??_togglePinData
   911  055F  0A72               	incf	togglePinData@pinNum,w
   912  0560  2D63               	goto	u584
   913  0561                     u585:
   914  0561  1003               	clrc
   915  0562  0DF4               	rlf	??_togglePinData,f
   916  0563                     u584:
   917  0563  3EFF               	addlw	-1
   918  0564  1D03               	skipz
   919  0565  2D61               	goto	u585
   920  0566  0874               	movf	??_togglePinData,w
   921  0567  00F5               	movwf	??_togglePinData+1
   922  0568  0875               	movf	??_togglePinData+1,w
   923  0569  1283               	bcf	3,5	;RP0=0, select bank0
   924  056A  1303               	bcf	3,6	;RP1=0, select bank0
   925  056B  0688               	xorwf	8,f	;volatile
   926                           
   927                           ;MIO.c: 223:             break;
   928  056C  2D93               	goto	l151
   929  056D                     l1416:
   930                           
   931                           ;MIO.c: 225:             PORTE ^= (1 << pinNum);
   932  056D  3001               	movlw	1
   933  056E  00F4               	movwf	??_togglePinData
   934  056F  0A72               	incf	togglePinData@pinNum,w
   935  0570  2D73               	goto	u594
   936  0571                     u595:
   937  0571  1003               	clrc
   938  0572  0DF4               	rlf	??_togglePinData,f
   939  0573                     u594:
   940  0573  3EFF               	addlw	-1
   941  0574  1D03               	skipz
   942  0575  2D71               	goto	u595
   943  0576  0874               	movf	??_togglePinData,w
   944  0577  00F5               	movwf	??_togglePinData+1
   945  0578  0875               	movf	??_togglePinData+1,w
   946  0579  1283               	bcf	3,5	;RP0=0, select bank0
   947  057A  1303               	bcf	3,6	;RP1=0, select bank0
   948  057B  0689               	xorwf	9,f	;volatile
   949                           
   950                           ;MIO.c: 226:             break;
   951  057C  2D93               	goto	l151
   952  057D                     l1418:
   953                           
   954                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   955                           ; Switch size 1, requested type "simple"
   956                           ; Number of cases is 1, Range of values is 0 to 0
   957                           ; switch strategies available:
   958                           ; Name         Instructions Cycles
   959                           ; simple_byte            4     3 (average)
   960                           ; direct_byte           11     8 (fixed)
   961                           ; jumptable            260     6 (fixed)
   962                           ;	Chosen strategy is simple_byte
   963  057D  0871               	movf	togglePinData@portNum+1,w
   964  057E  3A00               	xorlw	0	; case 0
   965  057F  1903               	skipnz
   966  0580  2D82               	goto	l1644
   967  0581  2D93               	goto	l151
   968  0582                     l1644:
   969                           
   970                           ; Switch size 1, requested type "simple"
   971                           ; Number of cases is 5, Range of values is 0 to 4
   972                           ; switch strategies available:
   973                           ; Name         Instructions Cycles
   974                           ; simple_byte           16     9 (average)
   975                           ; direct_byte           23     8 (fixed)
   976                           ; jumptable            260     6 (fixed)
   977                           ;	Chosen strategy is simple_byte
   978  0582  0870               	movf	togglePinData@portNum,w
   979  0583  3A00               	xorlw	0	; case 0
   980  0584  1903               	skipnz
   981  0585  2D2D               	goto	l1408
   982  0586  3A01               	xorlw	1	; case 1
   983  0587  1903               	skipnz
   984  0588  2D3D               	goto	l1410
   985  0589  3A03               	xorlw	3	; case 2
   986  058A  1903               	skipnz
   987  058B  2D4D               	goto	l1412
   988  058C  3A01               	xorlw	1	; case 3
   989  058D  1903               	skipnz
   990  058E  2D5D               	goto	l1414
   991  058F  3A07               	xorlw	7	; case 4
   992  0590  1903               	skipnz
   993  0591  2D6D               	goto	l1416
   994  0592  2D93               	goto	l151
   995  0593                     l151:
   996  0593  0008               	return
   997  0594                     __end_of_togglePinData:
   998                           
   999                           	psect	text3
  1000  0594                     __ptext3:	
  1001 ;; *************** function _init_LCD *****************
  1002 ;; Defined at:
  1003 ;;		line 17 in file "LCD.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;		None
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;		None
  1008 ;; Return value:  Size  Location     Type
  1009 ;;                  1    wreg      void 
  1010 ;; Registers used:
  1011 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1012 ;; Tracked objects:
  1013 ;;		On entry : 0/0
  1014 ;;		On exit  : 0/0
  1015 ;;		Unchanged: 0/0
  1016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1017 ;;      Params:         0       0       0       0       0
  1018 ;;      Locals:         0       0       0       0       0
  1019 ;;      Temps:          0       2       0       0       0
  1020 ;;      Totals:         0       2       0       0       0
  1021 ;;Total ram usage:        2 bytes
  1022 ;; Hardware stack levels used: 1
  1023 ;; Hardware stack levels required when called: 4
  1024 ;; This function calls:
  1025 ;;		_LCD_clear
  1026 ;;		_LCD_cmd
  1027 ;;		_setPinData
  1028 ;;		_setPinDir
  1029 ;;		_setPortDir
  1030 ;; This function is called by:
  1031 ;;		_main
  1032 ;; This function uses a non-reentrant model
  1033 ;;
  1034                           
  1035                           
  1036                           ;psect for function _init_LCD
  1037  0594                     _init_LCD:
  1038  0594                     l1386:	
  1039                           ;incstack = 0
  1040                           ; Regs used in _init_LCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1041                           
  1042                           
  1043                           ;LCD.c: 19:     setPortDir(3, 0);
  1044  0594  3003               	movlw	3
  1045  0595  00F0               	movwf	setPortDir@portNum
  1046  0596  3000               	movlw	0
  1047  0597  00F1               	movwf	setPortDir@portNum+1
  1048  0598  3000               	movlw	0
  1049  0599  00F2               	movwf	setPortDir@state
  1050  059A  00F3               	movwf	setPortDir@state+1
  1051  059B  120A  118A  24CB  120A  118A  	fcall	_setPortDir
  1052                           
  1053                           ;LCD.c: 20:     setPinDir(2, RC0, 0);
  1054  05A0  3002               	movlw	2
  1055  05A1  00F0               	movwf	setPinDir@portNum
  1056  05A2  3000               	movlw	0
  1057  05A3  00F1               	movwf	setPinDir@portNum+1
  1058  05A4  1003               	clrc
  1059  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  1060  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  1061  05A7  1807               	btfsc	7,0	;volatile
  1062  05A8  1403               	setc
  1063  05A9  3000               	movlw	0
  1064  05AA  1803               	skipnc
  1065  05AB  3001               	movlw	1
  1066  05AC  00A0               	movwf	??_init_LCD
  1067  05AD  01A1               	clrf	??_init_LCD+1
  1068  05AE  0820               	movf	??_init_LCD,w
  1069  05AF  00F2               	movwf	setPinDir@pinNum
  1070  05B0  0821               	movf	??_init_LCD+1,w
  1071  05B1  00F3               	movwf	setPinDir@pinNum+1
  1072  05B2  3000               	movlw	0
  1073  05B3  00F4               	movwf	setPinDir@state
  1074  05B4  00F5               	movwf	setPinDir@state+1
  1075  05B5  120A  118A  2723  120A  118A  	fcall	_setPinDir
  1076                           
  1077                           ;LCD.c: 21:     setPinDir(2, RC1, 0);
  1078  05BA  3002               	movlw	2
  1079  05BB  00F0               	movwf	setPinDir@portNum
  1080  05BC  3000               	movlw	0
  1081  05BD  00F1               	movwf	setPinDir@portNum+1
  1082  05BE  1003               	clrc
  1083  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  1084  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  1085  05C1  1887               	btfsc	7,1	;volatile
  1086  05C2  1403               	setc
  1087  05C3  3000               	movlw	0
  1088  05C4  1803               	skipnc
  1089  05C5  3001               	movlw	1
  1090  05C6  00A0               	movwf	??_init_LCD
  1091  05C7  01A1               	clrf	??_init_LCD+1
  1092  05C8  0820               	movf	??_init_LCD,w
  1093  05C9  00F2               	movwf	setPinDir@pinNum
  1094  05CA  0821               	movf	??_init_LCD+1,w
  1095  05CB  00F3               	movwf	setPinDir@pinNum+1
  1096  05CC  3000               	movlw	0
  1097  05CD  00F4               	movwf	setPinDir@state
  1098  05CE  00F5               	movwf	setPinDir@state+1
  1099  05CF  120A  118A  2723  120A  118A  	fcall	_setPinDir
  1100                           
  1101                           ;LCD.c: 22:     setPinDir(2, RC2, 0);
  1102  05D4  3002               	movlw	2
  1103  05D5  00F0               	movwf	setPinDir@portNum
  1104  05D6  3000               	movlw	0
  1105  05D7  00F1               	movwf	setPinDir@portNum+1
  1106  05D8  1003               	clrc
  1107  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  1108  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  1109  05DB  1907               	btfsc	7,2	;volatile
  1110  05DC  1403               	setc
  1111  05DD  3000               	movlw	0
  1112  05DE  1803               	skipnc
  1113  05DF  3001               	movlw	1
  1114  05E0  00A0               	movwf	??_init_LCD
  1115  05E1  01A1               	clrf	??_init_LCD+1
  1116  05E2  0820               	movf	??_init_LCD,w
  1117  05E3  00F2               	movwf	setPinDir@pinNum
  1118  05E4  0821               	movf	??_init_LCD+1,w
  1119  05E5  00F3               	movwf	setPinDir@pinNum+1
  1120  05E6  3000               	movlw	0
  1121  05E7  00F4               	movwf	setPinDir@state
  1122  05E8  00F5               	movwf	setPinDir@state+1
  1123  05E9  120A  118A  2723  120A  118A  	fcall	_setPinDir
  1124                           
  1125                           ;LCD.c: 24:     setPinData(2, RC1, 1);
  1126  05EE  3002               	movlw	2
  1127  05EF  00F0               	movwf	setPinData@portNum
  1128  05F0  3000               	movlw	0
  1129  05F1  00F1               	movwf	setPinData@portNum+1
  1130  05F2  1003               	clrc
  1131  05F3  1283               	bcf	3,5	;RP0=0, select bank0
  1132  05F4  1303               	bcf	3,6	;RP1=0, select bank0
  1133  05F5  1887               	btfsc	7,1	;volatile
  1134  05F6  1403               	setc
  1135  05F7  3000               	movlw	0
  1136  05F8  1803               	skipnc
  1137  05F9  3001               	movlw	1
  1138  05FA  00A0               	movwf	??_init_LCD
  1139  05FB  01A1               	clrf	??_init_LCD+1
  1140  05FC  0820               	movf	??_init_LCD,w
  1141  05FD  00F2               	movwf	setPinData@pinNum
  1142  05FE  0821               	movf	??_init_LCD+1,w
  1143  05FF  00F3               	movwf	setPinData@pinNum+1
  1144  0600  3001               	movlw	1
  1145  0601  00F4               	movwf	setPinData@data
  1146  0602  3000               	movlw	0
  1147  0603  00F5               	movwf	setPinData@data+1
  1148  0604  120A  118A  264A  120A  118A  	fcall	_setPinData
  1149  0609                     l1388:
  1150                           
  1151                           ;LCD.c: 27:     _delay(100);
  1152  0609  3020               	movlw	32
  1153  060A  1283               	bcf	3,5	;RP0=0, select bank0
  1154  060B  1303               	bcf	3,6	;RP1=0, select bank0
  1155  060C  00A0               	movwf	??_init_LCD
  1156  060D                     u627:
  1157  060D  0BA0               	decfsz	??_init_LCD,f
  1158  060E  2E0D               	goto	u627
  1159  060F  0000               	nop
  1160  0610                     l1390:
  1161                           
  1162                           ;LCD.c: 28:     LCD_clear();
  1163  0610  120A  118A  235F  120A  118A  	fcall	_LCD_clear
  1164  0615                     l1392:
  1165                           
  1166                           ;LCD.c: 30:     LCD_cmd(0x38);
  1167  0615  3038               	movlw	56
  1168  0616  120A  118A  239B  120A  118A  	fcall	_LCD_cmd
  1169  061B                     l1394:
  1170                           
  1171                           ;LCD.c: 31:     _delay(100);
  1172  061B  3020               	movlw	32
  1173  061C  1283               	bcf	3,5	;RP0=0, select bank0
  1174  061D  1303               	bcf	3,6	;RP1=0, select bank0
  1175  061E  00A0               	movwf	??_init_LCD
  1176  061F                     u637:
  1177  061F  0BA0               	decfsz	??_init_LCD,f
  1178  0620  2E1F               	goto	u637
  1179  0621  0000               	nop
  1180                           
  1181                           ;LCD.c: 32:     LCD_cmd(0x0C);
  1182  0622  300C               	movlw	12
  1183  0623  120A  118A  239B  120A  118A  	fcall	_LCD_cmd
  1184  0628                     l1396:
  1185                           
  1186                           ;LCD.c: 33:     _delay(100);
  1187  0628  3020               	movlw	32
  1188  0629  1283               	bcf	3,5	;RP0=0, select bank0
  1189  062A  1303               	bcf	3,6	;RP1=0, select bank0
  1190  062B  00A0               	movwf	??_init_LCD
  1191  062C                     u647:
  1192  062C  0BA0               	decfsz	??_init_LCD,f
  1193  062D  2E2C               	goto	u647
  1194  062E  0000               	nop
  1195  062F                     l1398:
  1196                           
  1197                           ;LCD.c: 34:     LCD_cmd(0x06);
  1198  062F  3006               	movlw	6
  1199  0630  120A  118A  239B  120A  118A  	fcall	_LCD_cmd
  1200                           
  1201                           ;LCD.c: 35:     _delay(100);
  1202  0635  3020               	movlw	32
  1203  0636  1283               	bcf	3,5	;RP0=0, select bank0
  1204  0637  1303               	bcf	3,6	;RP1=0, select bank0
  1205  0638  00A0               	movwf	??_init_LCD
  1206  0639                     u657:
  1207  0639  0BA0               	decfsz	??_init_LCD,f
  1208  063A  2E39               	goto	u657
  1209  063B  0000               	nop
  1210  063C                     l1400:
  1211                           
  1212                           ;LCD.c: 36:     LCD_cmd(0x02);
  1213  063C  3002               	movlw	2
  1214  063D  120A  118A  239B  120A  118A  	fcall	_LCD_cmd
  1215  0642                     l1402:
  1216                           
  1217                           ;LCD.c: 38:     _delay(500);
  1218  0642  30A5               	movlw	165
  1219  0643  1283               	bcf	3,5	;RP0=0, select bank0
  1220  0644  1303               	bcf	3,6	;RP1=0, select bank0
  1221  0645  00A0               	movwf	??_init_LCD
  1222  0646                     u667:
  1223  0646  0BA0               	decfsz	??_init_LCD,f
  1224  0647  2E46               	goto	u667
  1225  0648  2E49               	nop2
  1226  0649                     l180:
  1227  0649  0008               	return
  1228  064A                     __end_of_init_LCD:
  1229                           
  1230                           	psect	text4
  1231  04CB                     __ptext4:	
  1232 ;; *************** function _setPortDir *****************
  1233 ;; Defined at:
  1234 ;;		line 28 in file "MIO.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;  portNum         2    0[COMMON] int 
  1237 ;;  state           2    2[COMMON] int 
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;		None
  1240 ;; Return value:  Size  Location     Type
  1241 ;;                  1    wreg      void 
  1242 ;; Registers used:
  1243 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1249 ;;      Params:         4       0       0       0       0
  1250 ;;      Locals:         0       0       0       0       0
  1251 ;;      Temps:          0       0       0       0       0
  1252 ;;      Totals:         4       0       0       0       0
  1253 ;;Total ram usage:        4 bytes
  1254 ;; Hardware stack levels used: 1
  1255 ;; This function calls:
  1256 ;;		Nothing
  1257 ;; This function is called by:
  1258 ;;		_main
  1259 ;;		_init_LCD
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263                           
  1264                           ;psect for function _setPortDir
  1265  04CB                     _setPortDir:
  1266  04CB                     l1310:	
  1267                           ;incstack = 0
  1268                           ; Regs used in _setPortDir: [wreg-fsr0h+status,2+status,0]
  1269                           
  1270                           
  1271                           ;MIO.c: 29:          if (state) {
  1272  04CB  0872               	movf	setPortDir@state,w
  1273  04CC  0473               	iorwf	setPortDir@state+1,w
  1274  04CD  1903               	btfsc	3,2
  1275  04CE  2CD0               	goto	u431
  1276  04CF  2CD1               	goto	u430
  1277  04D0                     u431:
  1278  04D0  2D15               	goto	l1336
  1279  04D1                     u430:
  1280  04D1  2CEB               	goto	l1324
  1281  04D2                     l1314:
  1282                           
  1283                           ;MIO.c: 33:                 TRISA = 0xFF;
  1284  04D2  30FF               	movlw	255
  1285  04D3  1683               	bsf	3,5	;RP0=1, select bank1
  1286  04D4  1303               	bcf	3,6	;RP1=0, select bank1
  1287  04D5  0085               	movwf	5	;volatile
  1288                           
  1289                           ;MIO.c: 34:                 break;
  1290  04D6  2D2B               	goto	l76
  1291  04D7                     l1316:
  1292                           
  1293                           ;MIO.c: 36:                 TRISB = 0xFF;
  1294  04D7  30FF               	movlw	255
  1295  04D8  1683               	bsf	3,5	;RP0=1, select bank1
  1296  04D9  1303               	bcf	3,6	;RP1=0, select bank1
  1297  04DA  0086               	movwf	6	;volatile
  1298                           
  1299                           ;MIO.c: 37:                 break;
  1300  04DB  2D2B               	goto	l76
  1301  04DC                     l1318:
  1302                           
  1303                           ;MIO.c: 39:                 TRISC = 0xFF;
  1304  04DC  30FF               	movlw	255
  1305  04DD  1683               	bsf	3,5	;RP0=1, select bank1
  1306  04DE  1303               	bcf	3,6	;RP1=0, select bank1
  1307  04DF  0087               	movwf	7	;volatile
  1308                           
  1309                           ;MIO.c: 40:                 break;
  1310  04E0  2D2B               	goto	l76
  1311  04E1                     l1320:
  1312                           
  1313                           ;MIO.c: 42:                 TRISD = 0xFF;
  1314  04E1  30FF               	movlw	255
  1315  04E2  1683               	bsf	3,5	;RP0=1, select bank1
  1316  04E3  1303               	bcf	3,6	;RP1=0, select bank1
  1317  04E4  0088               	movwf	8	;volatile
  1318                           
  1319                           ;MIO.c: 43:                 break;
  1320  04E5  2D2B               	goto	l76
  1321  04E6                     l1322:
  1322                           
  1323                           ;MIO.c: 45:                 TRISE = 0xFF;
  1324  04E6  30FF               	movlw	255
  1325  04E7  1683               	bsf	3,5	;RP0=1, select bank1
  1326  04E8  1303               	bcf	3,6	;RP1=0, select bank1
  1327  04E9  0089               	movwf	9	;volatile
  1328                           
  1329                           ;MIO.c: 46:                 break;
  1330  04EA  2D2B               	goto	l76
  1331  04EB                     l1324:
  1332                           
  1333                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1334                           ; Switch size 1, requested type "simple"
  1335                           ; Number of cases is 1, Range of values is 0 to 0
  1336                           ; switch strategies available:
  1337                           ; Name         Instructions Cycles
  1338                           ; simple_byte            4     3 (average)
  1339                           ; direct_byte           11     8 (fixed)
  1340                           ; jumptable            260     6 (fixed)
  1341                           ;	Chosen strategy is simple_byte
  1342  04EB  0871               	movf	setPortDir@portNum+1,w
  1343  04EC  3A00               	xorlw	0	; case 0
  1344  04ED  1903               	skipnz
  1345  04EE  2CF0               	goto	l1646
  1346  04EF  2D2B               	goto	l76
  1347  04F0                     l1646:
  1348                           
  1349                           ; Switch size 1, requested type "simple"
  1350                           ; Number of cases is 5, Range of values is 0 to 4
  1351                           ; switch strategies available:
  1352                           ; Name         Instructions Cycles
  1353                           ; simple_byte           16     9 (average)
  1354                           ; direct_byte           23     8 (fixed)
  1355                           ; jumptable            260     6 (fixed)
  1356                           ;	Chosen strategy is simple_byte
  1357  04F0  0870               	movf	setPortDir@portNum,w
  1358  04F1  3A00               	xorlw	0	; case 0
  1359  04F2  1903               	skipnz
  1360  04F3  2CD2               	goto	l1314
  1361  04F4  3A01               	xorlw	1	; case 1
  1362  04F5  1903               	skipnz
  1363  04F6  2CD7               	goto	l1316
  1364  04F7  3A03               	xorlw	3	; case 2
  1365  04F8  1903               	skipnz
  1366  04F9  2CDC               	goto	l1318
  1367  04FA  3A01               	xorlw	1	; case 3
  1368  04FB  1903               	skipnz
  1369  04FC  2CE1               	goto	l1320
  1370  04FD  3A07               	xorlw	7	; case 4
  1371  04FE  1903               	skipnz
  1372  04FF  2CE6               	goto	l1322
  1373  0500  2D2B               	goto	l76
  1374  0501                     l1326:
  1375                           
  1376                           ;MIO.c: 54:                 TRISA = 0x00;
  1377  0501  1683               	bsf	3,5	;RP0=1, select bank1
  1378  0502  1303               	bcf	3,6	;RP1=0, select bank1
  1379  0503  0185               	clrf	5	;volatile
  1380                           
  1381                           ;MIO.c: 55:                 break;
  1382  0504  2D2B               	goto	l76
  1383  0505                     l1328:
  1384                           
  1385                           ;MIO.c: 57:                 TRISB = 0x00;
  1386  0505  1683               	bsf	3,5	;RP0=1, select bank1
  1387  0506  1303               	bcf	3,6	;RP1=0, select bank1
  1388  0507  0186               	clrf	6	;volatile
  1389                           
  1390                           ;MIO.c: 58:                 break;
  1391  0508  2D2B               	goto	l76
  1392  0509                     l1330:
  1393                           
  1394                           ;MIO.c: 60:                 TRISC = 0x00;
  1395  0509  1683               	bsf	3,5	;RP0=1, select bank1
  1396  050A  1303               	bcf	3,6	;RP1=0, select bank1
  1397  050B  0187               	clrf	7	;volatile
  1398                           
  1399                           ;MIO.c: 61:                 break;
  1400  050C  2D2B               	goto	l76
  1401  050D                     l1332:
  1402                           
  1403                           ;MIO.c: 63:                 TRISD = 0x00;
  1404  050D  1683               	bsf	3,5	;RP0=1, select bank1
  1405  050E  1303               	bcf	3,6	;RP1=0, select bank1
  1406  050F  0188               	clrf	8	;volatile
  1407                           
  1408                           ;MIO.c: 64:                 break;
  1409  0510  2D2B               	goto	l76
  1410  0511                     l1334:
  1411                           
  1412                           ;MIO.c: 66:                 TRISE = 0x00;
  1413  0511  1683               	bsf	3,5	;RP0=1, select bank1
  1414  0512  1303               	bcf	3,6	;RP1=0, select bank1
  1415  0513  0189               	clrf	9	;volatile
  1416                           
  1417                           ;MIO.c: 67:                 break;
  1418  0514  2D2B               	goto	l76
  1419  0515                     l1336:
  1420                           
  1421                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1422                           ; Switch size 1, requested type "simple"
  1423                           ; Number of cases is 1, Range of values is 0 to 0
  1424                           ; switch strategies available:
  1425                           ; Name         Instructions Cycles
  1426                           ; simple_byte            4     3 (average)
  1427                           ; direct_byte           11     8 (fixed)
  1428                           ; jumptable            260     6 (fixed)
  1429                           ;	Chosen strategy is simple_byte
  1430  0515  0871               	movf	setPortDir@portNum+1,w
  1431  0516  3A00               	xorlw	0	; case 0
  1432  0517  1903               	skipnz
  1433  0518  2D1A               	goto	l1648
  1434  0519  2D2B               	goto	l76
  1435  051A                     l1648:
  1436                           
  1437                           ; Switch size 1, requested type "simple"
  1438                           ; Number of cases is 5, Range of values is 0 to 4
  1439                           ; switch strategies available:
  1440                           ; Name         Instructions Cycles
  1441                           ; simple_byte           16     9 (average)
  1442                           ; direct_byte           23     8 (fixed)
  1443                           ; jumptable            260     6 (fixed)
  1444                           ;	Chosen strategy is simple_byte
  1445  051A  0870               	movf	setPortDir@portNum,w
  1446  051B  3A00               	xorlw	0	; case 0
  1447  051C  1903               	skipnz
  1448  051D  2D01               	goto	l1326
  1449  051E  3A01               	xorlw	1	; case 1
  1450  051F  1903               	skipnz
  1451  0520  2D05               	goto	l1328
  1452  0521  3A03               	xorlw	3	; case 2
  1453  0522  1903               	skipnz
  1454  0523  2D09               	goto	l1330
  1455  0524  3A01               	xorlw	1	; case 3
  1456  0525  1903               	skipnz
  1457  0526  2D0D               	goto	l1332
  1458  0527  3A07               	xorlw	7	; case 4
  1459  0528  1903               	skipnz
  1460  0529  2D11               	goto	l1334
  1461  052A  2D2B               	goto	l76
  1462  052B                     l76:
  1463  052B  0008               	return
  1464  052C                     __end_of_setPortDir:
  1465                           
  1466                           	psect	text5
  1467  0723                     __ptext5:	
  1468 ;; *************** function _setPinDir *****************
  1469 ;; Defined at:
  1470 ;;		line 118 in file "MIO.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;  portNum         2    0[COMMON] int 
  1473 ;;  pinNum          2    2[COMMON] int 
  1474 ;;  state           2    4[COMMON] int 
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;		None
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1486 ;;      Params:         6       0       0       0       0
  1487 ;;      Locals:         0       0       0       0       0
  1488 ;;      Temps:          2       0       0       0       0
  1489 ;;      Totals:         8       0       0       0       0
  1490 ;;Total ram usage:        8 bytes
  1491 ;; Hardware stack levels used: 1
  1492 ;; This function calls:
  1493 ;;		Nothing
  1494 ;; This function is called by:
  1495 ;;		_main
  1496 ;;		_init_LCD
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           
  1501                           ;psect for function _setPinDir
  1502  0723                     _setPinDir:
  1503  0723                     l1346:	
  1504                           ;incstack = 0
  1505                           ; Regs used in _setPinDir: [wreg-fsr0h+status,2+status,0]
  1506                           
  1507                           
  1508                           ;MIO.c: 119: if (state) {
  1509  0723  0874               	movf	setPinDir@state,w
  1510  0724  0475               	iorwf	setPinDir@state+1,w
  1511  0725  1903               	btfsc	3,2
  1512  0726  2F28               	goto	u441
  1513  0727  2F29               	goto	u440
  1514  0728                     u441:
  1515  0728  2FE5               	goto	l1372
  1516  0729                     u440:
  1517  0729  2F7A               	goto	l1360
  1518  072A                     l1350:
  1519                           
  1520                           ;MIO.c: 123:                 TRISA |= (1 << pinNum);
  1521  072A  3001               	movlw	1
  1522  072B  00F6               	movwf	??_setPinDir
  1523  072C  0A72               	incf	setPinDir@pinNum,w
  1524  072D  2F30               	goto	u454
  1525  072E                     u455:
  1526  072E  1003               	clrc
  1527  072F  0DF6               	rlf	??_setPinDir,f
  1528  0730                     u454:
  1529  0730  3EFF               	addlw	-1
  1530  0731  1D03               	skipz
  1531  0732  2F2E               	goto	u455
  1532  0733  0876               	movf	??_setPinDir,w
  1533  0734  00F7               	movwf	??_setPinDir+1
  1534  0735  0877               	movf	??_setPinDir+1,w
  1535  0736  1683               	bsf	3,5	;RP0=1, select bank1
  1536  0737  1303               	bcf	3,6	;RP1=0, select bank1
  1537  0738  0485               	iorwf	5,f	;volatile
  1538                           
  1539                           ;MIO.c: 124:                 break;
  1540  0739  2FFB               	goto	l119
  1541  073A                     l1352:
  1542                           
  1543                           ;MIO.c: 126:                 TRISB |= (1 << pinNum);
  1544  073A  3001               	movlw	1
  1545  073B  00F6               	movwf	??_setPinDir
  1546  073C  0A72               	incf	setPinDir@pinNum,w
  1547  073D  2F40               	goto	u464
  1548  073E                     u465:
  1549  073E  1003               	clrc
  1550  073F  0DF6               	rlf	??_setPinDir,f
  1551  0740                     u464:
  1552  0740  3EFF               	addlw	-1
  1553  0741  1D03               	skipz
  1554  0742  2F3E               	goto	u465
  1555  0743  0876               	movf	??_setPinDir,w
  1556  0744  00F7               	movwf	??_setPinDir+1
  1557  0745  0877               	movf	??_setPinDir+1,w
  1558  0746  1683               	bsf	3,5	;RP0=1, select bank1
  1559  0747  1303               	bcf	3,6	;RP1=0, select bank1
  1560  0748  0486               	iorwf	6,f	;volatile
  1561                           
  1562                           ;MIO.c: 127:                 break;
  1563  0749  2FFB               	goto	l119
  1564  074A                     l1354:
  1565                           
  1566                           ;MIO.c: 129:                 TRISC |= (1 << pinNum);
  1567  074A  3001               	movlw	1
  1568  074B  00F6               	movwf	??_setPinDir
  1569  074C  0A72               	incf	setPinDir@pinNum,w
  1570  074D  2F50               	goto	u474
  1571  074E                     u475:
  1572  074E  1003               	clrc
  1573  074F  0DF6               	rlf	??_setPinDir,f
  1574  0750                     u474:
  1575  0750  3EFF               	addlw	-1
  1576  0751  1D03               	skipz
  1577  0752  2F4E               	goto	u475
  1578  0753  0876               	movf	??_setPinDir,w
  1579  0754  00F7               	movwf	??_setPinDir+1
  1580  0755  0877               	movf	??_setPinDir+1,w
  1581  0756  1683               	bsf	3,5	;RP0=1, select bank1
  1582  0757  1303               	bcf	3,6	;RP1=0, select bank1
  1583  0758  0487               	iorwf	7,f	;volatile
  1584                           
  1585                           ;MIO.c: 130:                 break;
  1586  0759  2FFB               	goto	l119
  1587  075A                     l1356:
  1588                           
  1589                           ;MIO.c: 132:                 TRISD |= (1 << pinNum);
  1590  075A  3001               	movlw	1
  1591  075B  00F6               	movwf	??_setPinDir
  1592  075C  0A72               	incf	setPinDir@pinNum,w
  1593  075D  2F60               	goto	u484
  1594  075E                     u485:
  1595  075E  1003               	clrc
  1596  075F  0DF6               	rlf	??_setPinDir,f
  1597  0760                     u484:
  1598  0760  3EFF               	addlw	-1
  1599  0761  1D03               	skipz
  1600  0762  2F5E               	goto	u485
  1601  0763  0876               	movf	??_setPinDir,w
  1602  0764  00F7               	movwf	??_setPinDir+1
  1603  0765  0877               	movf	??_setPinDir+1,w
  1604  0766  1683               	bsf	3,5	;RP0=1, select bank1
  1605  0767  1303               	bcf	3,6	;RP1=0, select bank1
  1606  0768  0488               	iorwf	8,f	;volatile
  1607                           
  1608                           ;MIO.c: 133:                 break;
  1609  0769  2FFB               	goto	l119
  1610  076A                     l1358:
  1611                           
  1612                           ;MIO.c: 135:                 TRISE |= (1 << pinNum);
  1613  076A  3001               	movlw	1
  1614  076B  00F6               	movwf	??_setPinDir
  1615  076C  0A72               	incf	setPinDir@pinNum,w
  1616  076D  2F70               	goto	u494
  1617  076E                     u495:
  1618  076E  1003               	clrc
  1619  076F  0DF6               	rlf	??_setPinDir,f
  1620  0770                     u494:
  1621  0770  3EFF               	addlw	-1
  1622  0771  1D03               	skipz
  1623  0772  2F6E               	goto	u495
  1624  0773  0876               	movf	??_setPinDir,w
  1625  0774  00F7               	movwf	??_setPinDir+1
  1626  0775  0877               	movf	??_setPinDir+1,w
  1627  0776  1683               	bsf	3,5	;RP0=1, select bank1
  1628  0777  1303               	bcf	3,6	;RP1=0, select bank1
  1629  0778  0489               	iorwf	9,f	;volatile
  1630                           
  1631                           ;MIO.c: 136:                 break;
  1632  0779  2FFB               	goto	l119
  1633  077A                     l1360:
  1634                           
  1635                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1636                           ; Switch size 1, requested type "simple"
  1637                           ; Number of cases is 1, Range of values is 0 to 0
  1638                           ; switch strategies available:
  1639                           ; Name         Instructions Cycles
  1640                           ; simple_byte            4     3 (average)
  1641                           ; direct_byte           11     8 (fixed)
  1642                           ; jumptable            260     6 (fixed)
  1643                           ;	Chosen strategy is simple_byte
  1644  077A  0871               	movf	setPinDir@portNum+1,w
  1645  077B  3A00               	xorlw	0	; case 0
  1646  077C  1903               	skipnz
  1647  077D  2F7F               	goto	l1650
  1648  077E  2FFB               	goto	l119
  1649  077F                     l1650:
  1650                           
  1651                           ; Switch size 1, requested type "simple"
  1652                           ; Number of cases is 5, Range of values is 0 to 4
  1653                           ; switch strategies available:
  1654                           ; Name         Instructions Cycles
  1655                           ; simple_byte           16     9 (average)
  1656                           ; direct_byte           23     8 (fixed)
  1657                           ; jumptable            260     6 (fixed)
  1658                           ;	Chosen strategy is simple_byte
  1659  077F  0870               	movf	setPinDir@portNum,w
  1660  0780  3A00               	xorlw	0	; case 0
  1661  0781  1903               	skipnz
  1662  0782  2F2A               	goto	l1350
  1663  0783  3A01               	xorlw	1	; case 1
  1664  0784  1903               	skipnz
  1665  0785  2F3A               	goto	l1352
  1666  0786  3A03               	xorlw	3	; case 2
  1667  0787  1903               	skipnz
  1668  0788  2F4A               	goto	l1354
  1669  0789  3A01               	xorlw	1	; case 3
  1670  078A  1903               	skipnz
  1671  078B  2F5A               	goto	l1356
  1672  078C  3A07               	xorlw	7	; case 4
  1673  078D  1903               	skipnz
  1674  078E  2F6A               	goto	l1358
  1675  078F  2FFB               	goto	l119
  1676  0790                     l1362:
  1677                           
  1678                           ;MIO.c: 145:                 TRISA &= ~(1 << pinNum);
  1679  0790  3001               	movlw	1
  1680  0791  00F6               	movwf	??_setPinDir
  1681  0792  0A72               	incf	setPinDir@pinNum,w
  1682  0793  2F96               	goto	u504
  1683  0794                     u505:
  1684  0794  1003               	clrc
  1685  0795  0DF6               	rlf	??_setPinDir,f
  1686  0796                     u504:
  1687  0796  3EFF               	addlw	-1
  1688  0797  1D03               	skipz
  1689  0798  2F94               	goto	u505
  1690  0799  0876               	movf	??_setPinDir,w
  1691  079A  3AFF               	xorlw	255
  1692  079B  00F7               	movwf	??_setPinDir+1
  1693  079C  0877               	movf	??_setPinDir+1,w
  1694  079D  1683               	bsf	3,5	;RP0=1, select bank1
  1695  079E  1303               	bcf	3,6	;RP1=0, select bank1
  1696  079F  0585               	andwf	5,f	;volatile
  1697                           
  1698                           ;MIO.c: 146:                 break;
  1699  07A0  2FFB               	goto	l119
  1700  07A1                     l1364:
  1701                           
  1702                           ;MIO.c: 148:                 TRISB &= ~(1 << pinNum);
  1703  07A1  3001               	movlw	1
  1704  07A2  00F6               	movwf	??_setPinDir
  1705  07A3  0A72               	incf	setPinDir@pinNum,w
  1706  07A4  2FA7               	goto	u514
  1707  07A5                     u515:
  1708  07A5  1003               	clrc
  1709  07A6  0DF6               	rlf	??_setPinDir,f
  1710  07A7                     u514:
  1711  07A7  3EFF               	addlw	-1
  1712  07A8  1D03               	skipz
  1713  07A9  2FA5               	goto	u515
  1714  07AA  0876               	movf	??_setPinDir,w
  1715  07AB  3AFF               	xorlw	255
  1716  07AC  00F7               	movwf	??_setPinDir+1
  1717  07AD  0877               	movf	??_setPinDir+1,w
  1718  07AE  1683               	bsf	3,5	;RP0=1, select bank1
  1719  07AF  1303               	bcf	3,6	;RP1=0, select bank1
  1720  07B0  0586               	andwf	6,f	;volatile
  1721                           
  1722                           ;MIO.c: 149:                 break;
  1723  07B1  2FFB               	goto	l119
  1724  07B2                     l1366:
  1725                           
  1726                           ;MIO.c: 151:                 TRISC &= ~(1 << pinNum);
  1727  07B2  3001               	movlw	1
  1728  07B3  00F6               	movwf	??_setPinDir
  1729  07B4  0A72               	incf	setPinDir@pinNum,w
  1730  07B5  2FB8               	goto	u524
  1731  07B6                     u525:
  1732  07B6  1003               	clrc
  1733  07B7  0DF6               	rlf	??_setPinDir,f
  1734  07B8                     u524:
  1735  07B8  3EFF               	addlw	-1
  1736  07B9  1D03               	skipz
  1737  07BA  2FB6               	goto	u525
  1738  07BB  0876               	movf	??_setPinDir,w
  1739  07BC  3AFF               	xorlw	255
  1740  07BD  00F7               	movwf	??_setPinDir+1
  1741  07BE  0877               	movf	??_setPinDir+1,w
  1742  07BF  1683               	bsf	3,5	;RP0=1, select bank1
  1743  07C0  1303               	bcf	3,6	;RP1=0, select bank1
  1744  07C1  0587               	andwf	7,f	;volatile
  1745                           
  1746                           ;MIO.c: 152:                 break;
  1747  07C2  2FFB               	goto	l119
  1748  07C3                     l1368:
  1749                           
  1750                           ;MIO.c: 154:                 TRISD &= ~(1 << pinNum);
  1751  07C3  3001               	movlw	1
  1752  07C4  00F6               	movwf	??_setPinDir
  1753  07C5  0A72               	incf	setPinDir@pinNum,w
  1754  07C6  2FC9               	goto	u534
  1755  07C7                     u535:
  1756  07C7  1003               	clrc
  1757  07C8  0DF6               	rlf	??_setPinDir,f
  1758  07C9                     u534:
  1759  07C9  3EFF               	addlw	-1
  1760  07CA  1D03               	skipz
  1761  07CB  2FC7               	goto	u535
  1762  07CC  0876               	movf	??_setPinDir,w
  1763  07CD  3AFF               	xorlw	255
  1764  07CE  00F7               	movwf	??_setPinDir+1
  1765  07CF  0877               	movf	??_setPinDir+1,w
  1766  07D0  1683               	bsf	3,5	;RP0=1, select bank1
  1767  07D1  1303               	bcf	3,6	;RP1=0, select bank1
  1768  07D2  0588               	andwf	8,f	;volatile
  1769                           
  1770                           ;MIO.c: 155:                 break;
  1771  07D3  2FFB               	goto	l119
  1772  07D4                     l1370:
  1773                           
  1774                           ;MIO.c: 157:                 TRISE &= ~(1 << pinNum);
  1775  07D4  3001               	movlw	1
  1776  07D5  00F6               	movwf	??_setPinDir
  1777  07D6  0A72               	incf	setPinDir@pinNum,w
  1778  07D7  2FDA               	goto	u544
  1779  07D8                     u545:
  1780  07D8  1003               	clrc
  1781  07D9  0DF6               	rlf	??_setPinDir,f
  1782  07DA                     u544:
  1783  07DA  3EFF               	addlw	-1
  1784  07DB  1D03               	skipz
  1785  07DC  2FD8               	goto	u545
  1786  07DD  0876               	movf	??_setPinDir,w
  1787  07DE  3AFF               	xorlw	255
  1788  07DF  00F7               	movwf	??_setPinDir+1
  1789  07E0  0877               	movf	??_setPinDir+1,w
  1790  07E1  1683               	bsf	3,5	;RP0=1, select bank1
  1791  07E2  1303               	bcf	3,6	;RP1=0, select bank1
  1792  07E3  0589               	andwf	9,f	;volatile
  1793                           
  1794                           ;MIO.c: 158:                 break;
  1795  07E4  2FFB               	goto	l119
  1796  07E5                     l1372:
  1797                           
  1798                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1799                           ; Switch size 1, requested type "simple"
  1800                           ; Number of cases is 1, Range of values is 0 to 0
  1801                           ; switch strategies available:
  1802                           ; Name         Instructions Cycles
  1803                           ; simple_byte            4     3 (average)
  1804                           ; direct_byte           11     8 (fixed)
  1805                           ; jumptable            260     6 (fixed)
  1806                           ;	Chosen strategy is simple_byte
  1807  07E5  0871               	movf	setPinDir@portNum+1,w
  1808  07E6  3A00               	xorlw	0	; case 0
  1809  07E7  1903               	skipnz
  1810  07E8  2FEA               	goto	l1652
  1811  07E9  2FFB               	goto	l119
  1812  07EA                     l1652:
  1813                           
  1814                           ; Switch size 1, requested type "simple"
  1815                           ; Number of cases is 5, Range of values is 0 to 4
  1816                           ; switch strategies available:
  1817                           ; Name         Instructions Cycles
  1818                           ; simple_byte           16     9 (average)
  1819                           ; direct_byte           23     8 (fixed)
  1820                           ; jumptable            260     6 (fixed)
  1821                           ;	Chosen strategy is simple_byte
  1822  07EA  0870               	movf	setPinDir@portNum,w
  1823  07EB  3A00               	xorlw	0	; case 0
  1824  07EC  1903               	skipnz
  1825  07ED  2F90               	goto	l1362
  1826  07EE  3A01               	xorlw	1	; case 1
  1827  07EF  1903               	skipnz
  1828  07F0  2FA1               	goto	l1364
  1829  07F1  3A03               	xorlw	3	; case 2
  1830  07F2  1903               	skipnz
  1831  07F3  2FB2               	goto	l1366
  1832  07F4  3A01               	xorlw	1	; case 3
  1833  07F5  1903               	skipnz
  1834  07F6  2FC3               	goto	l1368
  1835  07F7  3A07               	xorlw	7	; case 4
  1836  07F8  1903               	skipnz
  1837  07F9  2FD4               	goto	l1370
  1838  07FA  2FFB               	goto	l119
  1839  07FB                     l119:
  1840  07FB  0008               	return
  1841  07FC                     __end_of_setPinDir:
  1842                           
  1843                           	psect	text6
  1844  035F                     __ptext6:	
  1845 ;; *************** function _LCD_clear *****************
  1846 ;; Defined at:
  1847 ;;		line 13 in file "LCD.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;		None
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;		None
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  1    wreg      void 
  1854 ;; Registers used:
  1855 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1861 ;;      Params:         0       0       0       0       0
  1862 ;;      Locals:         0       0       0       0       0
  1863 ;;      Temps:          1       0       0       0       0
  1864 ;;      Totals:         1       0       0       0       0
  1865 ;;Total ram usage:        1 bytes
  1866 ;; Hardware stack levels used: 1
  1867 ;; Hardware stack levels required when called: 3
  1868 ;; This function calls:
  1869 ;;		_LCD_cmd
  1870 ;; This function is called by:
  1871 ;;		_init_LCD
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           
  1876                           ;psect for function _LCD_clear
  1877  035F                     _LCD_clear:
  1878  035F                     l1382:	
  1879                           ;incstack = 0
  1880                           ; Regs used in _LCD_clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1881                           
  1882                           
  1883                           ;LCD.c: 14:     LCD_cmd(0x01);
  1884  035F  3001               	movlw	1
  1885  0360  120A  118A  239B  120A  118A  	fcall	_LCD_cmd
  1886  0365                     l1384:
  1887                           
  1888                           ;LCD.c: 15:     _delay(100);
  1889  0365  3021               	movlw	33
  1890  0366  00FD               	movwf	??_LCD_clear
  1891  0367                     u677:
  1892  0367  0BFD               	decfsz	??_LCD_clear,f
  1893  0368  2B67               	goto	u677
  1894  0369                     l177:
  1895  0369  0008               	return
  1896  036A                     __end_of_LCD_clear:
  1897                           
  1898                           	psect	text7
  1899  039B                     __ptext7:	
  1900 ;; *************** function _LCD_cmd *****************
  1901 ;; Defined at:
  1902 ;;		line 65 in file "LCD.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;  cmd             1    wreg     unsigned char 
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;  cmd             1   12[COMMON] unsigned char 
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  1    wreg      void 
  1909 ;; Registers used:
  1910 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1916 ;;      Params:         0       0       0       0       0
  1917 ;;      Locals:         1       0       0       0       0
  1918 ;;      Temps:          2       0       0       0       0
  1919 ;;      Totals:         3       0       0       0       0
  1920 ;;Total ram usage:        3 bytes
  1921 ;; Hardware stack levels used: 1
  1922 ;; Hardware stack levels required when called: 2
  1923 ;; This function calls:
  1924 ;;		_LCD_enable
  1925 ;;		_setPinData
  1926 ;;		_setPortData
  1927 ;; This function is called by:
  1928 ;;		_LCD_clear
  1929 ;;		_init_LCD
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           
  1934                           ;psect for function _LCD_cmd
  1935  039B                     _LCD_cmd:
  1936                           
  1937                           ;incstack = 0
  1938                           ; Regs used in _LCD_cmd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1939                           ;LCD_cmd@cmd stored from wreg
  1940  039B  00FC               	movwf	LCD_cmd@cmd
  1941  039C                     l1308:
  1942                           
  1943                           ;LCD.c: 67:     setPinData(2, RC0, 0);
  1944  039C  3002               	movlw	2
  1945  039D  00F0               	movwf	setPinData@portNum
  1946  039E  3000               	movlw	0
  1947  039F  00F1               	movwf	setPinData@portNum+1
  1948  03A0  1003               	clrc
  1949  03A1  1283               	bcf	3,5	;RP0=0, select bank0
  1950  03A2  1303               	bcf	3,6	;RP1=0, select bank0
  1951  03A3  1807               	btfsc	7,0	;volatile
  1952  03A4  1403               	setc
  1953  03A5  3000               	movlw	0
  1954  03A6  1803               	skipnc
  1955  03A7  3001               	movlw	1
  1956  03A8  00FA               	movwf	??_LCD_cmd
  1957  03A9  01FB               	clrf	??_LCD_cmd+1
  1958  03AA  087A               	movf	??_LCD_cmd,w
  1959  03AB  00F2               	movwf	setPinData@pinNum
  1960  03AC  087B               	movf	??_LCD_cmd+1,w
  1961  03AD  00F3               	movwf	setPinData@pinNum+1
  1962  03AE  3000               	movlw	0
  1963  03AF  00F4               	movwf	setPinData@data
  1964  03B0  00F5               	movwf	setPinData@data+1
  1965  03B1  120A  118A  264A  120A  118A  	fcall	_setPinData
  1966                           
  1967                           ;LCD.c: 69:     setPortData(3, cmd);
  1968  03B6  3003               	movlw	3
  1969  03B7  00F0               	movwf	setPortData@portNum
  1970  03B8  3000               	movlw	0
  1971  03B9  00F1               	movwf	setPortData@portNum+1
  1972  03BA  087C               	movf	LCD_cmd@cmd,w
  1973  03BB  00FA               	movwf	??_LCD_cmd
  1974  03BC  01FB               	clrf	??_LCD_cmd+1
  1975  03BD  087A               	movf	??_LCD_cmd,w
  1976  03BE  00F2               	movwf	setPortData@data
  1977  03BF  087B               	movf	??_LCD_cmd+1,w
  1978  03C0  00F3               	movwf	setPortData@data+1
  1979  03C1  120A  118A  236A  120A  118A  	fcall	_setPortData
  1980                           
  1981                           ;LCD.c: 71:     LCD_enable();
  1982  03C6  120A  118A  23FE  120A  118A  	fcall	_LCD_enable
  1983  03CB                     l195:
  1984  03CB  0008               	return
  1985  03CC                     __end_of_LCD_cmd:
  1986                           
  1987                           	psect	text8
  1988  03CC                     __ptext8:	
  1989 ;; *************** function _LCD_write *****************
  1990 ;; Defined at:
  1991 ;;		line 41 in file "LCD.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;  data            1    wreg     unsigned char 
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;  data            1   12[COMMON] unsigned char 
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  1    wreg      void 
  1998 ;; Registers used:
  1999 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2005 ;;      Params:         0       0       0       0       0
  2006 ;;      Locals:         1       0       0       0       0
  2007 ;;      Temps:          2       0       0       0       0
  2008 ;;      Totals:         3       0       0       0       0
  2009 ;;Total ram usage:        3 bytes
  2010 ;; Hardware stack levels used: 1
  2011 ;; Hardware stack levels required when called: 2
  2012 ;; This function calls:
  2013 ;;		_LCD_enable
  2014 ;;		_setPinData
  2015 ;;		_setPortData
  2016 ;; This function is called by:
  2017 ;;		_main
  2018 ;;		_LCD_write_str
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           
  2023                           ;psect for function _LCD_write
  2024  03CC                     _LCD_write:
  2025                           
  2026                           ;incstack = 0
  2027                           ; Regs used in _LCD_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2028                           ;LCD_write@data stored from wreg
  2029  03CC  00FC               	movwf	LCD_write@data
  2030  03CD                     l1404:
  2031                           
  2032                           ;LCD.c: 43:     setPinData(2, RC0, 1);
  2033  03CD  3002               	movlw	2
  2034  03CE  00F0               	movwf	setPinData@portNum
  2035  03CF  3000               	movlw	0
  2036  03D0  00F1               	movwf	setPinData@portNum+1
  2037  03D1  1003               	clrc
  2038  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  2039  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  2040  03D4  1807               	btfsc	7,0	;volatile
  2041  03D5  1403               	setc
  2042  03D6  3000               	movlw	0
  2043  03D7  1803               	skipnc
  2044  03D8  3001               	movlw	1
  2045  03D9  00FA               	movwf	??_LCD_write
  2046  03DA  01FB               	clrf	??_LCD_write+1
  2047  03DB  087A               	movf	??_LCD_write,w
  2048  03DC  00F2               	movwf	setPinData@pinNum
  2049  03DD  087B               	movf	??_LCD_write+1,w
  2050  03DE  00F3               	movwf	setPinData@pinNum+1
  2051  03DF  3001               	movlw	1
  2052  03E0  00F4               	movwf	setPinData@data
  2053  03E1  3000               	movlw	0
  2054  03E2  00F5               	movwf	setPinData@data+1
  2055  03E3  120A  118A  264A  120A  118A  	fcall	_setPinData
  2056                           
  2057                           ;LCD.c: 45:     setPortData(3, data);
  2058  03E8  3003               	movlw	3
  2059  03E9  00F0               	movwf	setPortData@portNum
  2060  03EA  3000               	movlw	0
  2061  03EB  00F1               	movwf	setPortData@portNum+1
  2062  03EC  087C               	movf	LCD_write@data,w
  2063  03ED  00FA               	movwf	??_LCD_write
  2064  03EE  01FB               	clrf	??_LCD_write+1
  2065  03EF  087A               	movf	??_LCD_write,w
  2066  03F0  00F2               	movwf	setPortData@data
  2067  03F1  087B               	movf	??_LCD_write+1,w
  2068  03F2  00F3               	movwf	setPortData@data+1
  2069  03F3  120A  118A  236A  120A  118A  	fcall	_setPortData
  2070                           
  2071                           ;LCD.c: 47:     LCD_enable();
  2072  03F8  120A  118A  23FE  120A  118A  	fcall	_LCD_enable
  2073  03FD                     l183:
  2074  03FD  0008               	return
  2075  03FE                     __end_of_LCD_write:
  2076                           
  2077                           	psect	text9
  2078  036A                     __ptext9:	
  2079 ;; *************** function _setPortData *****************
  2080 ;; Defined at:
  2081 ;;		line 73 in file "MIO.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;  portNum         2    0[COMMON] int 
  2084 ;;  data            2    2[COMMON] int 
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;		None
  2087 ;; Return value:  Size  Location     Type
  2088 ;;                  1    wreg      void 
  2089 ;; Registers used:
  2090 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2091 ;; Tracked objects:
  2092 ;;		On entry : 0/0
  2093 ;;		On exit  : 0/0
  2094 ;;		Unchanged: 0/0
  2095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2096 ;;      Params:         4       0       0       0       0
  2097 ;;      Locals:         0       0       0       0       0
  2098 ;;      Temps:          0       0       0       0       0
  2099 ;;      Totals:         4       0       0       0       0
  2100 ;;Total ram usage:        4 bytes
  2101 ;; Hardware stack levels used: 1
  2102 ;; This function calls:
  2103 ;;		Nothing
  2104 ;; This function is called by:
  2105 ;;		_LCD_write
  2106 ;;		_LCD_cmd
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110                           
  2111                           ;psect for function _setPortData
  2112  036A                     _setPortData:
  2113  036A                     l1284:	
  2114                           ;incstack = 0
  2115                           ; Regs used in _setPortData: [wreg-fsr0h+status,2+status,0]
  2116                           
  2117                           
  2118                           ;MIO.c: 74: switch (portNum) {
  2119  036A  2B84               	goto	l1296
  2120  036B                     l1286:
  2121                           
  2122                           ;MIO.c: 76:             PORTA = data;
  2123  036B  0872               	movf	setPortData@data,w
  2124  036C  1283               	bcf	3,5	;RP0=0, select bank0
  2125  036D  1303               	bcf	3,6	;RP1=0, select bank0
  2126  036E  0085               	movwf	5	;volatile
  2127                           
  2128                           ;MIO.c: 77:             break;
  2129  036F  2B9A               	goto	l87
  2130  0370                     l1288:
  2131                           
  2132                           ;MIO.c: 79:             PORTB = data;
  2133  0370  0872               	movf	setPortData@data,w
  2134  0371  1283               	bcf	3,5	;RP0=0, select bank0
  2135  0372  1303               	bcf	3,6	;RP1=0, select bank0
  2136  0373  0086               	movwf	6	;volatile
  2137                           
  2138                           ;MIO.c: 80:             break;
  2139  0374  2B9A               	goto	l87
  2140  0375                     l1290:
  2141                           
  2142                           ;MIO.c: 82:             PORTC = data;
  2143  0375  0872               	movf	setPortData@data,w
  2144  0376  1283               	bcf	3,5	;RP0=0, select bank0
  2145  0377  1303               	bcf	3,6	;RP1=0, select bank0
  2146  0378  0087               	movwf	7	;volatile
  2147                           
  2148                           ;MIO.c: 83:             break;
  2149  0379  2B9A               	goto	l87
  2150  037A                     l1292:
  2151                           
  2152                           ;MIO.c: 85:             PORTD = data;
  2153  037A  0872               	movf	setPortData@data,w
  2154  037B  1283               	bcf	3,5	;RP0=0, select bank0
  2155  037C  1303               	bcf	3,6	;RP1=0, select bank0
  2156  037D  0088               	movwf	8	;volatile
  2157                           
  2158                           ;MIO.c: 86:             break;
  2159  037E  2B9A               	goto	l87
  2160  037F                     l1294:
  2161                           
  2162                           ;MIO.c: 88:             PORTE = data;
  2163  037F  0872               	movf	setPortData@data,w
  2164  0380  1283               	bcf	3,5	;RP0=0, select bank0
  2165  0381  1303               	bcf	3,6	;RP1=0, select bank0
  2166  0382  0089               	movwf	9	;volatile
  2167                           
  2168                           ;MIO.c: 89:             break;
  2169  0383  2B9A               	goto	l87
  2170  0384                     l1296:
  2171                           
  2172                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2173                           ; Switch size 1, requested type "simple"
  2174                           ; Number of cases is 1, Range of values is 0 to 0
  2175                           ; switch strategies available:
  2176                           ; Name         Instructions Cycles
  2177                           ; simple_byte            4     3 (average)
  2178                           ; direct_byte           11     8 (fixed)
  2179                           ; jumptable            260     6 (fixed)
  2180                           ;	Chosen strategy is simple_byte
  2181  0384  0871               	movf	setPortData@portNum+1,w
  2182  0385  3A00               	xorlw	0	; case 0
  2183  0386  1903               	skipnz
  2184  0387  2B89               	goto	l1654
  2185  0388  2B9A               	goto	l87
  2186  0389                     l1654:
  2187                           
  2188                           ; Switch size 1, requested type "simple"
  2189                           ; Number of cases is 5, Range of values is 0 to 4
  2190                           ; switch strategies available:
  2191                           ; Name         Instructions Cycles
  2192                           ; simple_byte           16     9 (average)
  2193                           ; direct_byte           23     8 (fixed)
  2194                           ; jumptable            260     6 (fixed)
  2195                           ;	Chosen strategy is simple_byte
  2196  0389  0870               	movf	setPortData@portNum,w
  2197  038A  3A00               	xorlw	0	; case 0
  2198  038B  1903               	skipnz
  2199  038C  2B6B               	goto	l1286
  2200  038D  3A01               	xorlw	1	; case 1
  2201  038E  1903               	skipnz
  2202  038F  2B70               	goto	l1288
  2203  0390  3A03               	xorlw	3	; case 2
  2204  0391  1903               	skipnz
  2205  0392  2B75               	goto	l1290
  2206  0393  3A01               	xorlw	1	; case 3
  2207  0394  1903               	skipnz
  2208  0395  2B7A               	goto	l1292
  2209  0396  3A07               	xorlw	7	; case 4
  2210  0397  1903               	skipnz
  2211  0398  2B7F               	goto	l1294
  2212  0399  2B9A               	goto	l87
  2213  039A                     l87:
  2214  039A  0008               	return
  2215  039B                     __end_of_setPortData:
  2216                           
  2217                           	psect	text10
  2218  03FE                     __ptext10:	
  2219 ;; *************** function _LCD_enable *****************
  2220 ;; Defined at:
  2221 ;;		line 7 in file "LCD.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;		None
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;		None
  2226 ;; Return value:  Size  Location     Type
  2227 ;;                  1    wreg      void 
  2228 ;; Registers used:
  2229 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2235 ;;      Params:         0       0       0       0       0
  2236 ;;      Locals:         0       0       0       0       0
  2237 ;;      Temps:          2       0       0       0       0
  2238 ;;      Totals:         2       0       0       0       0
  2239 ;;Total ram usage:        2 bytes
  2240 ;; Hardware stack levels used: 1
  2241 ;; Hardware stack levels required when called: 1
  2242 ;; This function calls:
  2243 ;;		_setPinData
  2244 ;; This function is called by:
  2245 ;;		_LCD_write
  2246 ;;		_LCD_cmd
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           
  2251                           ;psect for function _LCD_enable
  2252  03FE                     _LCD_enable:
  2253  03FE                     l1302:	
  2254                           ;incstack = 0
  2255                           ; Regs used in _LCD_enable: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2256                           
  2257                           
  2258                           ;LCD.c: 8:     setPinData(2, RC2, 1);
  2259  03FE  3002               	movlw	2
  2260  03FF  00F0               	movwf	setPinData@portNum
  2261  0400  3000               	movlw	0
  2262  0401  00F1               	movwf	setPinData@portNum+1
  2263  0402  1003               	clrc
  2264  0403  1283               	bcf	3,5	;RP0=0, select bank0
  2265  0404  1303               	bcf	3,6	;RP1=0, select bank0
  2266  0405  1907               	btfsc	7,2	;volatile
  2267  0406  1403               	setc
  2268  0407  3000               	movlw	0
  2269  0408  1803               	skipnc
  2270  0409  3001               	movlw	1
  2271  040A  00F8               	movwf	??_LCD_enable
  2272  040B  01F9               	clrf	??_LCD_enable+1
  2273  040C  0878               	movf	??_LCD_enable,w
  2274  040D  00F2               	movwf	setPinData@pinNum
  2275  040E  0879               	movf	??_LCD_enable+1,w
  2276  040F  00F3               	movwf	setPinData@pinNum+1
  2277  0410  3001               	movlw	1
  2278  0411  00F4               	movwf	setPinData@data
  2279  0412  3000               	movlw	0
  2280  0413  00F5               	movwf	setPinData@data+1
  2281  0414  120A  118A  264A  120A  118A  	fcall	_setPinData
  2282  0419                     l1304:
  2283                           
  2284                           ;LCD.c: 9:     _delay(100);
  2285  0419  3021               	movlw	33
  2286  041A  00F8               	movwf	??_LCD_enable
  2287  041B                     u687:
  2288  041B  0BF8               	decfsz	??_LCD_enable,f
  2289  041C  2C1B               	goto	u687
  2290  041D                     l1306:
  2291                           
  2292                           ;LCD.c: 10:     setPinData(2, RC2, 0);
  2293  041D  3002               	movlw	2
  2294  041E  00F0               	movwf	setPinData@portNum
  2295  041F  3000               	movlw	0
  2296  0420  00F1               	movwf	setPinData@portNum+1
  2297  0421  1003               	clrc
  2298  0422  1283               	bcf	3,5	;RP0=0, select bank0
  2299  0423  1303               	bcf	3,6	;RP1=0, select bank0
  2300  0424  1907               	btfsc	7,2	;volatile
  2301  0425  1403               	setc
  2302  0426  3000               	movlw	0
  2303  0427  1803               	skipnc
  2304  0428  3001               	movlw	1
  2305  0429  00F8               	movwf	??_LCD_enable
  2306  042A  01F9               	clrf	??_LCD_enable+1
  2307  042B  0878               	movf	??_LCD_enable,w
  2308  042C  00F2               	movwf	setPinData@pinNum
  2309  042D  0879               	movf	??_LCD_enable+1,w
  2310  042E  00F3               	movwf	setPinData@pinNum+1
  2311  042F  3000               	movlw	0
  2312  0430  00F4               	movwf	setPinData@data
  2313  0431  00F5               	movwf	setPinData@data+1
  2314  0432  120A  118A  264A  120A  118A  	fcall	_setPinData
  2315  0437                     l174:
  2316  0437  0008               	return
  2317  0438                     __end_of_LCD_enable:
  2318                           
  2319                           	psect	text11
  2320  064A                     __ptext11:	
  2321 ;; *************** function _setPinData *****************
  2322 ;; Defined at:
  2323 ;;		line 165 in file "MIO.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;  portNum         2    0[COMMON] int 
  2326 ;;  pinNum          2    2[COMMON] int 
  2327 ;;  data            2    4[COMMON] int 
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;		None
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      void 
  2332 ;; Registers used:
  2333 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2339 ;;      Params:         6       0       0       0       0
  2340 ;;      Locals:         0       0       0       0       0
  2341 ;;      Temps:          2       0       0       0       0
  2342 ;;      Totals:         8       0       0       0       0
  2343 ;;Total ram usage:        8 bytes
  2344 ;; Hardware stack levels used: 1
  2345 ;; This function calls:
  2346 ;;		Nothing
  2347 ;; This function is called by:
  2348 ;;		_main
  2349 ;;		_LCD_enable
  2350 ;;		_init_LCD
  2351 ;;		_LCD_write
  2352 ;;		_LCD_cmd
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356                           
  2357                           ;psect for function _setPinData
  2358  064A                     _setPinData:
  2359  064A                     l1248:	
  2360                           ;incstack = 0
  2361                           ; Regs used in _setPinData: [wreg-fsr0h+status,2+status,0]
  2362                           
  2363                           
  2364                           ;MIO.c: 166: if (data) {
  2365  064A  0874               	movf	setPinData@data,w
  2366  064B  0475               	iorwf	setPinData@data+1,w
  2367  064C  1903               	btfsc	3,2
  2368  064D  2E4F               	goto	u321
  2369  064E  2E50               	goto	u320
  2370  064F                     u321:
  2371  064F  2F0C               	goto	l1274
  2372  0650                     u320:
  2373  0650  2EA1               	goto	l1262
  2374  0651                     l1252:
  2375                           
  2376                           ;MIO.c: 169:                 PORTA |= (1 << pinNum);
  2377  0651  3001               	movlw	1
  2378  0652  00F6               	movwf	??_setPinData
  2379  0653  0A72               	incf	setPinData@pinNum,w
  2380  0654  2E57               	goto	u334
  2381  0655                     u335:
  2382  0655  1003               	clrc
  2383  0656  0DF6               	rlf	??_setPinData,f
  2384  0657                     u334:
  2385  0657  3EFF               	addlw	-1
  2386  0658  1D03               	skipz
  2387  0659  2E55               	goto	u335
  2388  065A  0876               	movf	??_setPinData,w
  2389  065B  00F7               	movwf	??_setPinData+1
  2390  065C  0877               	movf	??_setPinData+1,w
  2391  065D  1283               	bcf	3,5	;RP0=0, select bank0
  2392  065E  1303               	bcf	3,6	;RP1=0, select bank0
  2393  065F  0485               	iorwf	5,f	;volatile
  2394                           
  2395                           ;MIO.c: 170:                 break;
  2396  0660  2F22               	goto	l140
  2397  0661                     l1254:
  2398                           
  2399                           ;MIO.c: 172:                 PORTB |= (1 << pinNum);
  2400  0661  3001               	movlw	1
  2401  0662  00F6               	movwf	??_setPinData
  2402  0663  0A72               	incf	setPinData@pinNum,w
  2403  0664  2E67               	goto	u344
  2404  0665                     u345:
  2405  0665  1003               	clrc
  2406  0666  0DF6               	rlf	??_setPinData,f
  2407  0667                     u344:
  2408  0667  3EFF               	addlw	-1
  2409  0668  1D03               	skipz
  2410  0669  2E65               	goto	u345
  2411  066A  0876               	movf	??_setPinData,w
  2412  066B  00F7               	movwf	??_setPinData+1
  2413  066C  0877               	movf	??_setPinData+1,w
  2414  066D  1283               	bcf	3,5	;RP0=0, select bank0
  2415  066E  1303               	bcf	3,6	;RP1=0, select bank0
  2416  066F  0486               	iorwf	6,f	;volatile
  2417                           
  2418                           ;MIO.c: 173:                 break;
  2419  0670  2F22               	goto	l140
  2420  0671                     l1256:
  2421                           
  2422                           ;MIO.c: 175:                 PORTC |= (1 << pinNum);
  2423  0671  3001               	movlw	1
  2424  0672  00F6               	movwf	??_setPinData
  2425  0673  0A72               	incf	setPinData@pinNum,w
  2426  0674  2E77               	goto	u354
  2427  0675                     u355:
  2428  0675  1003               	clrc
  2429  0676  0DF6               	rlf	??_setPinData,f
  2430  0677                     u354:
  2431  0677  3EFF               	addlw	-1
  2432  0678  1D03               	skipz
  2433  0679  2E75               	goto	u355
  2434  067A  0876               	movf	??_setPinData,w
  2435  067B  00F7               	movwf	??_setPinData+1
  2436  067C  0877               	movf	??_setPinData+1,w
  2437  067D  1283               	bcf	3,5	;RP0=0, select bank0
  2438  067E  1303               	bcf	3,6	;RP1=0, select bank0
  2439  067F  0487               	iorwf	7,f	;volatile
  2440                           
  2441                           ;MIO.c: 176:                 break;
  2442  0680  2F22               	goto	l140
  2443  0681                     l1258:
  2444                           
  2445                           ;MIO.c: 178:                 PORTD |= (1 << pinNum);
  2446  0681  3001               	movlw	1
  2447  0682  00F6               	movwf	??_setPinData
  2448  0683  0A72               	incf	setPinData@pinNum,w
  2449  0684  2E87               	goto	u364
  2450  0685                     u365:
  2451  0685  1003               	clrc
  2452  0686  0DF6               	rlf	??_setPinData,f
  2453  0687                     u364:
  2454  0687  3EFF               	addlw	-1
  2455  0688  1D03               	skipz
  2456  0689  2E85               	goto	u365
  2457  068A  0876               	movf	??_setPinData,w
  2458  068B  00F7               	movwf	??_setPinData+1
  2459  068C  0877               	movf	??_setPinData+1,w
  2460  068D  1283               	bcf	3,5	;RP0=0, select bank0
  2461  068E  1303               	bcf	3,6	;RP1=0, select bank0
  2462  068F  0488               	iorwf	8,f	;volatile
  2463                           
  2464                           ;MIO.c: 179:                 break;
  2465  0690  2F22               	goto	l140
  2466  0691                     l1260:
  2467                           
  2468                           ;MIO.c: 181:                 PORTE |= (1 << pinNum);
  2469  0691  3001               	movlw	1
  2470  0692  00F6               	movwf	??_setPinData
  2471  0693  0A72               	incf	setPinData@pinNum,w
  2472  0694  2E97               	goto	u374
  2473  0695                     u375:
  2474  0695  1003               	clrc
  2475  0696  0DF6               	rlf	??_setPinData,f
  2476  0697                     u374:
  2477  0697  3EFF               	addlw	-1
  2478  0698  1D03               	skipz
  2479  0699  2E95               	goto	u375
  2480  069A  0876               	movf	??_setPinData,w
  2481  069B  00F7               	movwf	??_setPinData+1
  2482  069C  0877               	movf	??_setPinData+1,w
  2483  069D  1283               	bcf	3,5	;RP0=0, select bank0
  2484  069E  1303               	bcf	3,6	;RP1=0, select bank0
  2485  069F  0489               	iorwf	9,f	;volatile
  2486                           
  2487                           ;MIO.c: 182:                 break;
  2488  06A0  2F22               	goto	l140
  2489  06A1                     l1262:
  2490                           
  2491                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2492                           ; Switch size 1, requested type "simple"
  2493                           ; Number of cases is 1, Range of values is 0 to 0
  2494                           ; switch strategies available:
  2495                           ; Name         Instructions Cycles
  2496                           ; simple_byte            4     3 (average)
  2497                           ; direct_byte           11     8 (fixed)
  2498                           ; jumptable            260     6 (fixed)
  2499                           ;	Chosen strategy is simple_byte
  2500  06A1  0871               	movf	setPinData@portNum+1,w
  2501  06A2  3A00               	xorlw	0	; case 0
  2502  06A3  1903               	skipnz
  2503  06A4  2EA6               	goto	l1656
  2504  06A5  2F22               	goto	l140
  2505  06A6                     l1656:
  2506                           
  2507                           ; Switch size 1, requested type "simple"
  2508                           ; Number of cases is 5, Range of values is 0 to 4
  2509                           ; switch strategies available:
  2510                           ; Name         Instructions Cycles
  2511                           ; simple_byte           16     9 (average)
  2512                           ; direct_byte           23     8 (fixed)
  2513                           ; jumptable            260     6 (fixed)
  2514                           ;	Chosen strategy is simple_byte
  2515  06A6  0870               	movf	setPinData@portNum,w
  2516  06A7  3A00               	xorlw	0	; case 0
  2517  06A8  1903               	skipnz
  2518  06A9  2E51               	goto	l1252
  2519  06AA  3A01               	xorlw	1	; case 1
  2520  06AB  1903               	skipnz
  2521  06AC  2E61               	goto	l1254
  2522  06AD  3A03               	xorlw	3	; case 2
  2523  06AE  1903               	skipnz
  2524  06AF  2E71               	goto	l1256
  2525  06B0  3A01               	xorlw	1	; case 3
  2526  06B1  1903               	skipnz
  2527  06B2  2E81               	goto	l1258
  2528  06B3  3A07               	xorlw	7	; case 4
  2529  06B4  1903               	skipnz
  2530  06B5  2E91               	goto	l1260
  2531  06B6  2F22               	goto	l140
  2532  06B7                     l1264:
  2533                           
  2534                           ;MIO.c: 190:                 PORTA &= ~(1 << pinNum);
  2535  06B7  3001               	movlw	1
  2536  06B8  00F6               	movwf	??_setPinData
  2537  06B9  0A72               	incf	setPinData@pinNum,w
  2538  06BA  2EBD               	goto	u384
  2539  06BB                     u385:
  2540  06BB  1003               	clrc
  2541  06BC  0DF6               	rlf	??_setPinData,f
  2542  06BD                     u384:
  2543  06BD  3EFF               	addlw	-1
  2544  06BE  1D03               	skipz
  2545  06BF  2EBB               	goto	u385
  2546  06C0  0876               	movf	??_setPinData,w
  2547  06C1  3AFF               	xorlw	255
  2548  06C2  00F7               	movwf	??_setPinData+1
  2549  06C3  0877               	movf	??_setPinData+1,w
  2550  06C4  1283               	bcf	3,5	;RP0=0, select bank0
  2551  06C5  1303               	bcf	3,6	;RP1=0, select bank0
  2552  06C6  0585               	andwf	5,f	;volatile
  2553                           
  2554                           ;MIO.c: 191:                 break;
  2555  06C7  2F22               	goto	l140
  2556  06C8                     l1266:
  2557                           
  2558                           ;MIO.c: 193:                 PORTB &= ~(1 << pinNum);
  2559  06C8  3001               	movlw	1
  2560  06C9  00F6               	movwf	??_setPinData
  2561  06CA  0A72               	incf	setPinData@pinNum,w
  2562  06CB  2ECE               	goto	u394
  2563  06CC                     u395:
  2564  06CC  1003               	clrc
  2565  06CD  0DF6               	rlf	??_setPinData,f
  2566  06CE                     u394:
  2567  06CE  3EFF               	addlw	-1
  2568  06CF  1D03               	skipz
  2569  06D0  2ECC               	goto	u395
  2570  06D1  0876               	movf	??_setPinData,w
  2571  06D2  3AFF               	xorlw	255
  2572  06D3  00F7               	movwf	??_setPinData+1
  2573  06D4  0877               	movf	??_setPinData+1,w
  2574  06D5  1283               	bcf	3,5	;RP0=0, select bank0
  2575  06D6  1303               	bcf	3,6	;RP1=0, select bank0
  2576  06D7  0586               	andwf	6,f	;volatile
  2577                           
  2578                           ;MIO.c: 194:                 break;
  2579  06D8  2F22               	goto	l140
  2580  06D9                     l1268:
  2581                           
  2582                           ;MIO.c: 196:                 PORTC &= ~(1 << pinNum);
  2583  06D9  3001               	movlw	1
  2584  06DA  00F6               	movwf	??_setPinData
  2585  06DB  0A72               	incf	setPinData@pinNum,w
  2586  06DC  2EDF               	goto	u404
  2587  06DD                     u405:
  2588  06DD  1003               	clrc
  2589  06DE  0DF6               	rlf	??_setPinData,f
  2590  06DF                     u404:
  2591  06DF  3EFF               	addlw	-1
  2592  06E0  1D03               	skipz
  2593  06E1  2EDD               	goto	u405
  2594  06E2  0876               	movf	??_setPinData,w
  2595  06E3  3AFF               	xorlw	255
  2596  06E4  00F7               	movwf	??_setPinData+1
  2597  06E5  0877               	movf	??_setPinData+1,w
  2598  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  2599  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  2600  06E8  0587               	andwf	7,f	;volatile
  2601                           
  2602                           ;MIO.c: 197:                 break;
  2603  06E9  2F22               	goto	l140
  2604  06EA                     l1270:
  2605                           
  2606                           ;MIO.c: 199:                 PORTD &= ~(1 << pinNum);
  2607  06EA  3001               	movlw	1
  2608  06EB  00F6               	movwf	??_setPinData
  2609  06EC  0A72               	incf	setPinData@pinNum,w
  2610  06ED  2EF0               	goto	u414
  2611  06EE                     u415:
  2612  06EE  1003               	clrc
  2613  06EF  0DF6               	rlf	??_setPinData,f
  2614  06F0                     u414:
  2615  06F0  3EFF               	addlw	-1
  2616  06F1  1D03               	skipz
  2617  06F2  2EEE               	goto	u415
  2618  06F3  0876               	movf	??_setPinData,w
  2619  06F4  3AFF               	xorlw	255
  2620  06F5  00F7               	movwf	??_setPinData+1
  2621  06F6  0877               	movf	??_setPinData+1,w
  2622  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  2623  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  2624  06F9  0588               	andwf	8,f	;volatile
  2625                           
  2626                           ;MIO.c: 200:                 break;
  2627  06FA  2F22               	goto	l140
  2628  06FB                     l1272:
  2629                           
  2630                           ;MIO.c: 202:                 PORTE &= ~(1 << pinNum);
  2631  06FB  3001               	movlw	1
  2632  06FC  00F6               	movwf	??_setPinData
  2633  06FD  0A72               	incf	setPinData@pinNum,w
  2634  06FE  2F01               	goto	u424
  2635  06FF                     u425:
  2636  06FF  1003               	clrc
  2637  0700  0DF6               	rlf	??_setPinData,f
  2638  0701                     u424:
  2639  0701  3EFF               	addlw	-1
  2640  0702  1D03               	skipz
  2641  0703  2EFF               	goto	u425
  2642  0704  0876               	movf	??_setPinData,w
  2643  0705  3AFF               	xorlw	255
  2644  0706  00F7               	movwf	??_setPinData+1
  2645  0707  0877               	movf	??_setPinData+1,w
  2646  0708  1283               	bcf	3,5	;RP0=0, select bank0
  2647  0709  1303               	bcf	3,6	;RP1=0, select bank0
  2648  070A  0589               	andwf	9,f	;volatile
  2649                           
  2650                           ;MIO.c: 203:                 break;
  2651  070B  2F22               	goto	l140
  2652  070C                     l1274:
  2653                           
  2654                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2655                           ; Switch size 1, requested type "simple"
  2656                           ; Number of cases is 1, Range of values is 0 to 0
  2657                           ; switch strategies available:
  2658                           ; Name         Instructions Cycles
  2659                           ; simple_byte            4     3 (average)
  2660                           ; direct_byte           11     8 (fixed)
  2661                           ; jumptable            260     6 (fixed)
  2662                           ;	Chosen strategy is simple_byte
  2663  070C  0871               	movf	setPinData@portNum+1,w
  2664  070D  3A00               	xorlw	0	; case 0
  2665  070E  1903               	skipnz
  2666  070F  2F11               	goto	l1658
  2667  0710  2F22               	goto	l140
  2668  0711                     l1658:
  2669                           
  2670                           ; Switch size 1, requested type "simple"
  2671                           ; Number of cases is 5, Range of values is 0 to 4
  2672                           ; switch strategies available:
  2673                           ; Name         Instructions Cycles
  2674                           ; simple_byte           16     9 (average)
  2675                           ; direct_byte           23     8 (fixed)
  2676                           ; jumptable            260     6 (fixed)
  2677                           ;	Chosen strategy is simple_byte
  2678  0711  0870               	movf	setPinData@portNum,w
  2679  0712  3A00               	xorlw	0	; case 0
  2680  0713  1903               	skipnz
  2681  0714  2EB7               	goto	l1264
  2682  0715  3A01               	xorlw	1	; case 1
  2683  0716  1903               	skipnz
  2684  0717  2EC8               	goto	l1266
  2685  0718  3A03               	xorlw	3	; case 2
  2686  0719  1903               	skipnz
  2687  071A  2ED9               	goto	l1268
  2688  071B  3A01               	xorlw	1	; case 3
  2689  071C  1903               	skipnz
  2690  071D  2EEA               	goto	l1270
  2691  071E  3A07               	xorlw	7	; case 4
  2692  071F  1903               	skipnz
  2693  0720  2EFB               	goto	l1272
  2694  0721  2F22               	goto	l140
  2695  0722                     l140:
  2696  0722  0008               	return
  2697  0723                     __end_of_setPinData:
  2698  007E                     btemp	set	126	;btemp
  2699  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 


Critical Paths under _main in COMMON

    _init_LCD->_LCD_clear
    _LCD_clear->_LCD_cmd
    _LCD_cmd->_LCD_enable
    _LCD_write->_LCD_enable
    _LCD_enable->_setPinData

Critical Paths under _main in BANK0

    _main->_init_LCD

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   18124
                                              2 BANK0      1     1      0
                          _LCD_write
                           _init_LCD
                         _setPinData
                          _setPinDir
                         _setPortDir
                      _togglePinData
                     _togglePortData
 ---------------------------------------------------------------------------------
 (1) _togglePortData                                       3     1      2      98
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _togglePinData                                        6     2      4     284
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _init_LCD                                             2     2      0   10754
                                              0 BANK0      2     2      0
                          _LCD_clear
                            _LCD_cmd
                         _setPinData
                          _setPinDir
                         _setPortDir
 ---------------------------------------------------------------------------------
 (1) _setPortDir                                           4     0      4     370
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _setPinDir                                            8     2      6    1198
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            1     1      0    3766
                                             13 COMMON     1     1      0
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_cmd                                              3     3      0    3766
                                             10 COMMON     3     3      0
                         _LCD_enable
                         _setPinData
                        _setPortData
 ---------------------------------------------------------------------------------
 (1) _LCD_write                                            3     3      0    3766
                                             10 COMMON     3     3      0
                         _LCD_enable
                         _setPinData
                        _setPortData
 ---------------------------------------------------------------------------------
 (3) _setPortData                                          4     0      4     436
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) _LCD_enable                                           2     2      0    1654
                                              8 COMMON     2     2      0
                         _setPinData
 ---------------------------------------------------------------------------------
 (1) _setPinData                                           8     2      6    1654
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_write
     _LCD_enable
       _setPinData
     _setPinData
     _setPortData
   _init_LCD
     _LCD_clear
       _LCD_cmd
         _LCD_enable
         _setPinData
         _setPortData
     _LCD_cmd
     _setPinData
     _setPinDir
     _setPortDir
   _setPinData
   _setPinDir
   _setPortDir
   _togglePinData
   _togglePortData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Nov 10 21:18:12 2021

                     l21 0478                       l76 052B                       l87 039A  
                     l98 0472           ?_togglePinData 0070              ?_LCD_enable 0070  
                    l140 0722                      l119 07FB                      l151 0593  
                    l180 0649                      l174 0437                      l183 03FD  
                    l177 0369                      l195 03CB                      _RC0 0038  
                    _RC1 0039                      _RC2 003A                      u320 0650  
                    u321 064F                      u404 06DF                      u405 06DD  
                    u414 06F0                      u334 0657                      u430 04D1  
                    u415 06EE                      u335 0655                      u431 04D0  
                    u424 0701                      u344 0667                      u504 0796  
                    u440 0729                      u425 06FF                      u345 0665  
                    u505 0794                      u441 0728                      u354 0677  
                    u514 07A7                      u355 0675                      u515 07A5  
                    u364 0687                      u524 07B8                      u365 0685  
                    u525 07B6                      u374 0697                      u534 07C9  
                    u454 0730                      u375 0695                      u535 07C7  
                    u455 072E                      u384 06BD                      u544 07DA  
                    u464 0740                      u385 06BB                      u545 07D8  
                    u465 073E                      u617 04AE                      u394 06CE  
                    u474 0750                      u554 0533                      u395 06CC  
                    u475 074E                      u627 060D                      u555 0531  
                    u484 0760                      u564 0543                      u485 075E  
                    u637 061F                      u565 0541                      u494 0770  
                    u574 0553                      u495 076E                      u647 062C  
                    u575 0551                      _PSA 040B                      u584 0563  
                    u657 0639                      u585 0561                      u594 0573  
                    u667 0646                      u595 0571                      u677 0367  
                    u687 041B     togglePinData@portNum 0070          __end_of_LCD_cmd 03CC  
                   l1302 03FE                     l1310 04CB                     l1304 0419  
                   l1320 04E1                     l1400 063C                     l1306 041D  
                   l1330 0509                     l1322 04E6                     l1314 04D2  
                   l1402 0642                     l1410 053D                     l1260 0691  
                   l1252 0651                     l1404 03CD                     l1308 039C  
                   l1332 050D                     l1316 04D7                     l1324 04EB  
                   l1412 054D                     l1270 06EA                     l1254 0661  
                   l1262 06A1                     l1350 072A                     l1334 0511  
                   l1326 0501                     l1318 04DC                     l1414 055D  
                   l1406 052C                     l1430 0447                     l1272 06FB  
                   l1264 06B7                     l1256 0671                     l1248 064A  
                   l1352 073A                     l1360 077A                     l1328 0505  
                   l1336 0515                     l1416 056D                     l1408 052D  
                   l1432 044E                     l1424 0438                     l1266 06C8  
                   l1258 0681                     l1274 070C                     l1290 0375  
                   l1370 07D4                     l1362 0790                     l1354 074A  
                   l1346 0723                     l1418 057D                     l1434 0455  
                   l1426 0439                     l1450 0473                     l1268 06D9  
                   l1292 037A                     l1284 036A                     l1364 07A1  
                   l1356 075A                     l1372 07E5                     l1428 0440  
                   l1436 045C                     l1452 04AA                     l1294 037F  
                   l1286 036B                     l1382 035F                     l1366 07B2  
                   l1358 076A                     l1390 0610                     l1454 04B1  
                   l1288 0370                     l1296 0384                     l1384 0365  
                   l1368 07C3                     l1392 0615                     l1456 04BE  
                   l1650 077F                     l1394 061B                     l1386 0594  
                   l1642 0461                     l1652 07EA                     l1396 0628  
                   l1388 0609                     l1644 0582                     l1654 0389  
                   l1646 04F0                     l1398 062F                     l1656 06A6  
                   l1648 051A                     l1658 0711          ?_togglePortData 0070  
                   _main 0473                     btemp 007E                     start 0000  
     __size_of_LCD_clear 000B       __size_of_LCD_write 0032                    ?_main 0070  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    status 0003                    wtemp0 007E  
    __size_of_LCD_enable 003A          __initialization 07FC             __end_of_main 04CB  
        ??_togglePinData 0074                   ??_main 0022          setPortData@data 0072  
              ??_LCD_cmd 007A        __end_of_LCD_clear 036A          setPortDir@state 0072  
      __end_of_LCD_write 03FE             ?_setPortData 0070                   _TMR0IE 005D  
       __end_of_init_LCD 064A         setPinData@pinNum 0072  __end_of__initialization 07FC  
     setPortData@portNum 0070           __pcstackCOMMON 0070         setPinDir@portNum 0070  
           ??_LCD_enable 0078         ??_togglePortData 0072       __end_of_LCD_enable 0438  
             __pmaintext 0473       __size_of_setPinDir 00D9                  _LCD_cmd 039B  
  togglePortData@portNum 0070                ?_init_LCD 0070     __size_of_setPortData 0031  
                __ptext1 0438                  __ptext2 052C                  __ptext3 0594  
                __ptext4 04CB                  __ptext5 0723                  __ptext6 035F  
                __ptext7 039B                  __ptext8 03CC                  __ptext9 036A  
              _LCD_clear 035F     end_of_initialization 07FC        __end_of_setPinDir 07FC  
             _setPinData 064A               ??_init_LCD 0020                _LCD_write 03CC  
             _setPortDir 04CB        setPinData@portNum 0070    __end_of_togglePinData 0594  
             ?_LCD_clear 0070      togglePinData@pinNum 0072               ?_LCD_write 0070  
             LCD_cmd@cmd 007C      start_initialization 07FC              ?_setPinData 0070  
            ?_setPortDir 0070                 ?_LCD_cmd 0070                ___latbits 0002  
          __pcstackBANK0 0020          setPinDir@pinNum 0072              ??_LCD_clear 007D  
            ??_LCD_write 007A        __size_of_init_LCD 00B6        setPortDir@portNum 0070  
          LCD_write@data 007C      __size_of_setPinData 00D9      __size_of_setPortDir 0061  
          ??_setPortData 0074                _setPinDir 0723  __size_of_togglePortData 003B  
       __size_of_LCD_cmd 0031               ?_setPinDir 0070      __end_of_setPortData 039B  
         setPinData@data 0074           setPinDir@state 0074                 __ptext10 03FE  
               __ptext11 064A             ??_setPinData 0076                 _init_LCD 0594  
           ??_setPortDir 0074            __size_of_main 0058   __size_of_togglePinData 0068  
     __end_of_setPinData 0723               _LCD_enable 03FE       __end_of_setPortDir 052C  
            _setPortData 036A              ??_setPinDir 0076           _togglePortData 0438  
          _togglePinData 052C               _OPTION_REG 0081   __end_of_togglePortData 0473  
